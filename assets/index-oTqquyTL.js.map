{"version":3,"mappings":"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AS,UACT,OAAQ,QACR,SAAU,OACd,EAGaC,GAAe,CACxB,IAAK,OACL,KAAM,OACN,OAAQ,MACR,KAAM,OACN,OAAQ,MACR,QAAS,MACT,KAAM,MACN,MAAO,OACP,OAAQ,MACR,OAAQ,MACR,OAAQ,MACR,OAAQ,MACR,KAAM,OACN,UAAW,MACX,QAAS,MACT,QAAS,QACT,SAAU,OACV,OAAQ,OACR,MAAO,OACP,QAAS,MACT,OAAQ,OACR,KAAM,QACN,OAAQ,MACR,QAAS,MACb,EAGaC,GAAe,CACxB,OAAQ,OACR,SAAU,UACV,QAAS,QACT,UAAW,QACX,UAAW,OACX,SAAU,OACV,SAAU,OACV,WAAY,QACZ,WAAY,QACZ,OAAQ,OACR,QAAS,OACT,MAAO,OACP,MAAO,QACP,QAAS,QACT,KAAM,OACN,IAAK,MACL,QAAS,QACT,QAAS,MACb,EAGaC,GAAa,CACtB,MAAO,OACP,UAAW,QACX,SAAU,MACV,SAAU,QACV,SAAU,YACV,SAAU,WACV,UAAW,QACX,UAAW,YACX,UAAW,WACX,SAAU,OACV,SAAU,YACV,SAAU,WACV,QAAS,QACT,SAAU,QACV,OAAQ,OACR,QAAS,QACT,OAAQ,QACR,MAAO,OACP,OAAQ,MACZ,EAGaC,GAAoB,CAC7B,OAAQ,CACJ,KAAM,SACN,cAAe,CACX,SACA,eACA,SACA,QACA,cACZ,CACA,EACI,QAAS,CACL,KAAM,OACN,cAAe,CACX,WACA,SACA,gBACA,SACA,QACZ,CACA,EACI,UAAW,CACP,KAAM,UACN,cAAe,CACX,OACA,MACA,KACA,UACA,OACZ,CACA,EACI,eAAgB,CACZ,KAAM,SACN,cAAe,CACX,MACA,YACA,QACA,iBACA,MACZ,CACA,EACI,KAAM,CACF,KAAM,OACN,cAAe,CACX,aACA,SACA,QACA,cACZ,CACA,EACI,WAAY,CACR,KAAM,SACN,cAAe,CACX,eACA,cACA,SACA,SACZ,CACA,EACI,UAAW,CACP,KAAM,QACN,cAAe,CACX,YACA,QACA,QACA,UACZ,CACA,EACI,cAAe,CACX,KAAM,UACN,cAAe,CACX,SACA,SACA,QACA,QACZ,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,CACL,CACI,MAAO,uBACP,IAAK,qFACL,SAAU,OACV,SAAU,OACV,QAAS,gBACrB,EACQ,CACI,MAAO,iBACP,IAAK,sEACL,SAAU,OACV,SAAU,OACV,QAAS,iBACrB,EACQ,CACI,MAAO,eACP,IAAK,0EACL,SAAU,OACV,SAAU,SACV,QAAS,gBACrB,CACA,EAGI,WAAY,CACR,CACI,MAAO,mBACP,IAAK,8DACL,SAAU,SACV,SAAU,OACV,QAAS,iBACrB,EACQ,CACI,MAAO,YACP,IAAK,wDACL,SAAU,SACV,SAAU,OACV,QAAS,eACrB,EACQ,CACI,MAAO,gBACP,IAAK,wDACL,SAAU,SACV,SAAU,SACV,QAAS,cACrB,CACA,EAGI,SAAU,CACN,CACI,MAAO,gBACP,IAAK,2EACL,SAAU,QACV,SAAU,SACV,QAAS,gBACrB,EACQ,CACI,MAAO,gBACP,IAAK,gEACL,SAAU,QACV,SAAU,SACV,QAAS,gBACrB,EACQ,CACI,MAAO,oBACP,IAAK,uDACL,SAAU,QACV,SAAU,SACV,QAAS,gBACrB,CACA,EAGI,eAAgB,CACZ,CACI,MAAO,iBACP,IAAK,oEACL,SAAU,SACV,SAAU,SACV,QAAS,iBACrB,EACQ,CACI,MAAO,iBACP,IAAK,kEACL,SAAU,SACV,SAAU,OACV,QAAS,gBACrB,CACA,CACA,EAGaC,GAAmB,CAC5B,QAAS,CACL,MAAO,2BACP,SAAU,CACN,6CACA,0CACA,6BACZ,CACA,EACI,SAAU,CACN,MAAO,yBACP,SAAU,CACN,mCACA,+BACA,oCACZ,CACA,EACI,MAAO,CACH,MAAO,qBACP,SAAU,CACN,6CACA,2BACA,qCACZ,CACA,EACI,MAAO,CACH,MAAO,4BACP,SAAU,CACN,oCACA,iCACA,8BACZ,CACA,CACA,EAGaC,GAAgB,CACzB,SAAU,CACN,CACI,MAAO,WACP,IAAK,yEACL,QAAS,iBACrB,EACQ,CACI,MAAO,MACP,IAAK,mEACL,QAAS,gBACrB,CACA,EACI,OAAQ,CACJ,CACI,MAAO,aACP,IAAK,kEACL,QAAS,gBACrB,CACA,CACA,EAGO,MAAMC,E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","names":["ISRAELI_TAX_BRACKETS_2024","BITUACH_LEUMI_RATES_2024","HEALTH_INSURANCE_RATES_2024","TAX_CREDITS_2024","IsraeliSalaryCalculator","grossMonthly","options","maritalStatus","children","isStudent","isOleh","isDisabled","pensionContribution","hasCompanyCar","companyCarValue","calculations","pensionDeduction","taxableIncome","incomeTax","totalCredits","bituachLeumi","healthInsurance","netIncomeTax","totalTaxes","totalDeductions","grossAnnual","monthly","monthlyIncome","remainingIncome","totalTax","breakdown","bracket","taxableInThisBracket","taxInBracket","formatCurrency","credits","sum","credit","additionalIncome","targetNet","low","high","tolerance","mid","requiredGross","verification","salaries","salary","netTargets","target","result","calculation","showDetailed","currency","format","x","formatNumber","summary","_a","amount","number","gross","FINANCIAL_TERMS","ISRAELI_TERMS","ACTION_TERMS","STATUS_TERMS","TIME_TERMS","HEBREW_CATEGORIES","FINANCIAL_PHRASES","ERROR_MESSAGES","SUCCESS_MESSAGES","HebrewTermManager","englishTerm","phraseKey","categoryKey","errorKey","successKey","query","results","queryLower","english","hebrew","domain","key","term","phrase","error","success","ISRAELI_FINANCIAL_TIPS","MONTHLY_INSIGHTS","SEASONAL_TIPS","IsraeliFinancialTipsManager","category","highPriorityTips","categoryTips","tip","month","monthMapping","season","userData","personalizedTips","hasChildren","hasProperty","age","allTips","today","tipIndex","keyword","score","ThemeToggle","savedTheme","button","iconContainer","labelContainer","theme","newTheme","e","container","targetContainer","icon","label","TransactionForm","isEdit","transaction","_b","_c","_d","_e","_f","DataManager","__vitePreload","index","categories","categorySelect","expenseCategories","cat","incomeCategories","expenseGroup","option","incomeGroup","accounts","accountSelect","account","amountInput","amountPreview","updatePreview","value","tagsInput","suggestionsContainer","suggestion","tagText","selectedTagsContainer","tag","btn","hiddenTagsInput","filtered","notesTextarea","currentCountSpan","formattingButtons","noteTemplates","updateCharacterCount","length","template","autoResize","textarea","start","end","text","bulletText","line","hebrewDate","templateText","currentText","newText","before","after","newCursorPos","status","statusSelect","approvalDetails","quickActionBtns","newStatus","approvalDateInput","now","localDateTime","action","statusBadge","approverInput","approvalNotesInput","currentUser","messages","type","fileInput","uploadArea","files","file","receiptData","resolve","reject","reader","previewContainer","receipt","receiptId","clearAllBtn","isImage","sizeMB","r","trackLocationCheckbox","locationContainer","detectLocationBtn","searchLocationBtn","clearLocationBtn","viewMapBtn","locationInput","detectBtn","originalText","position","coords","address","response","data","geocodeData","searchQuery","searchResults","item","location","locationData","locationDetails","addressText","coordsText","Modal","modalContainer","modal","mapContent","splitCheckbox","splitContainer","addSplitBtn","autoSplitBtn","percentageSplitBtn","clearSplitsBtn","splitData","splitId","splitItem","newCategorySelect","splitItemsList","i","totalAmount","percentageInput","percentage","categoryId","description","splitTotal","remaining","splitTotalAmount","remainingAmount","remainingValue","validationMessage","message","transactionType","filteredCategories","currentValue","amountPerSplit","percentagePerSplit","content","updateTotal","inputs","total","input","errors","missingCategories","maxLength","deleteBtn","radio","recurringCheckbox","recurringOptions","recurringFrequency","recurringEndDate","recurringCount","element","formData","transactionData","CategoryManager$2","categoryManagerContainer","categoryManager","isRecurring","previewElement","frequency","endDate","count","startDate","preview","nextDate","dateStr","date","splitValidation","quickOptions","CategoryManager$1","isAddMode","isSelectMode","isSelected","typeIcon","typeText","expenseIcons","incomeIcons","searchInput","form","iconInput","opt","categoryType","categoryList","header","categoryData","id","categoryIds","CategoryManager","DATA_SCHEMA","DEFAULT_CATEGORIES","ISRAELI_BANKS","formatters","num","Transaction","Category","Budget","progress","Account","Settings","ModelFactory","HEBREW_ERRORS","StorageManager","test","currentVersion","defaultCategories","defaultAccount","defaultSettings","storageKey","existing","existingItem","items","parsed","filterFn","updates","ids","totalSize","factory","settings","from","to","storage","StorageAPI","txn","txnDate","accountId","budget","VALIDATION_MESSAGES","field","min","max","Validators","startErrors","endErrors","cleanPhone","mobileRegex","landlineRegex","cleanId","digit","cleanAccount","numberErrors","TransactionValidator","descErrors","amountErrors","dateErrors","CategoryValidator","nameErrors","budgetErrors","BudgetValidator","periodErrors","AccountValidator","accountErrors","balanceErrors","DataValidator","validationResult","fieldErrors","formatted","DataExporter","backup","dateRange","transactions","categoryMap","accountMap","acc","csvData","bankFormat","exportResult","blob","url","link","headers","csvRows","row","values","dateString","DataImporter","jsonContent","csvContent","lines","rowData","dateFields","descFields","amountFields","categoryFields","accountFields","current","inQuotes","char","possibleFields","creditFields","debitFields","creditAmount","debitAmount","categoryName","accountName","DataBackup","SimpleEncryption","userAgent","timestamp","random","textBytes","keyBytes","encrypted","encryptedText","decrypted","DataEncryption","enabled","dataType","sensitiveFieldsForType","obj","sensitiveFields","decryptedValue","numValue","randomData","encryptedData","enable","storageKeys","processedData","dataEncryption","EncryptionAPI","HebrewSearch","normalizedText","normalizedQuery","textWords","queryWord","textWord","fields","DataFilter","criteria","FinancialAnalytics","totals","b","monthsBack","trends","monthDate","monthStart","monthEnd","monthTransactions","monthTotals","budgets","budgetTransactions","spent","periodDays","savingsRate","dailyPattern","dailyNames","monthlyPattern","monthlyNames","limit","days","recentTransactions","a","SearchAPI","additionalFilters","months","MIGRATIONS","updated","DataMigration","aParts","bParts","aPart","bPart","targetVersion","backupKey","allData","versions","version","migration","errorMessage","DataIntegrityChecker","transactionCheck","categoryCheck","budgetCheck","accountCheck","refCheck","warnings","validCount","validationErrors","names","accountNumbers","accountIds","usedCategories","usedAccounts","orphanedTransactions","expiredBudgets","MigrationAPI","DataSystem","migrationResult","integrityCheck","repairResult","stats","dataSystem","DataAPI","initializeApp","loadScriptBasedComponents","loading","app","setupEventListeners","initializeHebrewFormatting","checkStoredData","initializeUIComponents","initializeThemeSystem","componentFiles","loadScript","missingComponents","comp","src","script","showComponentDemo","section","getSectionName","demo","mainContent","originalContent","backButton","addDemoButton","initializeKeyboardShortcuts","headerContent","demoButton","currentTaxYear","themeToggle","headerActions","toggleContainer","toggleButton","registration","registrationError"],"ignoreList":[],"sources":["../../src/utils/israeli-salary-calculator.js","../../src/utils/hebrew-financial-terms.js","../../src/utils/israeli-financial-tips.js","../../src/components/ThemeToggle.js","../../src/components/TransactionForm.js","../../src/components/CategoryManager.js","../../src/data/schema.js","../../src/data/models.js","../../src/data/storage.js","../../src/data/validation.js","../../src/data/export.js","../../src/data/encryption.js","../../src/data/analytics.js","../../src/data/migration.js","../../src/data/index.js","../../src/main.js"],"sourcesContent":["/**\n * Israeli Salary Calculator with Tax Brackets\n * Calculates net salary, taxes, and deductions according to Israeli tax law\n */\n\n// Israeli tax brackets for 2024 (amounts in NIS)\nconst ISRAELI_TAX_BRACKETS_2024 = [\n    { min: 0, max: 6790, rate: 0.10, name: 'מדרגה ראשונה' },           // 10%\n    { min: 6790, max: 9730, rate: 0.14, name: 'מדרגה שנייה' },          // 14%  \n    { min: 9730, max: 15620, rate: 0.20, name: 'מדרגה שלישית' },        // 20%\n    { min: 15620, max: 21709, rate: 0.31, name: 'מדרגה רביעית' },      // 31%\n    { min: 21709, max: 45180, rate: 0.35, name: 'מדרגה חמישית' },       // 35%\n    { min: 45180, max: 58510, rate: 0.47, name: 'מדרגה שישית' },        // 47%\n    { min: 58510, max: Infinity, rate: 0.50, name: 'מדרגה שביעית' }     // 50%\n];\n\n// National Insurance (Bituach Leumi) rates for 2024\nconst BITUACH_LEUMI_RATES_2024 = {\n    employee: {\n        rate: 0.04,              // 4% \n        maxAmount: 6331,         // Maximum monthly amount\n        ceiling: 158280          // Monthly salary ceiling (NIS)\n    },\n    employer: {\n        rate: 0.0345,            // 3.45%\n        maxAmount: 5460,         // Maximum monthly amount  \n        ceiling: 158280          // Monthly salary ceiling (NIS)\n    }\n};\n\n// Health Insurance rates for 2024\nconst HEALTH_INSURANCE_RATES_2024 = {\n    rate: 0.031,                 // 3.1%\n    additionalRate: 0.05,        // 5% for high earners\n    threshold: 6331,             // Monthly threshold for additional rate\n    ceiling: 158280              // Monthly salary ceiling (NIS)\n};\n\n// Personal tax credits for 2024 (monthly amounts)\nconst TAX_CREDITS_2024 = {\n    basic: 2320,                 // Basic personal credit\n    married: 2320,               // Married credit (additional)\n    child: 2320,                 // Credit per child under 18\n    student: 1160,               // Student credit\n    oleh: 2320,                  // New immigrant credit (7 years)\n    disabled: 2900               // Disabled person credit\n};\n\nexport class IsraeliSalaryCalculator {\n    constructor() {\n        this.taxBrackets = ISRAELI_TAX_BRACKETS_2024;\n        this.bituachLeumiRates = BITUACH_LEUMI_RATES_2024;\n        this.healthInsuranceRates = HEALTH_INSURANCE_RATES_2024;\n        this.taxCredits = TAX_CREDITS_2024;\n    }\n\n    // Calculate monthly net salary from gross\n    calculateMonthlySalary(grossMonthly, options = {}) {\n        const {\n            maritalStatus = 'single',      // 'single', 'married'\n            children = 0,                  // Number of children under 18\n            isStudent = false,             // Student status\n            isOleh = false,               // New immigrant status (first 7 years)\n            isDisabled = false,           // Disabled status\n            pensionContribution = 0.06,   // Pension contribution rate (6% default)\n            hasCompanyCar = false,        // Company car benefit\n            companyCarValue = 0           // Monthly company car value for tax\n        } = options;\n\n        const calculations = {\n            gross: grossMonthly,\n            deductions: {},\n            taxes: {},\n            credits: {},\n            net: 0,\n            breakdown: []\n        };\n\n        // Step 1: Calculate pension contribution (before tax)\n        const pensionDeduction = grossMonthly * pensionContribution;\n        calculations.deductions.pension = pensionDeduction;\n        const pensionableIncome = grossMonthly - pensionDeduction;\n\n        // Step 2: Add company car benefit to taxable income\n        let taxableIncome = pensionableIncome;\n        if (hasCompanyCar && companyCarValue > 0) {\n            taxableIncome += companyCarValue;\n            calculations.deductions.companyCarTax = companyCarValue;\n        }\n\n        // Step 3: Calculate income tax\n        const incomeTax = this.calculateIncomeTax(taxableIncome);\n        calculations.taxes.income = incomeTax.total;\n        calculations.breakdown.push(...incomeTax.breakdown);\n\n        // Step 4: Calculate tax credits\n        const totalCredits = this.calculateTaxCredits(maritalStatus, children, isStudent, isOleh, isDisabled);\n        calculations.credits = totalCredits;\n\n        // Step 5: Calculate National Insurance (Bituach Leumi)\n        const bituachLeumi = this.calculateBituachLeumi(grossMonthly);\n        calculations.taxes.bituachLeumi = bituachLeumi;\n\n        // Step 6: Calculate Health Insurance  \n        const healthInsurance = this.calculateHealthInsurance(grossMonthly);\n        calculations.taxes.healthInsurance = healthInsurance;\n\n        // Step 7: Calculate net income tax after credits\n        const netIncomeTax = Math.max(0, incomeTax.total - totalCredits.total);\n        calculations.taxes.netIncome = netIncomeTax;\n\n        // Step 8: Calculate total deductions\n        const totalTaxes = netIncomeTax + bituachLeumi + healthInsurance;\n        const totalDeductions = pensionDeduction + totalTaxes;\n\n        // Step 9: Calculate net salary\n        calculations.net = grossMonthly - totalDeductions;\n        calculations.totalTaxes = totalTaxes;\n        calculations.totalDeductions = totalDeductions;\n        calculations.effectiveTaxRate = (totalTaxes / grossMonthly) * 100;\n\n        return calculations;\n    }\n\n    // Calculate annual salary breakdown\n    calculateAnnualSalary(grossAnnual, options = {}) {\n        const grossMonthly = grossAnnual / 12;\n        const monthly = this.calculateMonthlySalary(grossMonthly, options);\n        \n        return {\n            annual: {\n                gross: grossAnnual,\n                net: monthly.net * 12,\n                totalTaxes: monthly.totalTaxes * 12,\n                totalDeductions: monthly.totalDeductions * 12,\n                effectiveTaxRate: monthly.effectiveTaxRate\n            },\n            monthly: monthly,\n            breakdown: monthly.breakdown\n        };\n    }\n\n    // Calculate income tax based on brackets\n    calculateIncomeTax(monthlyIncome) {\n        let remainingIncome = monthlyIncome;\n        let totalTax = 0;\n        const breakdown = [];\n\n        for (const bracket of this.taxBrackets) {\n            if (remainingIncome <= 0) break;\n\n            const taxableInThisBracket = Math.min(\n                remainingIncome, \n                bracket.max - bracket.min\n            );\n\n            if (taxableInThisBracket > 0) {\n                const taxInBracket = taxableInThisBracket * bracket.rate;\n                totalTax += taxInBracket;\n                \n                breakdown.push({\n                    bracket: bracket.name,\n                    rate: `${(bracket.rate * 100).toFixed(1)}%`,\n                    taxableAmount: taxableInThisBracket,\n                    tax: taxInBracket,\n                    range: `${formatCurrency(bracket.min)} - ${bracket.max === Infinity ? '∞' : formatCurrency(bracket.max)}`\n                });\n\n                remainingIncome -= taxableInThisBracket;\n            }\n        }\n\n        return {\n            total: totalTax,\n            breakdown: breakdown\n        };\n    }\n\n    // Calculate tax credits\n    calculateTaxCredits(maritalStatus, children, isStudent, isOleh, isDisabled) {\n        const credits = {\n            basic: this.taxCredits.basic,\n            married: maritalStatus === 'married' ? this.taxCredits.married : 0,\n            children: children * this.taxCredits.child,\n            student: isStudent ? this.taxCredits.student : 0,\n            oleh: isOleh ? this.taxCredits.oleh : 0,\n            disabled: isDisabled ? this.taxCredits.disabled : 0\n        };\n\n        credits.total = Object.values(credits).reduce((sum, credit) => sum + credit, 0);\n        \n        return credits;\n    }\n\n    // Calculate National Insurance (Bituach Leumi)\n    calculateBituachLeumi(grossMonthly) {\n        const cappedIncome = Math.min(grossMonthly, this.bituachLeumiRates.employee.ceiling);\n        const bituachLeumi = cappedIncome * this.bituachLeumiRates.employee.rate;\n        return Math.min(bituachLeumi, this.bituachLeumiRates.employee.maxAmount);\n    }\n\n    // Calculate Health Insurance\n    calculateHealthInsurance(grossMonthly) {\n        const cappedIncome = Math.min(grossMonthly, this.healthInsuranceRates.ceiling);\n        let healthInsurance = cappedIncome * this.healthInsuranceRates.rate;\n        \n        // Additional rate for high earners\n        if (grossMonthly > this.healthInsuranceRates.threshold) {\n            const additionalIncome = Math.min(\n                grossMonthly - this.healthInsuranceRates.threshold,\n                this.healthInsuranceRates.ceiling - this.healthInsuranceRates.threshold\n            );\n            healthInsurance += additionalIncome * this.healthInsuranceRates.additionalRate;\n        }\n        \n        return healthInsurance;\n    }\n\n    // Calculate required gross salary to achieve target net\n    calculateRequiredGross(targetNet, options = {}) {\n        // Binary search to find required gross\n        let low = targetNet;\n        let high = targetNet * 2;\n        let tolerance = 1; // NIS\n        \n        while (high - low > tolerance) {\n            const mid = (low + high) / 2;\n            const calculation = this.calculateMonthlySalary(mid, options);\n            \n            if (calculation.net < targetNet) {\n                low = mid;\n            } else {\n                high = mid;\n            }\n        }\n        \n        const requiredGross = (low + high) / 2;\n        const verification = this.calculateMonthlySalary(requiredGross, options);\n        \n        return {\n            requiredGross: requiredGross,\n            actualNet: verification.net,\n            difference: verification.net - targetNet,\n            calculation: verification\n        };\n    }\n\n    // Get salary comparison (multiple scenarios)\n    compareSalaries(salaries, options = {}) {\n        return salaries.map(salary => ({\n            gross: salary,\n            calculation: this.calculateMonthlySalary(salary, options)\n        }));\n    }\n\n    // Get optimal salary ranges for different net targets\n    getOptimalRanges(netTargets, options = {}) {\n        return netTargets.map(target => {\n            const result = this.calculateRequiredGross(target, options);\n            return {\n                targetNet: target,\n                requiredGross: result.requiredGross,\n                actualNet: result.actualNet,\n                effectiveTaxRate: result.calculation.effectiveTaxRate,\n                monthlyTaxes: result.calculation.totalTaxes\n            };\n        });\n    }\n\n    // Format salary breakdown for display\n    formatSalaryBreakdown(calculation, options = {}) {\n        const { showDetailed = true, currency = true } = options;\n        \n        const format = currency ? formatCurrency : (x) => formatNumber(x, { precision: 0 });\n        \n        const summary = {\n            'שכר ברוטו': format(calculation.gross),\n            'ניכויי פנסיה': format(calculation.deductions.pension || 0),\n            'מס הכנסה': format(calculation.taxes.netIncome || 0),\n            'ביטוח לאומי': format(calculation.taxes.bituachLeumi || 0),\n            'ביטוח בריאות': format(calculation.taxes.healthInsurance || 0),\n            'סה\"כ ניכויים': format(calculation.totalDeductions || 0),\n            'שכר נטו': format(calculation.net),\n            'שיעור מס אפקטיבי': `${calculation.effectiveTaxRate?.toFixed(1)}%`\n        };\n\n        if (showDetailed && calculation.breakdown) {\n            summary.breakdown = calculation.breakdown;\n        }\n\n        if (calculation.credits) {\n            summary.credits = calculation.credits;\n        }\n\n        return summary;\n    }\n}\n\n// Helper functions for formatting (assuming global formatters exist)\nfunction formatCurrency(amount) {\n    return window.formatCurrency ? window.formatCurrency(amount) : `₪${amount.toLocaleString()}`;\n}\n\nfunction formatNumber(number, options = {}) {\n    return window.formatNumber ? window.formatNumber(number) : number.toLocaleString();\n}\n\n// Create global instance\nwindow.IsraeliSalaryCalculator = IsraeliSalaryCalculator;\nwindow.salaryCalculator = new IsraeliSalaryCalculator();\n\n// Global helper functions\nwindow.calculateMonthlySalary = (gross, options) => window.salaryCalculator.calculateMonthlySalary(gross, options);\nwindow.calculateAnnualSalary = (gross, options) => window.salaryCalculator.calculateAnnualSalary(gross, options);\nwindow.calculateRequiredGross = (targetNet, options) => window.salaryCalculator.calculateRequiredGross(targetNet, options);\n\nconsole.log('💰 Israeli Salary Calculator loaded successfully');\n\nexport default IsraeliSalaryCalculator;","/**\n * Hebrew Financial Terminology Dictionary\n * Comprehensive collection of financial terms used in Israeli personal finance\n */\n\n// Core financial terms\nexport const FINANCIAL_TERMS = {\n    // Basic financial concepts\n    money: 'כסף',\n    income: 'הכנסה',\n    expense: 'הוצאה',\n    profit: 'רווח',\n    loss: 'הפסד',\n    savings: 'חיסכון',\n    investment: 'השקעה',\n    debt: 'חוב',\n    credit: 'אשראי',\n    budget: 'תקציב',\n    balance: 'יתרה',\n    transaction: 'עסקה',\n    transfer: 'העברה',\n    payment: 'תשלום',\n    receipt: 'קבלה',\n    invoice: 'חשבונית',\n    \n    // Banking terms\n    bank: 'בנק',\n    account: 'חשבון',\n    checkingAccount: 'חשבון עובר ושב',\n    savingsAccount: 'חשבון חיסכון',\n    deposit: 'פיקדון',\n    withdrawal: 'משיכה',\n    overdraft: 'מינוס',\n    interestRate: 'שיעור ריבית',\n    commission: 'עמלה',\n    serviceCharge: 'דמי ניהול',\n    \n    // Credit and loans\n    loan: 'הלוואה',\n    mortgage: 'משכנתא',\n    creditCard: 'כרטיס אשראי',\n    installment: 'תשלום',\n    monthlyPayment: 'תשלום חודשי',\n    principal: 'קרן',\n    interest: 'ריבית',\n    \n    // Investments\n    stock: 'מניה',\n    bond: 'אג\"ח',\n    fund: 'קרן',\n    portfolio: 'תיק השקעות',\n    dividend: 'דיבידנד',\n    \n    // Insurance\n    insurance: 'ביטוח',\n    premium: 'פרמיה',\n    policy: 'פוליסה',\n    claim: 'תביעה',\n    coverage: 'כיסוי',\n    \n    // Taxes\n    tax: 'מס',\n    incomeTax: 'מס הכנסה',\n    vatTax: 'מע\"מ',\n    taxReturn: 'דו\"ח שנתי',\n    taxRefund: 'החזר מס',\n    taxCredit: 'זיכוי מס',\n    \n    // Business terms\n    revenue: 'הכנסות',\n    expenses: 'הוצאות',\n    netIncome: 'הכנסה נטו',\n    grossIncome: 'הכנסה ברוטו',\n    cashFlow: 'תזרים מזומנים'\n};\n\n// Israeli-specific financial terms\nexport const ISRAELI_TERMS = {\n    // Currency\n    shekel: 'שקל',\n    shekels: 'שקלים',\n    agorot: 'אגורות',\n    \n    // Israeli taxes and institutions\n    bituachLeumi: 'ביטוח לאומי',\n    healthInsurance: 'ביטוח בריאות',\n    arnona: 'ארנונה',\n    masHachnaса: 'מס הכנסה',\n    maam: 'מע\"מ',\n    taxAuthority: 'רשות המסים',\n    \n    // Israeli banks\n    bankHapoalim: 'בנק הפועלים',\n    bankLeumi: 'בנק לאומי',\n    mizrahiTefahot: 'מזרחי טפחות',\n    bankDiscount: 'בנק דיסקונט',\n    \n    // Housing and real estate\n    rent: 'שכר דירה',\n    hoaDues: 'דמי בית משותף',\n    propertyTax: 'ארנונה',\n    \n    // Employment\n    salary: 'משכורת',\n    wages: 'שכר',\n    bonus: 'בונוס',\n    overtime: 'שעות נוספות',\n    pension: 'פנסיה',\n    severancePay: 'פיצויים',\n    \n    // Government benefits\n    childAllowance: 'קצבת ילדים',\n    unemploymentBenefit: 'דמי אבטלה',\n    disabilityAllowance: 'קצבת נכות',\n    oldAgePension: 'קצבת זקנה',\n    \n    // Education\n    tuition: 'שכר לימוד',\n    scholarship: 'מלגה',\n    \n    // Transportation\n    fuel: 'דלק',\n    parkingFees: 'דמי חניה',\n    carInsurance: 'ביטוח רכב',\n    registration: 'רישוי',\n    \n    // Utilities\n    electricity: 'חשמל',\n    water: 'מים',\n    gas: 'גז',\n    internet: 'אינטרנט',\n    phone: 'טלפון',\n    cable: 'כבלים',\n    \n    // Healthcare\n    healthFund: 'קופת חולים',\n    privateMedicine: 'רפואה פרטית',\n    prescription: 'מרשם',\n    \n    // Food and shopping\n    groceries: 'קניות מזון',\n    supermarket: 'סופר',\n    market: 'שוק',\n    restaurant: 'מסעדה',\n    \n    // Entertainment\n    movies: 'קולנוע',\n    theater: 'תיאטרון',\n    sports: 'ספורט',\n    vacation: 'חופשה'\n};\n\n// Financial action terms\nexport const ACTION_TERMS = {\n    add: 'הוסף',\n    edit: 'ערוך',\n    delete: 'מחק',\n    save: 'שמור',\n    cancel: 'בטל',\n    confirm: 'אשר',\n    view: 'צפה',\n    print: 'הדפס',\n    export: 'יצא',\n    import: 'יבא',\n    search: 'חפש',\n    filter: 'סנן',\n    sort: 'מיין',\n    calculate: 'חשב',\n    analyze: 'נתח',\n    compare: 'השווה',\n    forecast: 'תחזה',\n    budget: 'תקצב',\n    track: 'עקוב',\n    monitor: 'פקח',\n    update: 'עדכן',\n    sync: 'סנכרן',\n    backup: 'גבה',\n    restore: 'שחזר'\n};\n\n// Status and state terms\nexport const STATUS_TERMS = {\n    active: 'פעיל',\n    inactive: 'לא פעיל',\n    pending: 'ממתין',\n    completed: 'הושלם',\n    cancelled: 'בוטל',\n    approved: 'אושר',\n    rejected: 'נדחה',\n    processing: 'מעובד',\n    successful: 'הצליח',\n    failed: 'נכשל',\n    loading: 'טוען',\n    saved: 'נשמר',\n    error: 'שגיאה',\n    warning: 'אזהרה',\n    info: 'מידע',\n    new: 'חדש',\n    updated: 'עודכן',\n    deleted: 'נמחק'\n};\n\n// Time-related terms\nexport const TIME_TERMS = {\n    today: 'היום',\n    yesterday: 'אתמול',\n    tomorrow: 'מחר',\n    thisWeek: 'השבוע',\n    lastWeek: 'שבוע שעבר',\n    nextWeek: 'שבוע הבא',\n    thisMonth: 'החודש',\n    lastMonth: 'חודש שעבר',\n    nextMonth: 'חודש הבא',\n    thisYear: 'השנה',\n    lastYear: 'שנה שעברה',\n    nextYear: 'שנה הבאה',\n    quarter: 'רבעון',\n    semester: 'סמסטר',\n    annual: 'שנתי',\n    monthly: 'חודשי',\n    weekly: 'שבועי',\n    daily: 'יומי',\n    hourly: 'שעתי'\n};\n\n// Categories and subcategories in Hebrew\nexport const HEBREW_CATEGORIES = {\n    income: {\n        name: 'הכנסות',\n        subcategories: [\n            'משכורת',\n            'עבודה עצמאית',\n            'השקעות',\n            'מתנות',\n            'הכנסות אחרות'\n        ]\n    },\n    housing: {\n        name: 'דיור',\n        subcategories: [\n            'שכר דירה',\n            'ארנונה',\n            'דמי בית משותף',\n            'תחזוקה',\n            'משכנתא'\n        ]\n    },\n    utilities: {\n        name: 'שירותים',\n        subcategories: [\n            'חשמל',\n            'מים',\n            'גז',\n            'אינטרנט',\n            'טלפון'\n        ]\n    },\n    transportation: {\n        name: 'תחבורה',\n        subcategories: [\n            'דלק',\n            'ביטוח רכב',\n            'רישוי',\n            'תחבורה ציבורית',\n            'חניה'\n        ]\n    },\n    food: {\n        name: 'מזון',\n        subcategories: [\n            'קניות מזון',\n            'מסעדות',\n            'ביתית',\n            'קפה ונשנושים'\n        ]\n    },\n    healthcare: {\n        name: 'בריאות',\n        subcategories: [\n            'ביטוח בריאות',\n            'רפואה פרטית',\n            'תרופות',\n            'טיפולים'\n        ]\n    },\n    education: {\n        name: 'חינוך',\n        subcategories: [\n            'שכר לימוד',\n            'ספרים',\n            'חוגים',\n            'גן ילדים'\n        ]\n    },\n    entertainment: {\n        name: 'בילויים',\n        subcategories: [\n            'קולנוע',\n            'מסעדות',\n            'ספורט',\n            'חופשות'\n        ]\n    }\n};\n\n// Common financial phrases in Hebrew\nexport const FINANCIAL_PHRASES = {\n    addTransaction: 'הוסף עסקה',\n    editTransaction: 'ערוך עסקה',\n    deleteTransaction: 'מחק עסקה',\n    viewTransactions: 'צפה בעסקאות',\n    monthlyBudget: 'תקציב חודשי',\n    budgetOverrun: 'חריגה מהתקציב',\n    savingsGoal: 'יעד חיסכון',\n    expenseTracking: 'מעקב הוצאות',\n    incomeVsExpenses: 'הכנסות מול הוצאות',\n    netWorth: 'שווי נטו',\n    cashFlow: 'תזרים מזומנים',\n    financialGoals: 'יעדים פיננסיים',\n    investmentPortfolio: 'תיק השקעות',\n    emergencyFund: 'קרן חירום',\n    retirementSavings: 'חיסכון לפנסיה',\n    taxPlanning: 'תכנון מס',\n    debtManagement: 'ניהול חובות',\n    creditScore: 'דירוג אשראי',\n    financialFreedom: 'חופש פיננסי'\n};\n\n// Error messages in Hebrew\nexport const ERROR_MESSAGES = {\n    required: 'שדה חובה',\n    invalidAmount: 'סכום לא תקין',\n    invalidDate: 'תאריך לא תקין',\n    invalidEmail: 'כתובת אימייל לא תקינה',\n    invalidPhone: 'מספר טלפון לא תקין',\n    duplicateEntry: 'רשומה כפולה',\n    insufficientFunds: 'אין מספיק כסף',\n    budgetExceeded: 'התקציב חרג',\n    networkError: 'שגיאת רשת',\n    saveError: 'שגיאה בשמירה',\n    loadError: 'שגיאה בטעינה',\n    permissionDenied: 'הרשאה נדחתה',\n    sessionExpired: 'ההפעלה פגה',\n    dataCorrupted: 'המידע פגום',\n    backupFailed: 'הגיבוי נכשל',\n    importFailed: 'הייבוא נכשל',\n    exportFailed: 'הייצוא נכשל'\n};\n\n// Success messages in Hebrew\nexport const SUCCESS_MESSAGES = {\n    saved: 'נשמר בהצלחה',\n    updated: 'עודכן בהצלחה',\n    deleted: 'נמחק בהצלחה',\n    imported: 'יובא בהצלחה',\n    exported: 'יוצא בהצלחה',\n    backedUp: 'גובה בהצלחה',\n    restored: 'שוחזר בהצלחה',\n    synced: 'סונכרן בהצלחה',\n    budgetSet: 'התקציב נקבע בהצלחה',\n    goalAchieved: 'היעד הושג!',\n    paymentProcessed: 'התשלום עובד',\n    transactionCompleted: 'העסקה הושלמה'\n};\n\n// Utility class for term management\nexport class HebrewTermManager {\n    constructor() {\n        this.terms = {\n            ...FINANCIAL_TERMS,\n            ...ISRAELI_TERMS,\n            ...ACTION_TERMS,\n            ...STATUS_TERMS,\n            ...TIME_TERMS\n        };\n        this.phrases = FINANCIAL_PHRASES;\n        this.categories = HEBREW_CATEGORIES;\n        this.errors = ERROR_MESSAGES;\n        this.success = SUCCESS_MESSAGES;\n    }\n\n    // Get term translation\n    getTerm(englishTerm) {\n        return this.terms[englishTerm] || englishTerm;\n    }\n\n    // Get phrase translation\n    getPhrase(phraseKey) {\n        return this.phrases[phraseKey] || phraseKey;\n    }\n\n    // Get category name\n    getCategoryName(categoryKey) {\n        return this.categories[categoryKey]?.name || categoryKey;\n    }\n\n    // Get subcategories for a category\n    getSubcategories(categoryKey) {\n        return this.categories[categoryKey]?.subcategories || [];\n    }\n\n    // Get error message\n    getError(errorKey) {\n        return this.errors[errorKey] || 'שגיאה לא ידועה';\n    }\n\n    // Get success message\n    getSuccess(successKey) {\n        return this.success[successKey] || 'הפעולה הושלמה בהצלחה';\n    }\n\n    // Search terms (fuzzy matching)\n    searchTerms(query) {\n        const results = [];\n        const queryLower = query.toLowerCase();\n        \n        Object.entries(this.terms).forEach(([english, hebrew]) => {\n            if (english.toLowerCase().includes(queryLower) || \n                hebrew.includes(query)) {\n                results.push({ english, hebrew });\n            }\n        });\n        \n        return results;\n    }\n\n    // Get all terms for a specific domain\n    getTermsByDomain(domain) {\n        const domains = {\n            banking: ['bank', 'account', 'deposit', 'withdrawal', 'balance'],\n            taxes: ['tax', 'incomeTax', 'vatTax', 'bituachLeumi'],\n            investment: ['stock', 'bond', 'fund', 'portfolio', 'dividend'],\n            housing: ['rent', 'mortgage', 'arnona', 'utilities'],\n            insurance: ['insurance', 'premium', 'policy', 'claim']\n        };\n        \n        const termKeys = domains[domain] || [];\n        return termKeys.map(key => ({\n            english: key,\n            hebrew: this.terms[key]\n        }));\n    }\n}\n\n// Create global instance\nwindow.HebrewTermManager = HebrewTermManager;\nwindow.hebrewTerms = new HebrewTermManager();\n\n// Global helper functions\nwindow.getTerm = (term) => window.hebrewTerms.getTerm(term);\nwindow.getPhrase = (phrase) => window.hebrewTerms.getPhrase(phrase);\nwindow.getError = (error) => window.hebrewTerms.getError(error);\nwindow.getSuccess = (success) => window.hebrewTerms.getSuccess(success);\n\nconsole.log('🔤 Hebrew Financial Terms loaded successfully');\n\nexport default HebrewTermManager;","/**\n * Israeli-Specific Financial Tips and Insights\n * Contextual financial advice tailored for Israeli users\n */\n\n// Israeli financial tips by category\nexport const ISRAELI_FINANCIAL_TIPS = {\n    // Tax-related tips\n    taxes: [\n        {\n            title: 'ניצול זיכויי מס',\n            tip: 'וודאו שאתם מנצלים את כל זיכויי המס המגיעים לכם - זיכוי על ילדים, נישואין, ולימודים',\n            category: 'מסים',\n            priority: 'high',\n            savings: 'עד ₪2,320 לחודש'\n        },\n        {\n            title: 'דיווח שנתי מדויק',\n            tip: 'שמרו קבלות והוכחות הוצאה לדיווח השנתי - יכול לחסוך אלפי שקלים במס',\n            category: 'מסים',\n            priority: 'medium',\n            savings: 'עד ₪5,000 לשנה'\n        },\n        {\n            title: 'שנת המס הישראלית',\n            tip: 'זכרו שהשנה המס בישראל היא מ-1 באפריל עד 31 במרץ, תכננו בהתאם',\n            category: 'מסים',\n            priority: 'medium',\n            savings: 'תכנון טוב'\n        }\n    ],\n\n    // Banking tips\n    banking: [\n        {\n            title: 'השוואת עמלות בנקאיות',\n            tip: 'השוו עמלות בין הבנקים השונים - הפרש של מאות שקלים לשנה אפשרי',\n            category: 'בנקאות',\n            priority: 'high',\n            savings: 'עד ₪1,200 לשנה'\n        },\n        {\n            title: 'חשבון דיגיטלי',\n            tip: 'עברו לבנקאות דיגיטלית לחיסכון בעמלות ונוחות בניהול',\n            category: 'בנקאות',\n            priority: 'medium',\n            savings: 'עד ₪500 לשנה'\n        },\n        {\n            title: 'מינוס מאושר',\n            tip: 'סדרו מינוס מאושר מראש במקום להיכנס למינוס לא מאושר עם עמלות גבוהות',\n            category: 'בנקאות',\n            priority: 'high',\n            savings: 'עד ₪2,000 לשנה'\n        }\n    ],\n\n    // Housing tips specific to Israel\n    housing: [\n        {\n            title: 'ארנונה - זכויות הנחה',\n            tip: 'בדקו זכאות להנחות ארנונה - משפחות עם ילדים, קשישים, ואנשים עם מוגבלות זכאים להנחות',\n            category: 'דיור',\n            priority: 'high',\n            savings: 'עד ₪3,000 לשנה'\n        },\n        {\n            title: 'משכנתא - מחזור',\n            tip: 'בדקו אפשרות למחזור משכנתא אם הריבית ירדה משמעותית מאז נטילת ההלוואה',\n            category: 'דיור',\n            priority: 'high',\n            savings: 'עד ₪50,000 לשנה'\n        },\n        {\n            title: 'חיסכון בחשמל',\n            tip: 'השתמשו במכשירי חשמל חסכוניים וזמני חשמל זול - הפרש משמעותי בחשבון החשמל',\n            category: 'דיור',\n            priority: 'medium',\n            savings: 'עד ₪1,500 לשנה'\n        }\n    ],\n\n    // Investment tips for Israeli market\n    investment: [\n        {\n            title: 'פנסיה וקופות גמל',\n            tip: 'השתתפו בקופת גמל ופנסיה - זיכוי מס מיידי ובניית עתיד פיננסי',\n            category: 'השקעות',\n            priority: 'high',\n            savings: 'זיכוי מס + עתיד'\n        },\n        {\n            title: 'קרן חירום',\n            tip: 'צברו קרן חירום של 6-12 משכורות חודשיות לביטחון פיננסי',\n            category: 'השקעות',\n            priority: 'high',\n            savings: 'ביטחון פיננסי'\n        },\n        {\n            title: 'השקעה הדרגתית',\n            tip: 'השקיעו סכומים קבועים מדי חודש במקום סכום גדול בבת אחת',\n            category: 'השקעות',\n            priority: 'medium',\n            savings: 'מיצוע עלויות'\n        }\n    ],\n\n    // Shopping and daily expenses\n    shopping: [\n        {\n            title: 'השוואת מחירים',\n            tip: 'השתמשו באפליקציות השוואת מחירים לפני קניות גדולות - חיסכון משמעותי אפשרי',\n            category: 'קניות',\n            priority: 'medium',\n            savings: 'עד ₪2,000 לשנה'\n        },\n        {\n            title: 'קניות בכמויות',\n            tip: 'קנו מוצרי יסוד בכמויות גדולות ממועדוני קניות - חיסכון למשפחות',\n            category: 'קניות',\n            priority: 'medium',\n            savings: 'עד ₪3,000 לשנה'\n        },\n        {\n            title: 'תכנון רשימת קניות',\n            tip: 'תכננו רשימת קניות מראש ודבקו בה למניעת קניות מיותרות',\n            category: 'קניות',\n            priority: 'medium',\n            savings: 'עד ₪1,500 לשנה'\n        }\n    ],\n\n    // Transportation tips\n    transportation: [\n        {\n            title: 'תחבורה ציבורית',\n            tip: 'השתמשו בתחבורה ציבורית במקום רכב פרטי - חיסכון משמעותי בדלק וחניה',\n            category: 'תחבורה',\n            priority: 'medium',\n            savings: 'עד ₪10,000 לשנה'\n        },\n        {\n            title: 'ביטוח רכב מקיף',\n            tip: 'השוו מחירי ביטוח רכב בין חברות שונות - הפרש של מאות שקלים אפשרי',\n            category: 'תחבורה',\n            priority: 'high',\n            savings: 'עד ₪2,000 לשנה'\n        }\n    ]\n};\n\n// Monthly Israeli financial insights\nexport const MONTHLY_INSIGHTS = {\n    january: {\n        title: 'ינואר - תכנון השנה החדשה',\n        insights: [\n            'זמן מצוין להגדיר יעדים פיננסיים לשנה החדשה',\n            'בדקו אם יש עדכונים בשיעורי המס וזיכויים',\n            'תכננו את תקציב החופשות לקיץ'\n        ]\n    },\n    february: {\n        title: 'פברואר - הכנה לשנת המס',\n        insights: [\n            'התחילו לאסוף מסמכים לדיווח השנתי',\n            'בדקו זכאות לזיכויי מס נוספים',\n            'תכננו השקעות שעלולות להשפיע על המס'\n        ]\n    },\n    march: {\n        title: 'מרץ - סיום שנת המס',\n        insights: [\n            'סיום שנת המס הישראלית - זמן אחרון לזיכויים',\n            'הגישו דיווח שנתי אם נדרש',\n            'תכננו לשנת המס החדשה שמתחילה באפריל'\n        ]\n    },\n    april: {\n        title: 'אפריל - תחילת שנת מס חדשה',\n        insights: [\n            'תחילת שנת המס החדשה - תכננו בהתאם',\n            'בדקו עדכוני שיעורי מס וזיכויים',\n            'זמן מצוין לסקירת תיק ההשקעות'\n        ]\n    }\n};\n\n// Seasonal financial tips\nexport const SEASONAL_TIPS = {\n    holidays: [\n        {\n            title: 'חגי תשרי',\n            tip: 'תכננו מראש הוצאות החגים - מזון, בגדים, מתנות. חיסכון הדרגתי לאורך השנה',\n            savings: 'עד ₪5,000 לחגים'\n        },\n        {\n            title: 'פסח',\n            tip: 'התחילו לחסוך לפסח כבר מחודש ינואר - הוצאות גבוהות על מזון ונקיון',\n            savings: 'עד ₪3,000 לפסח'\n        }\n    ],\n    summer: [\n        {\n            title: 'חופש הגדול',\n            tip: 'תכננו מראש פעילויות לילדים בחופש - מחנות קיץ יכולים להיות יקרים',\n            savings: 'עד ₪8,000 לקיץ'\n        }\n    ]\n};\n\n// Financial tips manager class\nexport class IsraeliFinancialTipsManager {\n    constructor() {\n        this.tips = ISRAELI_FINANCIAL_TIPS;\n        this.monthlyInsights = MONTHLY_INSIGHTS;\n        this.seasonalTips = SEASONAL_TIPS;\n    }\n\n    // Get tips by category\n    getTipsByCategory(category) {\n        return this.tips[category] || [];\n    }\n\n    // Get high priority tips\n    getHighPriorityTips() {\n        const highPriorityTips = [];\n        Object.values(this.tips).forEach(categoryTips => {\n            categoryTips.forEach(tip => {\n                if (tip.priority === 'high') {\n                    highPriorityTips.push(tip);\n                }\n            });\n        });\n        return highPriorityTips;\n    }\n\n    // Get monthly insights\n    getMonthlyInsights(month = null) {\n        if (!month) {\n            month = new Date().toLocaleDateString('en-US', { month: 'long' }).toLowerCase();\n        }\n        \n        const monthMapping = {\n            'january': 'january',\n            'february': 'february', \n            'march': 'march',\n            'april': 'april'\n        };\n        \n        return this.monthlyInsights[monthMapping[month]] || null;\n    }\n\n    // Get seasonal tips\n    getSeasonalTips(season) {\n        return this.seasonalTips[season] || [];\n    }\n\n    // Get personalized tips based on user data\n    getPersonalizedTips(userData = {}) {\n        const personalizedTips = [];\n        const { hasChildren, hasProperty, monthlyIncome, age } = userData;\n\n        // Tax tips for families\n        if (hasChildren) {\n            personalizedTips.push({\n                title: 'זיכוי על ילדים',\n                tip: 'וודאו שאתם מקבלים זיכוי מס על כל הילדים - זה יכול להיות אלפי שקלים לשנה',\n                category: 'מסים',\n                savings: `עד ₪${hasChildren * 2320 * 12} לשנה`\n            });\n        }\n\n        // Property tips\n        if (hasProperty) {\n            personalizedTips.push(...this.getTipsByCategory('housing'));\n        }\n\n        // Age-based tips\n        if (age && age > 45) {\n            personalizedTips.push({\n                title: 'תכנון פרישה',\n                tip: 'התחילו לתכנן פרישה - פנסיה תקציבית וקופות גמל חשובות יותר',\n                category: 'השקעות',\n                priority: 'high'\n            });\n        }\n\n        // Income-based tips\n        if (monthlyIncome && monthlyIncome > 20000) {\n            personalizedTips.push({\n                title: 'מס על הכנסה גבוהה',\n                tip: 'בדקו אופציות להפחתת מס - פנסיה, קופת גמל, השקעות מועדפות',\n                category: 'מסים',\n                priority: 'high'\n            });\n        }\n\n        return personalizedTips;\n    }\n\n    // Get tip of the day\n    getTipOfTheDay() {\n        const allTips = [];\n        Object.values(this.tips).forEach(categoryTips => {\n            allTips.push(...categoryTips);\n        });\n        \n        const today = new Date();\n        const dayOfYear = Math.floor((today - new Date(today.getFullYear(), 0, 0)) / (1000 * 60 * 60 * 24));\n        const tipIndex = dayOfYear % allTips.length;\n        \n        return allTips[tipIndex];\n    }\n\n    // Search tips by keyword\n    searchTips(keyword) {\n        const results = [];\n        const searchTerm = keyword.toLowerCase();\n        \n        Object.values(this.tips).forEach(categoryTips => {\n            categoryTips.forEach(tip => {\n                if (tip.title.includes(keyword) || \n                    tip.tip.includes(keyword) || \n                    tip.category.includes(keyword)) {\n                    results.push(tip);\n                }\n            });\n        });\n        \n        return results;\n    }\n\n    // Get financial health score tips\n    getFinancialHealthTips(score) {\n        if (score >= 80) {\n            return [\n                {\n                    title: 'מצב פיננסי מצוין',\n                    tip: 'המשיכו כך! התמקדו בהשקעות ארוכות טווח ותכנון פרישה',\n                    category: 'כללי'\n                }\n            ];\n        } else if (score >= 60) {\n            return [\n                {\n                    title: 'מצב פיננסי טוב',\n                    tip: 'שפרו את קרן החירום והפחיתו חובות להגעה למצוינות',\n                    category: 'כללי'\n                }\n            ];\n        } else {\n            return [\n                {\n                    title: 'זקוק לשיפור',\n                    tip: 'התמקדו בהפחתת חובות ובניית קרן חירום בסיסית',\n                    category: 'כללי',\n                    priority: 'high'\n                }\n            ];\n        }\n    }\n}\n\n// Create global instance\nwindow.IsraeliFinancialTipsManager = IsraeliFinancialTipsManager;\nwindow.financialTips = new IsraeliFinancialTipsManager();\n\n// Global helper functions\nwindow.getTipsByCategory = (category) => window.financialTips.getTipsByCategory(category);\nwindow.getHighPriorityTips = () => window.financialTips.getHighPriorityTips();\nwindow.getTipOfTheDay = () => window.financialTips.getTipOfTheDay();\nwindow.getPersonalizedTips = (userData) => window.financialTips.getPersonalizedTips(userData);\n\nconsole.log('💡 Israeli Financial Tips loaded successfully');\n\nexport default IsraeliFinancialTipsManager;","// Theme Toggle Component for Personal Finance Dashboard\n// Hebrew-native theme switcher with light/dark mode support\n\nexport class ThemeToggle {\n    constructor(options = {}) {\n        this.options = {\n            container: document.body,\n            position: 'top-left', // top-left, top-right, bottom-left, bottom-right\n            showLabel: true,\n            ...options\n        };\n        \n        this.currentTheme = this.getCurrentTheme();\n        this.toggleButton = null;\n        \n        this.init();\n    }\n\n    init() {\n        this.createToggleButton();\n        this.applyTheme(this.currentTheme);\n        this.setupEventListeners();\n    }\n\n    getCurrentTheme() {\n        // Check localStorage first, then system preference, default to light\n        const savedTheme = localStorage.getItem('theme');\n        if (savedTheme) {\n            return savedTheme;\n        }\n        \n        // Check system preference\n        if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n            return 'dark';\n        }\n        \n        return 'light';\n    }\n\n    createToggleButton() {\n        const button = document.createElement('button');\n        button.className = 'theme-toggle';\n        button.setAttribute('aria-label', 'מעבר בין מצב יום ולילה');\n        button.title = 'מעבר בין מצב יום ולילה';\n        \n        // Create icon container\n        const iconContainer = document.createElement('span');\n        iconContainer.className = 'theme-toggle-icon';\n        \n        // Create label if needed\n        let labelContainer = null;\n        if (this.options.showLabel) {\n            labelContainer = document.createElement('span');\n            labelContainer.className = 'theme-toggle-label';\n            labelContainer.textContent = this.currentTheme === 'dark' ? 'מצב יום' : 'מצב לילה';\n        }\n        \n        button.appendChild(iconContainer);\n        if (labelContainer) {\n            button.appendChild(labelContainer);\n        }\n        \n        this.updateButtonIcon(button, this.currentTheme);\n        \n        this.toggleButton = button;\n        return button;\n    }\n\n    updateButtonIcon(button, theme) {\n        const iconContainer = button.querySelector('.theme-toggle-icon');\n        const labelContainer = button.querySelector('.theme-toggle-label');\n        \n        if (theme === 'dark') {\n            // Sun icon for switching to light mode\n            iconContainer.innerHTML = `\n                <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                    <circle cx=\"12\" cy=\"12\" r=\"5\"/>\n                    <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"/>\n                    <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"/>\n                    <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"/>\n                    <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"/>\n                    <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\"/>\n                    <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"/>\n                    <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\"/>\n                    <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"/>\n                </svg>\n            `;\n            if (labelContainer) labelContainer.textContent = 'מצב יום';\n        } else {\n            // Moon icon for switching to dark mode\n            iconContainer.innerHTML = `\n                <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                    <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"/>\n                </svg>\n            `;\n            if (labelContainer) labelContainer.textContent = 'מצב לילה';\n        }\n    }\n\n    applyTheme(theme) {\n        document.documentElement.setAttribute('data-theme', theme);\n        this.currentTheme = theme;\n        \n        if (this.toggleButton) {\n            this.updateButtonIcon(this.toggleButton, theme);\n        }\n        \n        // Save to localStorage\n        localStorage.setItem('theme', theme);\n        \n        // Dispatch custom event\n        document.dispatchEvent(new CustomEvent('themeChanged', {\n            detail: { theme }\n        }));\n    }\n\n    toggleTheme() {\n        const newTheme = this.currentTheme === 'light' ? 'dark' : 'light';\n        this.applyTheme(newTheme);\n    }\n\n    setupEventListeners() {\n        if (this.toggleButton) {\n            this.toggleButton.addEventListener('click', () => {\n                this.toggleTheme();\n            });\n        }\n\n        // Listen for system theme changes\n        if (window.matchMedia) {\n            const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n            mediaQuery.addEventListener('change', (e) => {\n                // Only auto-switch if user hasn't manually set a theme\n                if (!localStorage.getItem('theme')) {\n                    this.applyTheme(e.matches ? 'dark' : 'light');\n                }\n            });\n        }\n    }\n\n    // Method to insert toggle button into DOM\n    render(container = null) {\n        const targetContainer = container || this.options.container;\n        if (targetContainer && this.toggleButton) {\n            targetContainer.appendChild(this.toggleButton);\n        }\n        return this.toggleButton;\n    }\n\n    // Method to get HTML string for the toggle button\n    getHTML() {\n        const theme = this.currentTheme;\n        const sunIcon = `<svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n            <circle cx=\"12\" cy=\"12\" r=\"5\"/>\n            <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"/>\n            <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"/>\n            <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"/>\n            <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"/>\n            <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\"/>\n            <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"/>\n            <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\"/>\n            <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"/>\n        </svg>`;\n        \n        const moonIcon = `<svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n            <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"/>\n        </svg>`;\n        \n        const icon = theme === 'dark' ? sunIcon : moonIcon;\n        const label = this.options.showLabel ? \n            `<span class=\"theme-toggle-label\">${theme === 'dark' ? 'מצב יום' : 'מצב לילה'}</span>` : '';\n        \n        return `\n            <button class=\"theme-toggle\" aria-label=\"מעבר בין מצב יום ולילה\" title=\"מעבר בין מצב יום ולילה\">\n                <span class=\"theme-toggle-icon\">${icon}</span>\n                ${label}\n            </button>\n        `;\n    }\n\n    // Static method to create a simple toggle\n    static createSimpleToggle() {\n        return new ThemeToggle({\n            showLabel: false,\n            position: 'top-right'\n        });\n    }\n\n    // Static method to create a labeled toggle\n    static createLabeledToggle() {\n        return new ThemeToggle({\n            showLabel: true,\n            position: 'top-left'\n        });\n    }\n}\n\n// Export as default for easy importing\nexport default ThemeToggle;","// Hebrew Transaction Form Component\nexport class TransactionForm {\n    constructor(container, options = {}) {\n        this.container = container;\n        this.options = {\n            mode: 'add', // 'add' or 'edit'\n            transaction: null,\n            onSave: null,\n            onCancel: null,\n            ...options\n        };\n        this.formElement = null;\n        this.init();\n    }\n\n    init() {\n        this.render();\n        this.bindEvents();\n    }\n\n    render() {\n        const isEdit = this.options.mode === 'edit';\n        const transaction = this.options.transaction || {};\n        \n        this.container.innerHTML = `\n            <div class=\"transaction-form-container\">\n                <div class=\"transaction-form-header\">\n                    <h2 class=\"form-title\">${isEdit ? 'עריכת עסקה' : 'הוספת עסקה חדשה'}</h2>\n                    <button type=\"button\" class=\"btn-close\" data-action=\"cancel\">×</button>\n                </div>\n\n                <form class=\"transaction-form\" id=\"transactionForm\">\n                    <!-- Transaction Type -->\n                    <div class=\"form-group\">\n                        <label class=\"form-label\">סוג עסקה</label>\n                        <div class=\"transaction-type-tabs\">\n                            <input type=\"radio\" id=\"type-expense\" name=\"type\" value=\"expense\" \n                                   ${transaction.type !== 'income' ? 'checked' : ''}>\n                            <label for=\"type-expense\" class=\"type-tab expense-tab\">\n                                <span class=\"tab-icon\">💸</span>\n                                <span class=\"tab-text\">הוצאה</span>\n                            </label>\n                            \n                            <input type=\"radio\" id=\"type-income\" name=\"type\" value=\"income\"\n                                   ${transaction.type === 'income' ? 'checked' : ''}>\n                            <label for=\"type-income\" class=\"type-tab income-tab\">\n                                <span class=\"tab-icon\">💰</span>\n                                <span class=\"tab-text\">הכנסה</span>\n                            </label>\n                        </div>\n                    </div>\n\n                    <!-- Amount -->\n                    <div class=\"form-group\">\n                        <label for=\"amount\" class=\"form-label required\">סכום</label>\n                        <div class=\"amount-input-container\">\n                            <input type=\"number\" id=\"amount\" name=\"amount\" \n                                   class=\"form-input amount-input\" \n                                   placeholder=\"0.00\" \n                                   step=\"0.01\" \n                                   min=\"0\"\n                                   value=\"${transaction.amount || ''}\"\n                                   required>\n                            <span class=\"currency-symbol\">₪</span>\n                        </div>\n                        <div class=\"amount-preview\"></div>\n                    </div>\n\n                    <!-- Description -->\n                    <div class=\"form-group\">\n                        <label for=\"description\" class=\"form-label required\">תיאור</label>\n                        <input type=\"text\" id=\"description\" name=\"description\" \n                               class=\"form-input\" \n                               placeholder=\"תיאור העסקה...\"\n                               value=\"${transaction.description || ''}\"\n                               required>\n                    </div>\n\n                    <!-- Category -->\n                    <div class=\"form-group\">\n                        <label for=\"category\" class=\"form-label required\">קטגוריה</label>\n                        <select id=\"category\" name=\"category\" class=\"form-input\" required>\n                            <option value=\"\">בחר קטגוריה...</option>\n                        </select>\n                        <button type=\"button\" class=\"btn-secondary btn-sm add-category-btn\">\n                            + קטגוריה חדשה\n                        </button>\n                    </div>\n\n                    <!-- Account -->\n                    <div class=\"form-group\">\n                        <label for=\"account\" class=\"form-label required\">חשבון</label>\n                        <select id=\"account\" name=\"account\" class=\"form-input\" required>\n                            <option value=\"\">בחר חשבון...</option>\n                        </select>\n                    </div>\n\n                    <!-- Date -->\n                    <div class=\"form-group\">\n                        <label for=\"date\" class=\"form-label required\">תאריך</label>\n                        <input type=\"date\" id=\"date\" name=\"date\" \n                               class=\"form-input\"\n                               value=\"${transaction.date || new Date().toISOString().split('T')[0]}\"\n                               required>\n                    </div>\n\n                    <!-- Tags -->\n                    <div class=\"form-group\">\n                        <label for=\"tags\" class=\"form-label\">תגיות</label>\n                        <div class=\"tags-input-container\">\n                            <input type=\"text\" id=\"tags\" name=\"tags\" \n                                   class=\"form-input tags-input\" \n                                   placeholder=\"הקלד תגית והקש Enter או פסיק...\"\n                                   autocomplete=\"off\">\n                            <input type=\"hidden\" id=\"hiddenTags\" name=\"hiddenTags\" value=\"\">\n                            <div class=\"tags-suggestions\" style=\"display: none;\"></div>\n                        </div>\n                        <div class=\"selected-tags\"></div>\n                        <div class=\"tags-help\">\n                            <small class=\"help-text\">השתמש במקש Enter או פסיק להוספת תגית • מקש Backspace למחיקת התגית האחרונה</small>\n                        </div>\n                    </div>\n\n                    <!-- Notes -->\n                    <div class=\"form-group\">\n                        <label for=\"notes\" class=\"form-label\">הערות</label>\n                        <div class=\"notes-container\">\n                            <textarea id=\"notes\" name=\"notes\" \n                                      class=\"form-input form-textarea notes-textarea\" \n                                      placeholder=\"הערות נוספות על העסקה...\"\n                                      rows=\"4\"\n                                      maxlength=\"500\"\n                                      dir=\"auto\">${transaction.notes || ''}</textarea>\n                            <div class=\"notes-footer\">\n                                <div class=\"character-count\">\n                                    <span class=\"current-count\">0</span>/<span class=\"max-count\">500</span> תווים\n                                </div>\n                                <div class=\"notes-formatting-buttons\">\n                                    <button type=\"button\" class=\"formatting-btn\" data-format=\"bullet\" title=\"רשימה\">• רשימה</button>\n                                    <button type=\"button\" class=\"formatting-btn\" data-format=\"date\" title=\"הוסף תאריך\">📅 תאריך</button>\n                                    <button type=\"button\" class=\"formatting-btn\" data-format=\"clear\" title=\"נקה טקסט\">🗑️ נקה</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"notes-suggestions\">\n                            <div class=\"suggestion-templates\">\n                                <button type=\"button\" class=\"note-template\" data-template=\"payment\">💳 תשלום בוצע</button>\n                                <button type=\"button\" class=\"note-template\" data-template=\"receipt\">🧾 התקבלה קבלה</button>\n                                <button type=\"button\" class=\"note-template\" data-template=\"business\">💼 הוצאה עסקית</button>\n                                <button type=\"button\" class=\"note-template\" data-template=\"personal\">👤 הוצאה אישית</button>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- Transaction Status & Approval -->\n                    <div class=\"form-group\">\n                        <label class=\"form-label\">סטטוס העסקה</label>\n                        <div class=\"transaction-status-container\">\n                            <div class=\"status-selector\">\n                                <select id=\"transactionStatus\" name=\"transactionStatus\" class=\"form-input status-select\">\n                                    <option value=\"ממתין\" ${(transaction.status || 'ממתין') === 'ממתין' ? 'selected' : ''}>ממתין לאישור</option>\n                                    <option value=\"מאושר\" ${transaction.status === 'מאושר' ? 'selected' : ''}>מאושר</option>\n                                    <option value=\"נדחה\" ${transaction.status === 'נדחה' ? 'selected' : ''}>נדחה</option>\n                                    <option value=\"בביקורת\" ${transaction.status === 'בביקורת' ? 'selected' : ''}>בביקורת</option>\n                                </select>\n                                <div class=\"status-indicator\">\n                                    <span class=\"status-badge status-${(transaction.status || 'ממתין').replace('ממתין', 'pending').replace('מאושר', 'approved').replace('נדחה', 'rejected').replace('בביקורת', 'review')}\">\n                                        ${this.getStatusIcon(transaction.status || 'ממתין')}\n                                        <span class=\"status-text\">${transaction.status || 'ממתין'}</span>\n                                    </span>\n                                </div>\n                            </div>\n                            \n                            <div class=\"approval-details\" style=\"display: ${transaction.status && transaction.status !== 'ממתין' ? 'block' : 'none'}\">\n                                <div class=\"approval-info\">\n                                    <div class=\"form-group\">\n                                        <label for=\"approver\" class=\"form-label\">מאשר/דוחה</label>\n                                        <input type=\"text\" id=\"approver\" name=\"approver\" \n                                               class=\"form-input\" \n                                               placeholder=\"שם המאשר...\"\n                                               value=\"${transaction.approver || ''}\">\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <label for=\"approvalDate\" class=\"form-label\">תאריך אישור/דחייה</label>\n                                        <input type=\"datetime-local\" id=\"approvalDate\" name=\"approvalDate\" \n                                               class=\"form-input\"\n                                               value=\"${transaction.approvalDate || ''}\">\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <label for=\"approvalNotes\" class=\"form-label\">הערות אישור</label>\n                                        <textarea id=\"approvalNotes\" name=\"approvalNotes\" \n                                                  class=\"form-input form-textarea\" \n                                                  placeholder=\"הערות על האישור או הדחייה...\"\n                                                  rows=\"2\">${transaction.approvalNotes || ''}</textarea>\n                                    </div>\n                                </div>\n                                \n                                <div class=\"quick-approval-actions\">\n                                    <button type=\"button\" class=\"quick-action-btn approve-btn\" data-action=\"approve\">\n                                        ✅ אשר עסקה\n                                    </button>\n                                    <button type=\"button\" class=\"quick-action-btn reject-btn\" data-action=\"reject\">\n                                        ❌ דחה עסקה\n                                    </button>\n                                    <button type=\"button\" class=\"quick-action-btn review-btn\" data-action=\"review\">\n                                        🔍 שלח לביקורת\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- Receipt Photos -->\n                    <div class=\"form-group\">\n                        <label class=\"form-label\">תמונות קבלה</label>\n                        <div class=\"receipt-upload-area\">\n                            <input type=\"file\" id=\"receiptFiles\" name=\"receiptFiles\" \n                                   class=\"file-input\" \n                                   multiple \n                                   accept=\"image/*,application/pdf\">\n                            <label for=\"receiptFiles\" class=\"file-upload-label\">\n                                <span class=\"upload-icon\">📷</span>\n                                <span class=\"upload-text\">לחץ להוספת תמונות קבלה או גרור קבצים לכאן</span>\n                                <span class=\"upload-hint\">PNG, JPG, PDF עד 5MB לקובץ</span>\n                            </label>\n                        </div>\n                        <div class=\"receipt-preview-container\"></div>\n                    </div>\n\n                    <!-- Location Tracking -->\n                    <div class=\"form-group\">\n                        <label class=\"form-label\">\n                            <input type=\"checkbox\" id=\"trackLocation\" name=\"trackLocation\" \n                                   class=\"form-checkbox\"\n                                   ${transaction.location ? 'checked' : ''}>\n                            הוסף מיקום לעסקה\n                        </label>\n                        <div class=\"location-container\" style=\"display: ${transaction.location ? 'block' : 'none'}\">\n                            <div class=\"location-input-group\">\n                                <input type=\"text\" id=\"locationName\" name=\"locationName\" \n                                       class=\"form-input location-input\" \n                                       placeholder=\"שם המיקום (לדוגמה: סופר ויקטורי רמת גן)\"\n                                       value=\"${transaction.location?.name || ''}\"\n                                       readonly>\n                                <button type=\"button\" class=\"btn-secondary detect-location-btn\" title=\"זהה מיקום נוכחי\">\n                                    📍 זהה מיקום\n                                </button>\n                                <button type=\"button\" class=\"btn-ghost search-location-btn\" title=\"חפש מיקום\">\n                                    🔍 חפש\n                                </button>\n                            </div>\n                            \n                            <div class=\"location-details\" style=\"display: ${transaction.location?.address ? 'block' : 'none'}\">\n                                <div class=\"location-info\">\n                                    <div class=\"location-address\">\n                                        <span class=\"location-icon\">📍</span>\n                                        <span class=\"address-text\">${transaction.location?.address || ''}</span>\n                                    </div>\n                                    ${transaction.location?.coords ? `\n                                    <div class=\"location-coords\">\n                                        <span class=\"coords-label\">קואורדינטות:</span>\n                                        <span class=\"coords-text\">${transaction.location.coords.lat.toFixed(6)}, ${transaction.location.coords.lng.toFixed(6)}</span>\n                                    </div>\n                                    ` : ''}\n                                    <div class=\"location-actions\">\n                                        <button type=\"button\" class=\"btn-ghost btn-sm view-map-btn\" title=\"צפה במפה\">\n                                            🗺️ צפה במפה\n                                        </button>\n                                        <button type=\"button\" class=\"btn-ghost btn-sm clear-location-btn\" title=\"מחק מיקום\">\n                                            🗑️ מחק מיקום\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                            \n                            <div class=\"location-search-results\" style=\"display: none;\"></div>\n                            \n                            <div class=\"location-help\">\n                                <small class=\"help-text\">\n                                    💡 הוספת מיקום עוזרת לסיווג הוצאות ומעקב אחר דפוסי צריכה לפי מקום\n                                </small>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- Transaction Splitting -->\n                    <div class=\"form-group\">\n                        <label class=\"form-label\">\n                            <input type=\"checkbox\" id=\"splitTransaction\" name=\"splitTransaction\" \n                                   class=\"form-checkbox\"\n                                   ${transaction.split?.enabled ? 'checked' : ''}>\n                            פיצול עסקה בין קטגוריות\n                        </label>\n                        <div class=\"split-container\" style=\"display: ${transaction.split?.enabled ? 'block' : 'none'}\">\n                            <div class=\"split-explanation\">\n                                <div class=\"split-info\">\n                                    💡 פיצול עסקה מאפשר לחלק עסקה אחת בין מספר קטגוריות\n                                    <br>\n                                    <small>לדוגמה: רכישה בסופר (מזון + מוצרי ניקיון + יופי)</small>\n                                </div>\n                                <div class=\"split-total\">\n                                    <span class=\"total-label\">סה\"כ:</span>\n                                    <span class=\"split-total-amount\">₪ 0.00</span>\n                                    <span class=\"remaining-amount\" style=\"display: none;\">\n                                        נותר: <span class=\"remaining-value\">₪ 0.00</span>\n                                    </span>\n                                </div>\n                            </div>\n                            \n                            <div class=\"split-items-container\">\n                                <div class=\"split-items-list\"></div>\n                                <button type=\"button\" class=\"btn-secondary btn-sm add-split-item\">\n                                    + הוסף פיצול\n                                </button>\n                            </div>\n                            \n                            <div class=\"split-actions\">\n                                <button type=\"button\" class=\"btn-ghost btn-sm auto-split-btn\" title=\"פיצול אוטומטי שווה\">\n                                    ⚖️ פיצול שווה\n                                </button>\n                                <button type=\"button\" class=\"btn-ghost btn-sm percentage-split-btn\" title=\"פיצול לפי אחוזים\">\n                                    % פיצול אחוזי\n                                </button>\n                                <button type=\"button\" class=\"btn-ghost btn-sm clear-splits-btn\" title=\"נקה פיצולים\">\n                                    🗑️ נקה הכל\n                                </button>\n                            </div>\n                            \n                            <div class=\"split-validation\">\n                                <div class=\"validation-message\" style=\"display: none;\"></div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- Recurring Transaction -->\n                    <div class=\"form-group\">\n                        <label class=\"form-label\">\n                            <input type=\"checkbox\" id=\"isRecurring\" name=\"isRecurring\" \n                                   class=\"form-checkbox\"\n                                   ${transaction.isRecurring ? 'checked' : ''}>\n                            עסקה חוזרת\n                        </label>\n                        <div class=\"recurring-options\" style=\"display: ${transaction.isRecurring ? 'block' : 'none'}\">\n                            <div class=\"recurring-grid\">\n                                <div class=\"form-group\">\n                                    <label for=\"recurringFrequency\" class=\"form-label\">תדירות</label>\n                                    <select id=\"recurringFrequency\" name=\"recurringFrequency\" class=\"form-input\">\n                                        <option value=\"weekly\" ${transaction.recurringFrequency === 'weekly' ? 'selected' : ''}>שבועי</option>\n                                        <option value=\"biweekly\" ${transaction.recurringFrequency === 'biweekly' ? 'selected' : ''}>דו-שבועי</option>\n                                        <option value=\"monthly\" ${transaction.recurringFrequency === 'monthly' ? 'selected' : ''}>חודשי</option>\n                                        <option value=\"quarterly\" ${transaction.recurringFrequency === 'quarterly' ? 'selected' : ''}>רבעוני</option>\n                                        <option value=\"yearly\" ${transaction.recurringFrequency === 'yearly' ? 'selected' : ''}>שנתי</option>\n                                    </select>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"recurringEndDate\" class=\"form-label\">תאריך סיום (אופציונלי)</label>\n                                    <input type=\"date\" id=\"recurringEndDate\" name=\"recurringEndDate\" \n                                           class=\"form-input\"\n                                           value=\"${transaction.recurringEndDate || ''}\">\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"recurringCount\" class=\"form-label\">מספר פעמים (אופציונלי)</label>\n                                    <input type=\"number\" id=\"recurringCount\" name=\"recurringCount\" \n                                           class=\"form-input\" \n                                           placeholder=\"ללא הגבלה\"\n                                           min=\"1\"\n                                           value=\"${transaction.recurringCount || ''}\">\n                                </div>\n                            </div>\n                            <div class=\"recurring-preview\">\n                                <small class=\"recurring-preview-text\"></small>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- Form Actions -->\n                    <div class=\"form-actions\">\n                        <button type=\"submit\" class=\"btn-primary\">\n                            ${isEdit ? 'עדכן עסקה' : 'שמור עסקה'}\n                        </button>\n                        <button type=\"button\" class=\"btn-secondary\" data-action=\"cancel\">\n                            ביטול\n                        </button>\n                        ${isEdit ? `\n                            <button type=\"button\" class=\"btn-error delete-btn\" data-action=\"delete\">\n                                מחק עסקה\n                            </button>\n                        ` : ''}\n                    </div>\n                </form>\n            </div>\n        `;\n\n        this.formElement = this.container.querySelector('#transactionForm');\n        this.loadCategories();\n        this.loadAccounts();\n        this.initializeAmount();\n        this.initializeTags();\n        this.initializeNotes();\n        this.initializeApprovalSystem();\n        this.initializeReceiptUpload();\n        this.initializeLocationTracking();\n        this.initializeTransactionSplitting();\n    }\n\n    async loadCategories() {\n        try {\n            const { DataManager } = await import('../data/index.js');\n            const categories = await DataManager.getCategories();\n            const categorySelect = this.container.querySelector('#category');\n            \n            // Clear existing options except first\n            categorySelect.innerHTML = '<option value=\"\">בחר קטגוריה...</option>';\n            \n            // Group by type\n            const expenseCategories = categories.filter(cat => cat.type === 'expense');\n            const incomeCategories = categories.filter(cat => cat.type === 'income');\n            \n            if (expenseCategories.length > 0) {\n                const expenseGroup = document.createElement('optgroup');\n                expenseGroup.label = 'הוצאות';\n                expenseCategories.forEach(category => {\n                    const option = document.createElement('option');\n                    option.value = category.id;\n                    option.textContent = category.name;\n                    if (this.options.transaction?.category === category.id) {\n                        option.selected = true;\n                    }\n                    expenseGroup.appendChild(option);\n                });\n                categorySelect.appendChild(expenseGroup);\n            }\n            \n            if (incomeCategories.length > 0) {\n                const incomeGroup = document.createElement('optgroup');\n                incomeGroup.label = 'הכנסות';\n                incomeCategories.forEach(category => {\n                    const option = document.createElement('option');\n                    option.value = category.id;\n                    option.textContent = category.name;\n                    if (this.options.transaction?.category === category.id) {\n                        option.selected = true;\n                    }\n                    incomeGroup.appendChild(option);\n                });\n                categorySelect.appendChild(incomeGroup);\n            }\n        } catch (error) {\n            console.error('Failed to load categories:', error);\n        }\n    }\n\n    async loadAccounts() {\n        try {\n            const { DataManager } = await import('../data/index.js');\n            const accounts = await DataManager.getAccounts();\n            const accountSelect = this.container.querySelector('#account');\n            \n            accounts.forEach(account => {\n                const option = document.createElement('option');\n                option.value = account.id;\n                option.textContent = `${account.name} (${account.type})`;\n                if (this.options.transaction?.account === account.id) {\n                    option.selected = true;\n                }\n                accountSelect.appendChild(option);\n            });\n        } catch (error) {\n            console.error('Failed to load accounts:', error);\n        }\n    }\n\n    initializeAmount() {\n        const amountInput = this.container.querySelector('#amount');\n        const amountPreview = this.container.querySelector('.amount-preview');\n        \n        const updatePreview = () => {\n            const value = parseFloat(amountInput.value);\n            if (!isNaN(value) && value > 0) {\n                amountPreview.textContent = this.formatCurrency(value);\n                amountPreview.style.display = 'block';\n            } else {\n                amountPreview.style.display = 'none';\n            }\n        };\n        \n        amountInput.addEventListener('input', updatePreview);\n        updatePreview();\n    }\n\n    initializeTags() {\n        const tagsInput = this.container.querySelector('#tags');\n        const selectedTagsContainer = this.container.querySelector('.selected-tags');\n        const suggestionsContainer = this.container.querySelector('.tags-suggestions');\n        \n        this.selectedTags = this.options.transaction?.tags ? [...this.options.transaction.tags] : [];\n        this.commonHebrewTags = [\n            'מזומן', 'כרטיס אשראי', 'העברה בנקאית', 'חשבונית', 'קבלה',\n            'עסקי', 'אישי', 'דחוף', 'חודשי', 'שנתי',\n            'מכולת', 'דלק', 'תחבורה', 'בילוי', 'בריאות',\n            'חינוך', 'ביגוד', 'טכנולוגיה', 'מתנה', 'חסכון',\n            'חירום', 'נסיעה', 'מסעדה', 'ספורט', 'תרבות'\n        ];\n        \n        this.updateTagsDisplay();\n        \n        // Clear input value on initialization \n        tagsInput.value = '';\n        \n        // Add tag suggestions functionality\n        tagsInput.addEventListener('input', (e) => {\n            const value = e.target.value.trim();\n            this.showTagSuggestions(value);\n        });\n        \n        // Handle tag selection on Enter or comma\n        tagsInput.addEventListener('keydown', (e) => {\n            if (e.key === 'Enter' || e.key === ',') {\n                e.preventDefault();\n                this.addTagFromInput();\n            } else if (e.key === 'Backspace' && e.target.value === '' && this.selectedTags.length > 0) {\n                // Remove last tag when backspace is pressed on empty input\n                this.removeTag(this.selectedTags.length - 1);\n            }\n        });\n        \n        // Handle clicking away from suggestions\n        document.addEventListener('click', (e) => {\n            if (!suggestionsContainer.contains(e.target) && e.target !== tagsInput) {\n                this.hideSuggestions();\n            }\n        });\n        \n        // Handle suggestion clicks\n        suggestionsContainer.addEventListener('click', (e) => {\n            const suggestion = e.target.closest('.tag-suggestion');\n            if (suggestion) {\n                const tagText = suggestion.dataset.tag;\n                this.addTag(tagText);\n                tagsInput.value = '';\n                this.hideSuggestions();\n            }\n        });\n    }\n\n    addTagFromInput() {\n        const tagsInput = this.container.querySelector('#tags');\n        const value = tagsInput.value.trim();\n        \n        if (value && !this.selectedTags.includes(value)) {\n            this.addTag(value);\n            tagsInput.value = '';\n            this.hideSuggestions();\n        }\n    }\n\n    addTag(tagText) {\n        if (tagText && !this.selectedTags.includes(tagText) && this.selectedTags.length < 10) {\n            this.selectedTags.push(tagText);\n            this.updateTagsDisplay();\n        }\n    }\n\n    removeTag(index) {\n        this.selectedTags.splice(index, 1);\n        this.updateTagsDisplay();\n    }\n\n    updateTagsDisplay() {\n        const selectedTagsContainer = this.container.querySelector('.selected-tags');\n        \n        selectedTagsContainer.innerHTML = this.selectedTags.map((tag, index) => `\n            <span class=\"tag-item\" data-index=\"${index}\">\n                <span class=\"tag-text\">${tag}</span>\n                <button type=\"button\" class=\"tag-remove\" data-index=\"${index}\" title=\"הסר תגית\">×</button>\n            </span>\n        `).join('');\n        \n        // Bind remove events\n        selectedTagsContainer.querySelectorAll('.tag-remove').forEach(btn => {\n            btn.addEventListener('click', (e) => {\n                e.preventDefault();\n                const index = parseInt(e.target.dataset.index);\n                this.removeTag(index);\n            });\n        });\n        \n        // Update hidden input for form submission\n        const hiddenTagsInput = this.container.querySelector('#hiddenTags');\n        if (hiddenTagsInput) {\n            hiddenTagsInput.value = this.selectedTags.join(',');\n        }\n    }\n\n    showTagSuggestions(query) {\n        const suggestionsContainer = this.container.querySelector('.tags-suggestions');\n        \n        if (!query) {\n            this.hideSuggestions();\n            return;\n        }\n        \n        // Filter suggestions based on query\n        const filtered = this.commonHebrewTags.filter(tag => \n            tag.includes(query) && \n            !this.selectedTags.includes(tag)\n        ).slice(0, 5);\n        \n        if (filtered.length === 0) {\n            this.hideSuggestions();\n            return;\n        }\n        \n        suggestionsContainer.innerHTML = filtered.map(tag => `\n            <div class=\"tag-suggestion\" data-tag=\"${tag}\">\n                <span class=\"suggestion-text\">${tag}</span>\n                <span class=\"suggestion-hint\">לחץ להוספה</span>\n            </div>\n        `).join('');\n        \n        suggestionsContainer.style.display = 'block';\n    }\n\n    hideSuggestions() {\n        const suggestionsContainer = this.container.querySelector('.tags-suggestions');\n        suggestionsContainer.style.display = 'none';\n    }\n\n    initializeNotes() {\n        const notesTextarea = this.container.querySelector('#notes');\n        const currentCountSpan = this.container.querySelector('.current-count');\n        const formattingButtons = this.container.querySelectorAll('.formatting-btn');\n        const noteTemplates = this.container.querySelectorAll('.note-template');\n        \n        // Update character count\n        const updateCharacterCount = () => {\n            const length = notesTextarea.value.length;\n            currentCountSpan.textContent = length;\n            \n            // Change color based on usage\n            if (length > 450) {\n                currentCountSpan.style.color = 'var(--error-color)';\n            } else if (length > 350) {\n                currentCountSpan.style.color = 'var(--warning-color)';\n            } else {\n                currentCountSpan.style.color = 'var(--text-secondary)';\n            }\n        };\n        \n        // Initialize character count\n        updateCharacterCount();\n        \n        // Bind events\n        notesTextarea.addEventListener('input', updateCharacterCount);\n        \n        // Handle formatting buttons\n        formattingButtons.forEach(btn => {\n            btn.addEventListener('click', (e) => {\n                e.preventDefault();\n                const format = e.target.dataset.format;\n                this.handleNotesFormatting(format, notesTextarea);\n            });\n        });\n        \n        // Handle note templates\n        noteTemplates.forEach(btn => {\n            btn.addEventListener('click', (e) => {\n                e.preventDefault();\n                const template = e.target.dataset.template;\n                this.insertNoteTemplate(template, notesTextarea);\n            });\n        });\n        \n        // Auto-resize textarea\n        const autoResize = () => {\n            notesTextarea.style.height = 'auto';\n            notesTextarea.style.height = Math.min(notesTextarea.scrollHeight, 200) + 'px';\n        };\n        \n        notesTextarea.addEventListener('input', autoResize);\n        autoResize(); // Initial resize\n    }\n\n    handleNotesFormatting(format, textarea) {\n        const start = textarea.selectionStart;\n        const end = textarea.selectionEnd;\n        const text = textarea.value;\n        \n        switch (format) {\n            case 'bullet':\n                const lines = text.substring(start, end).split('\\n');\n                const bulletText = lines.map(line => line.trim() ? `• ${line.trim()}` : line).join('\\n');\n                this.insertTextAtCursor(textarea, bulletText, start, end);\n                break;\n                \n            case 'date':\n                const now = new Date();\n                const hebrewDate = now.toLocaleDateString('he-IL', {\n                    day: 'numeric',\n                    month: 'long',\n                    year: 'numeric',\n                    hour: '2-digit',\n                    minute: '2-digit'\n                });\n                this.insertTextAtCursor(textarea, `📅 ${hebrewDate}`, start, end);\n                break;\n                \n            case 'clear':\n                if (confirm('האם אתה בטוח שברצונך למחוק את כל ההערות?')) {\n                    textarea.value = '';\n                    textarea.focus();\n                    textarea.dispatchEvent(new Event('input'));\n                }\n                break;\n        }\n    }\n\n    insertNoteTemplate(template, textarea) {\n        const templates = {\n            payment: '💳 תשלום בוצע בהצלחה',\n            receipt: '🧾 התקבלה קבלה למס הכנסה',\n            business: '💼 הוצאה עסקית - ניתן לצירוף לדוח',\n            personal: '👤 הוצאה אישית'\n        };\n        \n        const templateText = templates[template];\n        if (templateText) {\n            const currentText = textarea.value;\n            const newText = currentText ? `${currentText}\\n${templateText}` : templateText;\n            textarea.value = newText;\n            textarea.focus();\n            textarea.setSelectionRange(newText.length, newText.length);\n            textarea.dispatchEvent(new Event('input'));\n        }\n    }\n\n    insertTextAtCursor(textarea, text, start, end) {\n        const before = textarea.value.substring(0, start);\n        const after = textarea.value.substring(end);\n        textarea.value = before + text + after;\n        \n        const newCursorPos = start + text.length;\n        textarea.focus();\n        textarea.setSelectionRange(newCursorPos, newCursorPos);\n        textarea.dispatchEvent(new Event('input'));\n    }\n\n    getStatusIcon(status) {\n        const icons = {\n            'ממתין': '⏳',\n            'מאושר': '✅',\n            'נדחה': '❌',\n            'בביקורת': '🔍'\n        };\n        return icons[status] || '⏳';\n    }\n\n    initializeApprovalSystem() {\n        const statusSelect = this.container.querySelector('#transactionStatus');\n        const approvalDetails = this.container.querySelector('.approval-details');\n        const statusBadge = this.container.querySelector('.status-badge');\n        const quickActionBtns = this.container.querySelectorAll('.quick-action-btn');\n        \n        // Handle status changes\n        statusSelect.addEventListener('change', (e) => {\n            const newStatus = e.target.value;\n            this.updateStatusDisplay(newStatus);\n            \n            // Show/hide approval details\n            if (newStatus === 'ממתין') {\n                approvalDetails.style.display = 'none';\n            } else {\n                approvalDetails.style.display = 'block';\n                // Set current date for approval if not set\n                const approvalDateInput = this.container.querySelector('#approvalDate');\n                if (!approvalDateInput.value) {\n                    const now = new Date();\n                    const localDateTime = new Date(now.getTime() - now.getTimezoneOffset() * 60000)\n                        .toISOString().slice(0, 16);\n                    approvalDateInput.value = localDateTime;\n                }\n            }\n        });\n        \n        // Handle quick action buttons\n        quickActionBtns.forEach(btn => {\n            btn.addEventListener('click', (e) => {\n                e.preventDefault();\n                const action = e.target.dataset.action;\n                this.handleQuickApprovalAction(action);\n            });\n        });\n        \n        // Initialize status display\n        this.updateStatusDisplay(statusSelect.value);\n    }\n\n    updateStatusDisplay(status) {\n        const statusBadge = this.container.querySelector('.status-badge');\n        const statusText = this.container.querySelector('.status-text');\n        \n        // Update badge class\n        statusBadge.className = `status-badge status-${status.replace('ממתין', 'pending').replace('מאושר', 'approved').replace('נדחה', 'rejected').replace('בביקורת', 'review')}`;\n        \n        // Update icon and text\n        statusBadge.innerHTML = `\n            ${this.getStatusIcon(status)}\n            <span class=\"status-text\">${status}</span>\n        `;\n    }\n\n    handleQuickApprovalAction(action) {\n        const statusSelect = this.container.querySelector('#transactionStatus');\n        const approverInput = this.container.querySelector('#approver');\n        const approvalDateInput = this.container.querySelector('#approvalDate');\n        const approvalNotesInput = this.container.querySelector('#approvalNotes');\n        \n        // Get current user (could be from settings or login system)\n        const currentUser = 'משתמש נוכחי'; // In real app, get from auth system\n        \n        // Set current date/time\n        const now = new Date();\n        const localDateTime = new Date(now.getTime() - now.getTimezoneOffset() * 60000)\n            .toISOString().slice(0, 16);\n        \n        switch (action) {\n            case 'approve':\n                statusSelect.value = 'מאושר';\n                approverInput.value = currentUser;\n                approvalDateInput.value = localDateTime;\n                approvalNotesInput.value = approvalNotesInput.value || '✅ עסקה אושרה';\n                break;\n                \n            case 'reject':\n                statusSelect.value = 'נדחה';\n                approverInput.value = currentUser;\n                approvalDateInput.value = localDateTime;\n                approvalNotesInput.value = approvalNotesInput.value || '❌ עסקה נדחתה - נדרש מידע נוסף';\n                break;\n                \n            case 'review':\n                statusSelect.value = 'בביקורת';\n                approverInput.value = currentUser;\n                approvalDateInput.value = localDateTime;\n                approvalNotesInput.value = approvalNotesInput.value || '🔍 העסקה נשלחה לביקורת נוספת';\n                break;\n        }\n        \n        // Trigger status change event\n        statusSelect.dispatchEvent(new Event('change'));\n        \n        // Show success message\n        this.showStatusMessage(action);\n    }\n\n    showStatusMessage(action) {\n        const messages = {\n            approve: 'העסקה אושרה בהצלחה! ✅',\n            reject: 'העסקה נדחתה ❌',\n            review: 'העסקה נשלחה לביקורת 🔍'\n        };\n        \n        if (window.showToast) {\n            const type = action === 'approve' ? 'success' : action === 'reject' ? 'error' : 'info';\n            window.showToast(messages[action], type);\n        }\n    }\n\n    initializeReceiptUpload() {\n        const fileInput = this.container.querySelector('#receiptFiles');\n        const uploadArea = this.container.querySelector('.receipt-upload-area');\n        const previewContainer = this.container.querySelector('.receipt-preview-container');\n        \n        this.receiptFiles = [];\n        \n        // Load existing receipts if editing\n        if (this.options.transaction?.receipts) {\n            this.receiptFiles = [...this.options.transaction.receipts];\n            this.updateReceiptPreview();\n        }\n        \n        // File input change handler\n        fileInput.addEventListener('change', (e) => {\n            this.handleFileSelect(e.target.files);\n        });\n        \n        // Drag and drop handlers\n        uploadArea.addEventListener('dragover', (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            uploadArea.classList.add('drag-over');\n        });\n        \n        uploadArea.addEventListener('dragleave', (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            uploadArea.classList.remove('drag-over');\n        });\n        \n        uploadArea.addEventListener('drop', (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            uploadArea.classList.remove('drag-over');\n            this.handleFileSelect(e.dataTransfer.files);\n        });\n    }\n\n    async handleFileSelect(files) {\n        const maxFileSize = 5 * 1024 * 1024; // 5MB\n        const maxFiles = 10;\n        \n        if (this.receiptFiles.length + files.length > maxFiles) {\n            this.showErrorMessage(`ניתן להעלות עד ${maxFiles} קבצים`);\n            return;\n        }\n        \n        for (let file of files) {\n            if (file.size > maxFileSize) {\n                this.showErrorMessage(`קובץ \"${file.name}\" גדול מדי (מקסימום 5MB)`);\n                continue;\n            }\n            \n            if (!this.isValidFileType(file)) {\n                this.showErrorMessage(`סוג קובץ לא נתמך: ${file.name}`);\n                continue;\n            }\n            \n            try {\n                const receiptData = await this.processReceiptFile(file);\n                this.receiptFiles.push(receiptData);\n            } catch (error) {\n                console.error('Error processing file:', error);\n                this.showErrorMessage(`שגיאה בעיבוד קובץ: ${file.name}`);\n            }\n        }\n        \n        this.updateReceiptPreview();\n    }\n\n    isValidFileType(file) {\n        const validTypes = [\n            'image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp',\n            'application/pdf'\n        ];\n        return validTypes.includes(file.type);\n    }\n\n    async processReceiptFile(file) {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            \n            reader.onload = (e) => {\n                const receiptData = {\n                    id: this.generateId(),\n                    name: file.name,\n                    type: file.type,\n                    size: file.size,\n                    data: e.target.result, // Base64 data URL\n                    uploadedAt: new Date().toISOString()\n                };\n                \n                resolve(receiptData);\n            };\n            \n            reader.onerror = () => {\n                reject(new Error('Failed to read file'));\n            };\n            \n            reader.readAsDataURL(file);\n        });\n    }\n\n    updateReceiptPreview() {\n        const previewContainer = this.container.querySelector('.receipt-preview-container');\n        \n        if (this.receiptFiles.length === 0) {\n            previewContainer.innerHTML = '';\n            return;\n        }\n        \n        previewContainer.innerHTML = `\n            <div class=\"receipt-preview-header\">\n                <span class=\"preview-title\">תמונות שנבחרו (${this.receiptFiles.length})</span>\n                <button type=\"button\" class=\"btn-ghost btn-sm clear-all-receipts\">מחק הכל</button>\n            </div>\n            <div class=\"receipt-preview-grid\">\n                ${this.receiptFiles.map(receipt => this.createReceiptPreview(receipt)).join('')}\n            </div>\n        `;\n        \n        // Bind remove events\n        previewContainer.querySelectorAll('.remove-receipt').forEach(btn => {\n            btn.addEventListener('click', (e) => {\n                const receiptId = e.target.dataset.receiptId;\n                this.removeReceipt(receiptId);\n            });\n        });\n        \n        // Bind clear all event\n        const clearAllBtn = previewContainer.querySelector('.clear-all-receipts');\n        if (clearAllBtn) {\n            clearAllBtn.addEventListener('click', () => {\n                this.receiptFiles = [];\n                this.updateReceiptPreview();\n            });\n        }\n        \n        // Bind view events\n        previewContainer.querySelectorAll('.view-receipt').forEach(btn => {\n            btn.addEventListener('click', (e) => {\n                const receiptId = e.target.dataset.receiptId;\n                this.viewReceipt(receiptId);\n            });\n        });\n    }\n\n    createReceiptPreview(receipt) {\n        const isImage = receipt.type.startsWith('image/');\n        const sizeMB = (receipt.size / 1024 / 1024).toFixed(1);\n        \n        return `\n            <div class=\"receipt-preview-item\" data-receipt-id=\"${receipt.id}\">\n                <div class=\"receipt-thumbnail\">\n                    ${isImage ? \n                        `<img src=\"${receipt.data}\" alt=\"${receipt.name}\" class=\"receipt-image\">` :\n                        `<div class=\"receipt-pdf\">\n                            <span class=\"pdf-icon\">📄</span>\n                            <span class=\"pdf-label\">PDF</span>\n                        </div>`\n                    }\n                </div>\n                <div class=\"receipt-info\">\n                    <div class=\"receipt-name\" title=\"${receipt.name}\">${this.truncateText(receipt.name, 15)}</div>\n                    <div class=\"receipt-size\">${sizeMB} MB</div>\n                </div>\n                <div class=\"receipt-actions\">\n                    <button type=\"button\" class=\"btn-ghost btn-xs view-receipt\" data-receipt-id=\"${receipt.id}\" title=\"צפה\">👁️</button>\n                    <button type=\"button\" class=\"btn-error btn-xs remove-receipt\" data-receipt-id=\"${receipt.id}\" title=\"מחק\">🗑️</button>\n                </div>\n            </div>\n        `;\n    }\n\n    removeReceipt(receiptId) {\n        this.receiptFiles = this.receiptFiles.filter(r => r.id !== receiptId);\n        this.updateReceiptPreview();\n    }\n\n    initializeLocationTracking() {\n        const trackLocationCheckbox = this.container.querySelector('#trackLocation');\n        const locationContainer = this.container.querySelector('.location-container');\n        const detectLocationBtn = this.container.querySelector('.detect-location-btn');\n        const searchLocationBtn = this.container.querySelector('.search-location-btn');\n        const clearLocationBtn = this.container.querySelector('.clear-location-btn');\n        const viewMapBtn = this.container.querySelector('.view-map-btn');\n        const locationInput = this.container.querySelector('#locationName');\n        \n        this.currentLocation = this.options.transaction?.location || null;\n        \n        // Toggle location container\n        trackLocationCheckbox.addEventListener('change', () => {\n            locationContainer.style.display = trackLocationCheckbox.checked ? 'block' : 'none';\n            if (!trackLocationCheckbox.checked) {\n                this.clearLocation();\n            }\n        });\n        \n        // Detect current location\n        detectLocationBtn.addEventListener('click', () => {\n            this.detectCurrentLocation();\n        });\n        \n        // Search for location\n        searchLocationBtn.addEventListener('click', () => {\n            this.showLocationSearch();\n        });\n        \n        // Clear location\n        clearLocationBtn.addEventListener('click', () => {\n            this.clearLocation();\n        });\n        \n        // View location on map\n        viewMapBtn.addEventListener('click', () => {\n            this.viewLocationOnMap();\n        });\n        \n        // Handle Enter key in search\n        locationInput.addEventListener('keydown', (e) => {\n            if (e.key === 'Enter') {\n                e.preventDefault();\n                this.showLocationSearch();\n            }\n        });\n    }\n\n    async detectCurrentLocation() {\n        const detectBtn = this.container.querySelector('.detect-location-btn');\n        const originalText = detectBtn.innerHTML;\n        \n        try {\n            detectBtn.innerHTML = '📍 מזהה...';\n            detectBtn.disabled = true;\n            \n            if (!navigator.geolocation) {\n                throw new Error('הדפדפן לא תומך בזיהוי מיקום');\n            }\n            \n            const position = await this.getCurrentPosition();\n            const coords = {\n                lat: position.coords.latitude,\n                lng: position.coords.longitude\n            };\n            \n            // Reverse geocode to get address\n            const address = await this.reverseGeocode(coords);\n            \n            this.setLocation({\n                name: address.name || 'מיקום נוכחי',\n                address: address.formatted,\n                coords: coords,\n                detectedAt: new Date().toISOString()\n            });\n            \n            this.showSuccessMessage('מיקום זוהה בהצלחה');\n            \n        } catch (error) {\n            console.error('Location detection failed:', error);\n            this.showErrorMessage(error.message || 'שגיאה בזיהוי המיקום');\n        } finally {\n            detectBtn.innerHTML = originalText;\n            detectBtn.disabled = false;\n        }\n    }\n    \n    getCurrentPosition() {\n        return new Promise((resolve, reject) => {\n            const options = {\n                enableHighAccuracy: true,\n                timeout: 10000,\n                maximumAge: 300000 // 5 minutes cache\n            };\n            \n            navigator.geolocation.getCurrentPosition(resolve, reject, options);\n        });\n    }\n    \n    async reverseGeocode(coords) {\n        try {\n            // Use OpenStreetMap Nominatim API for reverse geocoding\n            const response = await fetch(\n                `https://nominatim.openstreetmap.org/reverse?lat=${coords.lat}&lon=${coords.lng}&format=json&addressdetails=1&accept-language=he`\n            );\n            \n            if (!response.ok) {\n                throw new Error('Failed to fetch address');\n            }\n            \n            const data = await response.json();\n            \n            return {\n                name: this.extractLocationName(data),\n                formatted: data.display_name || `${coords.lat.toFixed(6)}, ${coords.lng.toFixed(6)}`,\n                details: data.address || {}\n            };\n        } catch (error) {\n            console.error('Reverse geocoding failed:', error);\n            return {\n                name: 'מיקום נוכחי',\n                formatted: `${coords.lat.toFixed(6)}, ${coords.lng.toFixed(6)}`,\n                details: {}\n            };\n        }\n    }\n    \n    extractLocationName(geocodeData) {\n        const address = geocodeData.address || {};\n        \n        // Prioritize business/shop names\n        if (address.shop) return address.shop;\n        if (address.amenity) return address.amenity;\n        if (address.building) return address.building;\n        \n        // Fallback to area names\n        if (address.suburb) return address.suburb;\n        if (address.neighbourhood) return address.neighbourhood;\n        if (address.city_district) return address.city_district;\n        if (address.city || address.town) return address.city || address.town;\n        \n        return 'מיקום נוכחי';\n    }\n    \n    async showLocationSearch() {\n        const searchQuery = this.container.querySelector('#locationName').value.trim();\n        const searchResults = this.container.querySelector('.location-search-results');\n        \n        if (!searchQuery) {\n            searchResults.style.display = 'none';\n            return;\n        }\n        \n        try {\n            searchResults.innerHTML = '<div class=\"search-loading\">מחפש מיקומים...</div>';\n            searchResults.style.display = 'block';\n            \n            const results = await this.searchLocations(searchQuery);\n            \n            if (results.length === 0) {\n                searchResults.innerHTML = '<div class=\"no-results\">לא נמצאו תוצאות</div>';\n                return;\n            }\n            \n            searchResults.innerHTML = `\n                <div class=\"search-results-header\">תוצאות חיפוש:</div>\n                <div class=\"search-results-list\">\n                    ${results.map((result, index) => `\n                        <div class=\"search-result-item\" data-index=\"${index}\">\n                            <div class=\"result-name\">${result.name}</div>\n                            <div class=\"result-address\">${result.address}</div>\n                        </div>\n                    `).join('')}\n                </div>\n            `;\n            \n            // Bind click events to results\n            searchResults.querySelectorAll('.search-result-item').forEach(item => {\n                item.addEventListener('click', () => {\n                    const index = parseInt(item.dataset.index);\n                    this.selectSearchResult(results[index]);\n                    searchResults.style.display = 'none';\n                });\n            });\n            \n        } catch (error) {\n            console.error('Location search failed:', error);\n            searchResults.innerHTML = '<div class=\"search-error\">שגיאה בחיפוש מיקומים</div>';\n        }\n    }\n    \n    async searchLocations(query) {\n        try {\n            // Use OpenStreetMap Nominatim API for location search\n            const response = await fetch(\n                `https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(query)}&format=json&addressdetails=1&limit=5&countrycodes=il&accept-language=he`\n            );\n            \n            if (!response.ok) {\n                throw new Error('Search request failed');\n            }\n            \n            const data = await response.json();\n            \n            return data.map(item => ({\n                name: this.extractLocationName(item),\n                address: item.display_name,\n                coords: {\n                    lat: parseFloat(item.lat),\n                    lng: parseFloat(item.lon)\n                },\n                details: item.address || {}\n            }));\n            \n        } catch (error) {\n            console.error('Location search error:', error);\n            throw error;\n        }\n    }\n    \n    selectSearchResult(location) {\n        this.setLocation({\n            name: location.name,\n            address: location.address,\n            coords: location.coords,\n            selectedAt: new Date().toISOString()\n        });\n        \n        this.showSuccessMessage(`נבחר מיקום: ${location.name}`);\n    }\n    \n    setLocation(locationData) {\n        this.currentLocation = locationData;\n        \n        const locationInput = this.container.querySelector('#locationName');\n        const locationDetails = this.container.querySelector('.location-details');\n        const addressText = this.container.querySelector('.address-text');\n        const coordsText = this.container.querySelector('.coords-text');\n        \n        // Update input\n        locationInput.value = locationData.name;\n        \n        // Update address display\n        addressText.textContent = locationData.address;\n        \n        // Update coordinates if available\n        if (locationData.coords && coordsText) {\n            coordsText.textContent = `${locationData.coords.lat.toFixed(6)}, ${locationData.coords.lng.toFixed(6)}`;\n        }\n        \n        // Show location details\n        locationDetails.style.display = 'block';\n    }\n    \n    clearLocation() {\n        this.currentLocation = null;\n        \n        const locationInput = this.container.querySelector('#locationName');\n        const locationDetails = this.container.querySelector('.location-details');\n        const searchResults = this.container.querySelector('.location-search-results');\n        \n        locationInput.value = '';\n        locationDetails.style.display = 'none';\n        searchResults.style.display = 'none';\n    }\n    \n    async viewLocationOnMap() {\n        if (!this.currentLocation?.coords) {\n            this.showErrorMessage('אין קואורדינטות זמינות למיקום');\n            return;\n        }\n        \n        try {\n            const { Modal } = await import('./Modal.js');\n            \n            const modalContainer = document.createElement('div');\n            const modal = new Modal(modalContainer, {\n                title: `מפה: ${this.currentLocation.name}`,\n                size: 'large',\n                onClose: () => {\n                    modalContainer.remove();\n                }\n            });\n\n            const coords = this.currentLocation.coords;\n            const mapContent = `\n                <div class=\"location-map-container\">\n                    <div class=\"map-info\">\n                        <strong>${this.currentLocation.name}</strong><br>\n                        <small>${this.currentLocation.address}</small>\n                    </div>\n                    <div class=\"map-iframe-container\">\n                        <iframe \n                            src=\"https://www.openstreetmap.org/export/embed.html?bbox=${coords.lng-0.01},${coords.lat-0.01},${coords.lng+0.01},${coords.lat+0.01}&layer=mapnik&marker=${coords.lat},${coords.lng}\"\n                            class=\"location-map-iframe\"\n                            frameborder=\"0\"\n                            scrolling=\"no\">\n                        </iframe>\n                    </div>\n                    <div class=\"map-actions\">\n                        <a href=\"https://www.google.com/maps?q=${coords.lat},${coords.lng}\" \n                           target=\"_blank\" \n                           class=\"btn-secondary\">\n                            🗺️ פתח ב-Google Maps\n                        </a>\n                        <a href=\"https://www.openstreetmap.org/?mlat=${coords.lat}&mlon=${coords.lng}&zoom=16\" \n                           target=\"_blank\" \n                           class=\"btn-ghost\">\n                            🌐 פתח ב-OpenStreetMap\n                        </a>\n                    </div>\n                </div>\n            `;\n\n            modal.setContent(mapContent);\n            modal.open();\n            \n            document.body.appendChild(modalContainer);\n            \n        } catch (error) {\n            console.error('Failed to show map:', error);\n            this.showErrorMessage('שגיאה בהצגת המפה');\n        }\n    }\n\n    initializeTransactionSplitting() {\n        const splitCheckbox = this.container.querySelector('#splitTransaction');\n        const splitContainer = this.container.querySelector('.split-container');\n        const addSplitBtn = this.container.querySelector('.add-split-item');\n        const autoSplitBtn = this.container.querySelector('.auto-split-btn');\n        const percentageSplitBtn = this.container.querySelector('.percentage-split-btn');\n        const clearSplitsBtn = this.container.querySelector('.clear-splits-btn');\n        \n        this.splitItems = this.options.transaction?.split?.items || [];\n        \n        // Toggle split container\n        splitCheckbox.addEventListener('change', () => {\n            splitContainer.style.display = splitCheckbox.checked ? 'block' : 'none';\n            if (splitCheckbox.checked && this.splitItems.length === 0) {\n                this.addSplitItem();\n            } else if (!splitCheckbox.checked) {\n                this.clearSplitItems();\n            }\n            this.updateSplitDisplay();\n        });\n        \n        // Add split item\n        addSplitBtn.addEventListener('click', () => {\n            this.addSplitItem();\n        });\n        \n        // Auto split evenly\n        autoSplitBtn.addEventListener('click', () => {\n            this.autoSplitEvenly();\n        });\n        \n        // Percentage split\n        percentageSplitBtn.addEventListener('click', () => {\n            this.showPercentageSplitDialog();\n        });\n        \n        // Clear splits\n        clearSplitsBtn.addEventListener('click', () => {\n            this.clearSplitItems();\n        });\n        \n        // Initialize display\n        this.updateSplitDisplay();\n        \n        // Listen to amount changes\n        const amountInput = this.container.querySelector('#amount');\n        amountInput.addEventListener('input', () => {\n            this.updateSplitTotals();\n        });\n    }\n    \n    addSplitItem(splitData = null) {\n        const splitId = this.generateId();\n        const splitItem = splitData || {\n            id: splitId,\n            category: '',\n            amount: 0,\n            description: '',\n            percentage: 0\n        };\n        \n        this.splitItems.push(splitItem);\n        this.updateSplitDisplay();\n        \n        // Focus on the new item's category select\n        setTimeout(() => {\n            const newCategorySelect = this.container.querySelector(`[data-split-id=\"${splitId}\"] .split-category`);\n            if (newCategorySelect) {\n                newCategorySelect.focus();\n            }\n        }, 100);\n    }\n    \n    removeSplitItem(splitId) {\n        this.splitItems = this.splitItems.filter(item => item.id !== splitId);\n        this.updateSplitDisplay();\n    }\n    \n    updateSplitDisplay() {\n        const splitItemsList = this.container.querySelector('.split-items-list');\n        const totalAmount = parseFloat(this.container.querySelector('#amount').value) || 0;\n        \n        if (this.splitItems.length === 0) {\n            splitItemsList.innerHTML = '<div class=\"no-splits\">אין פיצולים - הוסף פיצול ראשון</div>';\n            this.updateSplitTotals();\n            return;\n        }\n        \n        splitItemsList.innerHTML = this.splitItems.map((item, index) => \n            this.createSplitItemHTML(item, index)\n        ).join('');\n        \n        // Bind events for each split item\n        this.splitItems.forEach((item, index) => {\n            this.bindSplitItemEvents(item.id, index);\n        });\n        \n        this.loadCategoriesForSplits();\n        this.updateSplitTotals();\n    }\n    \n    createSplitItemHTML(item, index) {\n        return `\n            <div class=\"split-item\" data-split-id=\"${item.id}\">\n                <div class=\"split-item-header\">\n                    <span class=\"split-item-number\">#${index + 1}</span>\n                    <button type=\"button\" class=\"btn-error btn-xs remove-split\" data-split-id=\"${item.id}\" title=\"הסר פיצול\">\n                        🗑️\n                    </button>\n                </div>\n                \n                <div class=\"split-item-content\">\n                    <div class=\"split-row\">\n                        <div class=\"split-field\">\n                            <label class=\"split-label\">קטגוריה</label>\n                            <select class=\"form-input split-category\" data-split-id=\"${item.id}\">\n                                <option value=\"\">בחר קטגוריה...</option>\n                            </select>\n                        </div>\n                        \n                        <div class=\"split-field split-amount-field\">\n                            <label class=\"split-label\">סכום</label>\n                            <div class=\"split-amount-container\">\n                                <input type=\"number\" \n                                       class=\"form-input split-amount\" \n                                       data-split-id=\"${item.id}\"\n                                       placeholder=\"0.00\" \n                                       step=\"0.01\" \n                                       min=\"0\"\n                                       value=\"${item.amount || ''}\">\n                                <span class=\"currency-symbol\">₪</span>\n                            </div>\n                        </div>\n                        \n                        <div class=\"split-field split-percentage-field\">\n                            <label class=\"split-label\">אחוז</label>\n                            <div class=\"split-percentage-container\">\n                                <input type=\"number\" \n                                       class=\"form-input split-percentage\" \n                                       data-split-id=\"${item.id}\"\n                                       placeholder=\"0\" \n                                       step=\"0.1\" \n                                       min=\"0\" \n                                       max=\"100\"\n                                       value=\"${item.percentage || ''}\">\n                                <span class=\"percentage-symbol\">%</span>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <div class=\"split-row\">\n                        <div class=\"split-field split-description-field\">\n                            <label class=\"split-label\">תיאור (אופציונלי)</label>\n                            <input type=\"text\" \n                                   class=\"form-input split-description\" \n                                   data-split-id=\"${item.id}\"\n                                   placeholder=\"תיאור הפיצול...\"\n                                   value=\"${item.description || ''}\">\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `;\n    }\n    \n    bindSplitItemEvents(splitId, index) {\n        const splitItem = this.container.querySelector(`[data-split-id=\"${splitId}\"]`);\n        \n        // Remove button\n        const removeBtn = splitItem.querySelector('.remove-split');\n        removeBtn.addEventListener('click', () => {\n            this.removeSplitItem(splitId);\n        });\n        \n        // Amount input\n        const amountInput = splitItem.querySelector('.split-amount');\n        amountInput.addEventListener('input', (e) => {\n            this.updateSplitItemAmount(splitId, parseFloat(e.target.value) || 0);\n        });\n        \n        // Percentage input\n        const percentageInput = splitItem.querySelector('.split-percentage');\n        percentageInput.addEventListener('input', (e) => {\n            this.updateSplitItemPercentage(splitId, parseFloat(e.target.value) || 0);\n        });\n        \n        // Category select\n        const categorySelect = splitItem.querySelector('.split-category');\n        categorySelect.addEventListener('change', (e) => {\n            this.updateSplitItemCategory(splitId, e.target.value);\n        });\n        \n        // Description input\n        const descriptionInput = splitItem.querySelector('.split-description');\n        descriptionInput.addEventListener('input', (e) => {\n            this.updateSplitItemDescription(splitId, e.target.value);\n        });\n    }\n    \n    updateSplitItemAmount(splitId, amount) {\n        const item = this.splitItems.find(i => i.id === splitId);\n        if (item) {\n            item.amount = amount;\n            \n            // Calculate percentage based on total amount\n            const totalAmount = parseFloat(this.container.querySelector('#amount').value) || 0;\n            if (totalAmount > 0) {\n                item.percentage = (amount / totalAmount) * 100;\n                \n                // Update percentage display\n                const percentageInput = this.container.querySelector(`[data-split-id=\"${splitId}\"] .split-percentage`);\n                percentageInput.value = item.percentage.toFixed(1);\n            }\n            \n            this.updateSplitTotals();\n        }\n    }\n    \n    updateSplitItemPercentage(splitId, percentage) {\n        const item = this.splitItems.find(i => i.id === splitId);\n        if (item) {\n            item.percentage = percentage;\n            \n            // Calculate amount based on percentage\n            const totalAmount = parseFloat(this.container.querySelector('#amount').value) || 0;\n            item.amount = (totalAmount * percentage) / 100;\n            \n            // Update amount display\n            const amountInput = this.container.querySelector(`[data-split-id=\"${splitId}\"] .split-amount`);\n            amountInput.value = item.amount.toFixed(2);\n            \n            this.updateSplitTotals();\n        }\n    }\n    \n    updateSplitItemCategory(splitId, categoryId) {\n        const item = this.splitItems.find(i => i.id === splitId);\n        if (item) {\n            item.category = categoryId;\n        }\n    }\n    \n    updateSplitItemDescription(splitId, description) {\n        const item = this.splitItems.find(i => i.id === splitId);\n        if (item) {\n            item.description = description;\n        }\n    }\n    \n    updateSplitTotals() {\n        const totalAmount = parseFloat(this.container.querySelector('#amount').value) || 0;\n        const splitTotal = this.splitItems.reduce((sum, item) => sum + (item.amount || 0), 0);\n        const remaining = totalAmount - splitTotal;\n        \n        // Update displays\n        const splitTotalAmount = this.container.querySelector('.split-total-amount');\n        const remainingAmount = this.container.querySelector('.remaining-amount');\n        const remainingValue = this.container.querySelector('.remaining-value');\n        const validationMessage = this.container.querySelector('.validation-message');\n        \n        if (splitTotalAmount) {\n            splitTotalAmount.textContent = this.formatCurrency(totalAmount);\n        }\n        \n        if (remainingAmount && remainingValue) {\n            remainingValue.textContent = this.formatCurrency(remaining);\n            \n            if (Math.abs(remaining) > 0.01) {\n                remainingAmount.style.display = 'inline';\n                remainingAmount.className = `remaining-amount ${remaining > 0 ? 'positive' : 'negative'}`;\n            } else {\n                remainingAmount.style.display = 'none';\n            }\n        }\n        \n        // Show validation message\n        if (validationMessage) {\n            if (Math.abs(remaining) > 0.01 && this.splitItems.length > 0) {\n                const message = remaining > 0 ? \n                    `⚠️ יתרת ${this.formatCurrency(remaining)} לא חולקה` :\n                    `⚠️ חריגה של ${this.formatCurrency(Math.abs(remaining))} מהסכום הכולל`;\n                    \n                validationMessage.textContent = message;\n                validationMessage.style.display = 'block';\n                validationMessage.className = 'validation-message warning';\n            } else if (this.splitItems.length > 0) {\n                validationMessage.textContent = '✅ הפיצול מאוזן בהצלחה';\n                validationMessage.style.display = 'block';\n                validationMessage.className = 'validation-message success';\n            } else {\n                validationMessage.style.display = 'none';\n            }\n        }\n    }\n    \n    async loadCategoriesForSplits() {\n        try {\n            const { DataManager } = await import('../data/index.js');\n            const categories = await DataManager.getCategories();\n            \n            // Get current transaction type\n            const transactionType = this.container.querySelector('input[name=\"type\"]:checked')?.value || 'expense';\n            const filteredCategories = categories.filter(cat => cat.type === transactionType);\n            \n            // Update all split category selects\n            this.splitItems.forEach(item => {\n                const categorySelect = this.container.querySelector(`[data-split-id=\"${item.id}\"] .split-category`);\n                if (categorySelect) {\n                    // Save current value\n                    const currentValue = item.category;\n                    \n                    // Clear and repopulate\n                    categorySelect.innerHTML = '<option value=\"\">בחר קטגוריה...</option>';\n                    \n                    filteredCategories.forEach(category => {\n                        const option = document.createElement('option');\n                        option.value = category.id;\n                        option.textContent = category.name;\n                        if (category.id === currentValue) {\n                            option.selected = true;\n                        }\n                        categorySelect.appendChild(option);\n                    });\n                }\n            });\n        } catch (error) {\n            console.error('Failed to load categories for splits:', error);\n        }\n    }\n    \n    autoSplitEvenly() {\n        const totalAmount = parseFloat(this.container.querySelector('#amount').value) || 0;\n        \n        if (totalAmount <= 0 || this.splitItems.length === 0) {\n            this.showErrorMessage('נדרש סכום חיובי ולפחות פיצול אחד');\n            return;\n        }\n        \n        const amountPerSplit = totalAmount / this.splitItems.length;\n        const percentagePerSplit = 100 / this.splitItems.length;\n        \n        this.splitItems.forEach((item, index) => {\n            item.amount = amountPerSplit;\n            item.percentage = percentagePerSplit;\n            \n            // Update inputs\n            const amountInput = this.container.querySelector(`[data-split-id=\"${item.id}\"] .split-amount`);\n            const percentageInput = this.container.querySelector(`[data-split-id=\"${item.id}\"] .split-percentage`);\n            \n            if (amountInput) amountInput.value = amountPerSplit.toFixed(2);\n            if (percentageInput) percentageInput.value = percentagePerSplit.toFixed(1);\n        });\n        \n        this.updateSplitTotals();\n        this.showSuccessMessage('פיצול שווה בוצע בהצלחה');\n    }\n    \n    async showPercentageSplitDialog() {\n        try {\n            const { Modal } = await import('./Modal.js');\n            \n            const modalContainer = document.createElement('div');\n            const modal = new Modal(modalContainer, {\n                title: 'פיצול לפי אחוזים',\n                size: 'medium',\n                onClose: () => {\n                    modalContainer.remove();\n                }\n            });\n\n            const content = `\n                <div class=\"percentage-split-dialog\">\n                    <div class=\"dialog-explanation\">\n                        <p>הזן אחוזים עבור כל פיצול. הסכום יחושב אוטומטית.</p>\n                        <small>סה\"כ אחוזים צריכים להגיע ל-100%</small>\n                    </div>\n                    \n                    <div class=\"percentage-inputs\">\n                        ${this.splitItems.map((item, index) => `\n                            <div class=\"percentage-input-row\">\n                                <label>פיצול #${index + 1}:</label>\n                                <div class=\"percentage-input-container\">\n                                    <input type=\"number\" \n                                           class=\"form-input percentage-dialog-input\" \n                                           data-split-id=\"${item.id}\"\n                                           placeholder=\"0\" \n                                           step=\"0.1\" \n                                           min=\"0\" \n                                           max=\"100\"\n                                           value=\"${item.percentage || ''}\">\n                                    <span class=\"percentage-symbol\">%</span>\n                                </div>\n                            </div>\n                        `).join('')}\n                    </div>\n                    \n                    <div class=\"percentage-total\">\n                        <strong>סה\"כ: <span class=\"total-percentage\">0</span>%</strong>\n                    </div>\n                    \n                    <div class=\"dialog-actions\">\n                        <button type=\"button\" class=\"btn-primary apply-percentages\">החל אחוזים</button>\n                        <button type=\"button\" class=\"btn-secondary cancel-percentages\">ביטול</button>\n                    </div>\n                </div>\n            `;\n\n            modal.setContent(content);\n            modal.open();\n            document.body.appendChild(modalContainer);\n            \n            // Bind events\n            const updateTotal = () => {\n                const inputs = modalContainer.querySelectorAll('.percentage-dialog-input');\n                const total = Array.from(inputs).reduce((sum, input) => \n                    sum + (parseFloat(input.value) || 0), 0\n                );\n                modalContainer.querySelector('.total-percentage').textContent = total.toFixed(1);\n            };\n            \n            modalContainer.querySelectorAll('.percentage-dialog-input').forEach(input => {\n                input.addEventListener('input', updateTotal);\n            });\n            \n            modalContainer.querySelector('.apply-percentages').addEventListener('click', () => {\n                this.applyPercentageSplit(modalContainer);\n                modal.close();\n            });\n            \n            modalContainer.querySelector('.cancel-percentages').addEventListener('click', () => {\n                modal.close();\n            });\n            \n            updateTotal();\n            \n        } catch (error) {\n            console.error('Failed to show percentage split dialog:', error);\n            this.showErrorMessage('שגיאה בהצגת דיאלוג הפיצול');\n        }\n    }\n    \n    applyPercentageSplit(modalContainer) {\n        const inputs = modalContainer.querySelectorAll('.percentage-dialog-input');\n        const totalAmount = parseFloat(this.container.querySelector('#amount').value) || 0;\n        \n        inputs.forEach(input => {\n            const splitId = input.dataset.splitId;\n            const percentage = parseFloat(input.value) || 0;\n            \n            this.updateSplitItemPercentage(splitId, percentage);\n        });\n        \n        this.updateSplitDisplay();\n        this.showSuccessMessage('פיצול אחוזי הוחל בהצלחה');\n    }\n    \n    clearSplitItems() {\n        this.splitItems = [];\n        this.updateSplitDisplay();\n    }\n    \n    validateSplits() {\n        if (!this.container.querySelector('#splitTransaction').checked) {\n            return { isValid: true, errors: [] };\n        }\n        \n        const errors = [];\n        const totalAmount = parseFloat(this.container.querySelector('#amount').value) || 0;\n        const splitTotal = this.splitItems.reduce((sum, item) => sum + (item.amount || 0), 0);\n        \n        if (this.splitItems.length === 0) {\n            errors.push('נדרש לפחות פיצול אחד כאשר הפיצול מופעל');\n        }\n        \n        // Check if all splits have categories\n        const missingCategories = this.splitItems.filter(item => !item.category);\n        if (missingCategories.length > 0) {\n            errors.push(`${missingCategories.length} פיצולים חסרי קטגוריה`);\n        }\n        \n        // Check if total matches\n        if (Math.abs(totalAmount - splitTotal) > 0.01) {\n            errors.push('סכום הפיצולים לא תואם לסכום הכולל');\n        }\n        \n        return {\n            isValid: errors.length === 0,\n            errors\n        };\n    }\n\n    async viewReceipt(receiptId) {\n        const receipt = this.receiptFiles.find(r => r.id === receiptId);\n        if (!receipt) return;\n        \n        try {\n            const { Modal } = await import('./Modal.js');\n            \n            const modalContainer = document.createElement('div');\n            const modal = new Modal(modalContainer, {\n                title: receipt.name,\n                size: 'large',\n                onClose: () => {\n                    modalContainer.remove();\n                }\n            });\n\n            const content = receipt.type.startsWith('image/') ? \n                `<div class=\"receipt-full-view\">\n                    <img src=\"${receipt.data}\" alt=\"${receipt.name}\" class=\"receipt-full-image\">\n                </div>` :\n                `<div class=\"receipt-pdf-view\">\n                    <iframe src=\"${receipt.data}\" class=\"receipt-pdf-iframe\"></iframe>\n                </div>`;\n\n            modal.setContent(content);\n            modal.open();\n            \n            document.body.appendChild(modalContainer);\n            \n        } catch (error) {\n            console.error('Failed to view receipt:', error);\n            this.showErrorMessage('שגיאה בהצגת התמונה');\n        }\n    }\n\n    truncateText(text, maxLength) {\n        return text.length > maxLength ? text.substring(0, maxLength) + '...' : text;\n    }\n\n    bindEvents() {\n        // Form submission\n        this.formElement.addEventListener('submit', (e) => {\n            e.preventDefault();\n            this.handleSubmit();\n        });\n\n        // Cancel buttons\n        this.container.querySelectorAll('[data-action=\"cancel\"]').forEach(btn => {\n            btn.addEventListener('click', () => this.handleCancel());\n        });\n\n        // Delete button (edit mode)\n        const deleteBtn = this.container.querySelector('[data-action=\"delete\"]');\n        if (deleteBtn) {\n            deleteBtn.addEventListener('click', () => this.handleDelete());\n        }\n\n        // Transaction type change\n        this.container.querySelectorAll('input[name=\"type\"]').forEach(radio => {\n            radio.addEventListener('change', () => this.handleTypeChange());\n        });\n\n        // Recurring checkbox and options\n        const recurringCheckbox = this.container.querySelector('#isRecurring');\n        const recurringOptions = this.container.querySelector('.recurring-options');\n        const recurringFrequency = this.container.querySelector('#recurringFrequency');\n        const recurringEndDate = this.container.querySelector('#recurringEndDate');\n        const recurringCount = this.container.querySelector('#recurringCount');\n        \n        recurringCheckbox.addEventListener('change', () => {\n            recurringOptions.style.display = recurringCheckbox.checked ? 'block' : 'none';\n            this.updateRecurringPreview();\n        });\n        \n        // Update preview when recurring options change\n        [recurringFrequency, recurringEndDate, recurringCount].forEach(element => {\n            element.addEventListener('change', () => this.updateRecurringPreview());\n            element.addEventListener('input', () => this.updateRecurringPreview());\n        });\n        \n        // Initialize recurring preview\n        this.updateRecurringPreview();\n\n        // Add category button\n        const addCategoryBtn = this.container.querySelector('.add-category-btn');\n        addCategoryBtn.addEventListener('click', () => this.showAddCategoryDialog());\n    }\n\n    handleTypeChange() {\n        // Reload categories based on transaction type\n        this.loadCategories();\n    }\n\n    async handleSubmit() {\n        const formData = new FormData(this.formElement);\n        const transactionData = {\n            id: this.options.transaction?.id || this.generateId(),\n            type: formData.get('type'),\n            amount: parseFloat(formData.get('amount')),\n            description: formData.get('description'),\n            category: formData.get('category'),\n            account: formData.get('account'),\n            date: formData.get('date'),\n            tags: this.selectedTags || [],\n            notes: formData.get('notes'),\n            receipts: this.receiptFiles || [], // Add receipt files to transaction data\n            location: this.currentLocation || null, // Add location data to transaction\n            split: this.container.querySelector('#splitTransaction').checked ? {\n                enabled: true,\n                items: this.splitItems || []\n            } : { enabled: false, items: [] }, // Add split data to transaction\n            status: formData.get('transactionStatus') || 'ממתין',\n            approver: formData.get('approver'),\n            approvalDate: formData.get('approvalDate'),\n            approvalNotes: formData.get('approvalNotes'),\n            isRecurring: formData.has('isRecurring'),\n            recurringFrequency: formData.get('recurringFrequency'),\n            recurringEndDate: formData.get('recurringEndDate'),\n            recurringCount: formData.get('recurringCount') ? parseInt(formData.get('recurringCount')) : null,\n            createdAt: this.options.transaction?.createdAt || new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n        };\n\n        try {\n            const { DataManager } = await import('../data/index.js');\n            \n            if (this.options.mode === 'edit') {\n                await DataManager.updateTransaction(transactionData.id, transactionData);\n            } else {\n                await DataManager.addTransaction(transactionData);\n            }\n\n            if (this.options.onSave) {\n                this.options.onSave(transactionData);\n            }\n\n            this.showSuccessMessage();\n        } catch (error) {\n            console.error('Failed to save transaction:', error);\n            this.showErrorMessage('שגיאה בשמירת העסקה');\n        }\n    }\n\n    handleCancel() {\n        if (this.options.onCancel) {\n            this.options.onCancel();\n        }\n    }\n\n    async handleDelete() {\n        if (!confirm('האם אתה בטוח שברצונך למחוק את העסקה?')) {\n            return;\n        }\n\n        try {\n            const { DataManager } = await import('../data/index.js');\n            await DataManager.deleteTransaction(this.options.transaction.id);\n            \n            if (this.options.onSave) {\n                this.options.onSave(null, 'deleted');\n            }\n            \n            this.showSuccessMessage();\n        } catch (error) {\n            console.error('Failed to delete transaction:', error);\n            this.showErrorMessage('שגיאה במחיקת העסקה');\n        }\n    }\n\n    async showAddCategoryDialog() {\n        try {\n            // Check if CategoryManager is available\n            if (typeof CategoryManager === 'undefined') {\n                await import('./CategoryManager.js');\n            }\n\n            // Create modal for category management\n            const { Modal } = await import('./Modal.js');\n            \n            const modalContainer = document.createElement('div');\n            const modal = new Modal(modalContainer, {\n                title: 'ניהול קטגוריות',\n                size: 'large',\n                onClose: () => {\n                    modalContainer.remove();\n                    // Reload categories in the form\n                    this.loadCategories();\n                }\n            });\n\n            // Create category manager inside modal\n            const categoryManagerContainer = document.createElement('div');\n            const categoryManager = new CategoryManager(categoryManagerContainer, {\n                mode: 'manage',\n                allowAdd: true,\n                allowEdit: true,\n                allowDelete: true,\n                onAdd: (category) => {\n                    this.showSuccessMessage(`קטגוריה \"${category.name}\" נוספה בהצלחה`);\n                },\n                onEdit: (category) => {\n                    this.showSuccessMessage(`קטגוריה \"${category.name}\" עודכנה בהצלחה`);\n                },\n                onDelete: (category) => {\n                    this.showSuccessMessage(`קטגוריה \"${category.name}\" נמחקה בהצלחה`);\n                }\n            });\n\n            modal.setContent(categoryManagerContainer);\n            modal.open();\n            \n            // Append modal to body\n            document.body.appendChild(modalContainer);\n            \n        } catch (error) {\n            console.error('Failed to load category manager:', error);\n            this.showErrorMessage('שגיאה בטעינת מנהל הקטגוריות');\n        }\n    }\n\n    generateId() {\n        return 'tx_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n    }\n\n    formatCurrency(amount) {\n        return new Intl.NumberFormat('he-IL', {\n            style: 'currency',\n            currency: 'ILS',\n            minimumFractionDigits: 2\n        }).format(amount);\n    }\n\n    showSuccessMessage() {\n        // Use existing Toast component\n        if (window.showToast) {\n            window.showToast('העסקה נשמרה בהצלחה', 'success');\n        }\n    }\n\n    showErrorMessage(message) {\n        // Use existing Toast component\n        if (window.showToast) {\n            window.showToast(message, 'error');\n        }\n    }\n\n    // Public method to get form data without saving\n    getFormData() {\n        const formData = new FormData(this.formElement);\n        return {\n            type: formData.get('type'),\n            amount: parseFloat(formData.get('amount')),\n            description: formData.get('description'),\n            category: formData.get('category'),\n            account: formData.get('account'),\n            date: formData.get('date'),\n            tags: this.selectedTags || [],\n            notes: formData.get('notes'),\n            isRecurring: formData.has('isRecurring'),\n            recurringFrequency: formData.get('recurringFrequency'),\n            recurringEndDate: formData.get('recurringEndDate'),\n            recurringCount: formData.get('recurringCount') ? parseInt(formData.get('recurringCount')) : null\n        };\n    }\n\n    // Update recurring transaction preview\n    updateRecurringPreview() {\n        const isRecurring = this.container.querySelector('#isRecurring').checked;\n        const previewElement = this.container.querySelector('.recurring-preview-text');\n        \n        if (!isRecurring || !previewElement) {\n            if (previewElement) previewElement.textContent = '';\n            return;\n        }\n\n        const frequency = this.container.querySelector('#recurringFrequency').value;\n        const endDate = this.container.querySelector('#recurringEndDate').value;\n        const count = this.container.querySelector('#recurringCount').value;\n        const startDate = this.container.querySelector('#date').value;\n\n        const frequencyLabels = {\n            weekly: 'שבוע',\n            biweekly: 'שבועיים', \n            monthly: 'חודש',\n            quarterly: '3 חודשים',\n            yearly: 'שנה'\n        };\n\n        let preview = `העסקה תחזור כל ${frequencyLabels[frequency]}`;\n        \n        if (startDate) {\n            const nextDate = this.calculateNextOccurrence(startDate, frequency);\n            preview += `. מועד הבא: ${this.formatHebrewDate(nextDate)}`;\n        }\n\n        if (count) {\n            preview += `. סה\"כ ${count} פעמים`;\n        } else if (endDate) {\n            preview += `. עד ${this.formatHebrewDate(endDate)}`;\n        } else {\n            preview += '. ללא הגבלת זמן';\n        }\n\n        previewElement.textContent = preview;\n    }\n\n    // Calculate next occurrence of recurring transaction\n    calculateNextOccurrence(dateStr, frequency) {\n        const date = new Date(dateStr);\n        \n        switch (frequency) {\n            case 'weekly':\n                date.setDate(date.getDate() + 7);\n                break;\n            case 'biweekly':\n                date.setDate(date.getDate() + 14);\n                break;\n            case 'monthly':\n                date.setMonth(date.getMonth() + 1);\n                break;\n            case 'quarterly':\n                date.setMonth(date.getMonth() + 3);\n                break;\n            case 'yearly':\n                date.setFullYear(date.getFullYear() + 1);\n                break;\n        }\n        \n        return date.toISOString().split('T')[0];\n    }\n\n    // Format date in Hebrew\n    formatHebrewDate(dateStr) {\n        const date = new Date(dateStr);\n        return date.toLocaleDateString('he-IL', {\n            day: 'numeric',\n            month: 'long',\n            year: 'numeric'\n        });\n    }\n\n    // Public method to validate form\n    validateForm() {\n        const formData = this.getFormData();\n        const errors = [];\n\n        if (!formData.amount || formData.amount <= 0) {\n            errors.push('נדרש סכום חיובי');\n        }\n        if (!formData.description?.trim()) {\n            errors.push('נדרש תיאור');\n        }\n        if (!formData.category) {\n            errors.push('נדרשת קטגוריה');\n        }\n        if (!formData.account) {\n            errors.push('נדרש חשבון');\n        }\n        if (!formData.date) {\n            errors.push('נדרש תאריך');\n        }\n\n        // Validate splits if enabled\n        const splitValidation = this.validateSplits();\n        if (!splitValidation.isValid) {\n            errors.push(...splitValidation.errors);\n        }\n\n        return {\n            isValid: errors.length === 0,\n            errors\n        };\n    }\n}\n\n// Static method to create quick transaction form\nTransactionForm.createQuickForm = function(container, options = {}) {\n    const quickOptions = {\n        ...options,\n        mode: 'add',\n        showQuickActions: true\n    };\n    return new TransactionForm(container, quickOptions);\n};","// Hebrew Category Manager Component\nexport class CategoryManager {\n    constructor(container, options = {}) {\n        this.container = container;\n        this.options = {\n            mode: 'manage', // 'manage', 'select', 'add'\n            allowAdd: true,\n            allowEdit: true,\n            allowDelete: true,\n            multiSelect: false,\n            selectedCategories: [],\n            onSelect: null,\n            onAdd: null,\n            onEdit: null,\n            onDelete: null,\n            ...options\n        };\n        this.categories = [];\n        this.filteredCategories = [];\n        this.searchTerm = '';\n        this.activeFilter = 'all'; // 'all', 'expense', 'income'\n        this.init();\n    }\n\n    async init() {\n        await this.loadCategories();\n        this.render();\n        this.bindEvents();\n    }\n\n    async loadCategories() {\n        try {\n            const { DataManager } = await import('../data/index.js');\n            this.categories = await DataManager.getCategories();\n            this.applyFilters();\n        } catch (error) {\n            console.error('Failed to load categories:', error);\n            this.categories = [];\n        }\n    }\n\n    render() {\n        const isSelectMode = this.options.mode === 'select';\n        const isAddMode = this.options.mode === 'add';\n\n        this.container.innerHTML = `\n            <div class=\"category-manager\">\n                ${!isAddMode ? this.renderHeader() : ''}\n                ${!isAddMode ? this.renderSearch() : ''}\n                ${!isAddMode ? this.renderFilters() : ''}\n                ${isAddMode ? this.renderAddForm() : this.renderCategoryList()}\n                ${this.options.allowAdd && !isAddMode ? this.renderAddButton() : ''}\n            </div>\n        `;\n    }\n\n    renderHeader() {\n        const isSelectMode = this.options.mode === 'select';\n        const title = isSelectMode ? 'בחר קטגוריה' : 'ניהול קטגוריות';\n        \n        return `\n            <div class=\"category-header\">\n                <h3 class=\"category-title\">${title}</h3>\n                <div class=\"category-stats\">\n                    <span class=\"stat-item\">\n                        <span class=\"stat-number\">${this.categories.filter(cat => cat.type === 'expense').length}</span>\n                        <span class=\"stat-label\">הוצאות</span>\n                    </span>\n                    <span class=\"stat-item\">\n                        <span class=\"stat-number\">${this.categories.filter(cat => cat.type === 'income').length}</span>\n                        <span class=\"stat-label\">הכנסות</span>\n                    </span>\n                </div>\n            </div>\n        `;\n    }\n\n    renderSearch() {\n        return `\n            <div class=\"category-search\">\n                <div class=\"search-input-container\">\n                    <input type=\"text\" id=\"categorySearch\" class=\"search-input\" \n                           placeholder=\"חפש קטגוריה...\" value=\"${this.searchTerm}\">\n                    <span class=\"search-icon\">🔍</span>\n                </div>\n            </div>\n        `;\n    }\n\n    renderFilters() {\n        return `\n            <div class=\"category-filters\">\n                <button class=\"filter-btn ${this.activeFilter === 'all' ? 'active' : ''}\" \n                        data-filter=\"all\">הכל</button>\n                <button class=\"filter-btn ${this.activeFilter === 'expense' ? 'active' : ''}\" \n                        data-filter=\"expense\">הוצאות</button>\n                <button class=\"filter-btn ${this.activeFilter === 'income' ? 'active' : ''}\" \n                        data-filter=\"income\">הכנסות</button>\n            </div>\n        `;\n    }\n\n    renderCategoryList() {\n        const isSelectMode = this.options.mode === 'select';\n        \n        if (this.filteredCategories.length === 0) {\n            return `\n                <div class=\"category-empty\">\n                    <div class=\"empty-icon\">📂</div>\n                    <h4>אין קטגוריות להצגה</h4>\n                    <p>לא נמצאו קטגוריות התואמות את החיפוש</p>\n                </div>\n            `;\n        }\n\n        return `\n            <div class=\"category-list\">\n                ${this.filteredCategories.map(category => this.renderCategoryItem(category, isSelectMode)).join('')}\n            </div>\n        `;\n    }\n\n    renderCategoryItem(category, isSelectMode) {\n        const isSelected = this.options.selectedCategories.includes(category.id);\n        const typeIcon = category.type === 'expense' ? '💸' : '💰';\n        const typeText = category.type === 'expense' ? 'הוצאה' : 'הכנסה';\n        \n        return `\n            <div class=\"category-item ${isSelected ? 'selected' : ''}\" data-category-id=\"${category.id}\">\n                <div class=\"category-content\">\n                    <div class=\"category-icon\">\n                        ${category.icon || typeIcon}\n                    </div>\n                    <div class=\"category-info\">\n                        <div class=\"category-name\">${category.name}</div>\n                        <div class=\"category-meta\">\n                            <span class=\"category-type\">${typeText}</span>\n                            ${category.transactionCount ? `<span class=\"transaction-count\">${category.transactionCount} עסקאות</span>` : ''}\n                        </div>\n                        ${category.description ? `<div class=\"category-description\">${category.description}</div>` : ''}\n                    </div>\n                </div>\n                <div class=\"category-actions\">\n                    ${isSelectMode ? `\n                        <button class=\"btn-select ${isSelected ? 'selected' : ''}\" data-action=\"select\">\n                            ${isSelected ? '✓ נבחר' : 'בחר'}\n                        </button>\n                    ` : `\n                        ${this.options.allowEdit ? `\n                            <button class=\"btn-icon btn-edit\" data-action=\"edit\" title=\"ערוך\">✏️</button>\n                        ` : ''}\n                        ${this.options.allowDelete ? `\n                            <button class=\"btn-icon btn-delete\" data-action=\"delete\" title=\"מחק\">🗑️</button>\n                        ` : ''}\n                    `}\n                </div>\n            </div>\n        `;\n    }\n\n    renderAddButton() {\n        return `\n            <div class=\"category-add-section\">\n                <button class=\"btn-primary add-category-btn\" data-action=\"add\">\n                    + הוסף קטגוריה חדשה\n                </button>\n            </div>\n        `;\n    }\n\n    renderAddForm() {\n        return `\n            <div class=\"category-form\">\n                <div class=\"form-header\">\n                    <h3>הוסף קטגוריה חדשה</h3>\n                </div>\n                \n                <form id=\"categoryForm\" class=\"category-form-content\">\n                    <div class=\"form-group\">\n                        <label for=\"categoryName\" class=\"form-label required\">שם הקטגוריה</label>\n                        <input type=\"text\" id=\"categoryName\" name=\"name\" class=\"form-input\" \n                               placeholder=\"למשל: מזון, תחבורה, משכורת...\" required>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"categoryType\" class=\"form-label required\">סוג</label>\n                        <div class=\"type-selection\">\n                            <label class=\"type-option\">\n                                <input type=\"radio\" name=\"type\" value=\"expense\" checked>\n                                <span class=\"type-label\">\n                                    <span class=\"type-icon\">💸</span>\n                                    <span class=\"type-text\">הוצאה</span>\n                                </span>\n                            </label>\n                            <label class=\"type-option\">\n                                <input type=\"radio\" name=\"type\" value=\"income\">\n                                <span class=\"type-label\">\n                                    <span class=\"type-icon\">💰</span>\n                                    <span class=\"type-text\">הכנסה</span>\n                                </span>\n                            </label>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"categoryIcon\" class=\"form-label\">אייקון</label>\n                        <div class=\"icon-selection\">\n                            <input type=\"text\" id=\"categoryIcon\" name=\"icon\" class=\"form-input icon-input\" \n                                   placeholder=\"בחר אייקון...\" readonly>\n                            <div class=\"icon-picker\">\n                                ${this.renderIconPicker()}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"categoryDescription\" class=\"form-label\">תיאור</label>\n                        <textarea id=\"categoryDescription\" name=\"description\" class=\"form-input form-textarea\" \n                                  placeholder=\"תיאור אופציונלי לקטגוריה...\" rows=\"3\"></textarea>\n                    </div>\n\n                    <div class=\"form-actions\">\n                        <button type=\"submit\" class=\"btn-primary\">שמור קטגוריה</button>\n                        <button type=\"button\" class=\"btn-secondary\" data-action=\"cancel\">ביטול</button>\n                    </div>\n                </form>\n            </div>\n        `;\n    }\n\n    renderIconPicker() {\n        const expenseIcons = ['💸', '🛒', '🏠', '🚗', '🍔', '👕', '⚡', '📱', '🏥', '🎓', '🎬', '🎮'];\n        const incomeIcons = ['💰', '💵', '🏦', '📈', '💼', '🎯', '🏆', '💎', '🎁', '📊', '💳', '🤝'];\n        \n        return `\n            <div class=\"icon-category\" data-type=\"expense\">\n                <h5>אייקוני הוצאות</h5>\n                <div class=\"icon-grid\">\n                    ${expenseIcons.map(icon => `\n                        <button type=\"button\" class=\"icon-option\" data-icon=\"${icon}\">\n                            ${icon}\n                        </button>\n                    `).join('')}\n                </div>\n            </div>\n            <div class=\"icon-category\" data-type=\"income\">\n                <h5>אייקוני הכנסות</h5>\n                <div class=\"icon-grid\">\n                    ${incomeIcons.map(icon => `\n                        <button type=\"button\" class=\"icon-option\" data-icon=\"${icon}\">\n                            ${icon}\n                        </button>\n                    `).join('')}\n                </div>\n            </div>\n        `;\n    }\n\n    bindEvents() {\n        // Search functionality\n        const searchInput = this.container.querySelector('#categorySearch');\n        if (searchInput) {\n            searchInput.addEventListener('input', (e) => {\n                this.searchTerm = e.target.value;\n                this.applyFilters();\n                this.updateCategoryList();\n            });\n        }\n\n        // Filter buttons\n        this.container.querySelectorAll('.filter-btn').forEach(btn => {\n            btn.addEventListener('click', (e) => {\n                this.activeFilter = e.target.dataset.filter;\n                this.applyFilters();\n                this.updateFilters();\n                this.updateCategoryList();\n            });\n        });\n\n        // Category actions\n        this.container.addEventListener('click', (e) => {\n            const action = e.target.dataset.action;\n            const categoryId = e.target.closest('.category-item')?.dataset.categoryId;\n            const category = this.categories.find(cat => cat.id === categoryId);\n\n            switch (action) {\n                case 'select':\n                    this.handleSelect(category);\n                    break;\n                case 'edit':\n                    this.handleEdit(category);\n                    break;\n                case 'delete':\n                    this.handleDelete(category);\n                    break;\n                case 'add':\n                    this.showAddForm();\n                    break;\n                case 'cancel':\n                    this.handleCancel();\n                    break;\n            }\n        });\n\n        // Form submission\n        const form = this.container.querySelector('#categoryForm');\n        if (form) {\n            form.addEventListener('submit', (e) => {\n                e.preventDefault();\n                this.handleFormSubmit();\n            });\n        }\n\n        // Icon picker\n        this.container.querySelectorAll('.icon-option').forEach(btn => {\n            btn.addEventListener('click', (e) => {\n                const icon = e.target.dataset.icon;\n                const iconInput = this.container.querySelector('#categoryIcon');\n                if (iconInput) {\n                    iconInput.value = icon;\n                }\n                \n                // Update visual selection\n                this.container.querySelectorAll('.icon-option').forEach(opt => opt.classList.remove('selected'));\n                e.target.classList.add('selected');\n            });\n        });\n\n        // Type change in form\n        this.container.querySelectorAll('input[name=\"type\"]').forEach(radio => {\n            radio.addEventListener('change', (e) => {\n                this.updateIconPicker(e.target.value);\n            });\n        });\n    }\n\n    updateIconPicker(type) {\n        this.container.querySelectorAll('.icon-category').forEach(category => {\n            const categoryType = category.dataset.type;\n            category.style.display = (type === 'expense' && categoryType === 'expense') || \n                                    (type === 'income' && categoryType === 'income') ? 'block' : 'none';\n        });\n    }\n\n    applyFilters() {\n        let filtered = this.categories;\n\n        // Apply search filter\n        if (this.searchTerm) {\n            const term = this.searchTerm.toLowerCase();\n            filtered = filtered.filter(category => \n                category.name.toLowerCase().includes(term) ||\n                (category.description && category.description.toLowerCase().includes(term))\n            );\n        }\n\n        // Apply type filter\n        if (this.activeFilter !== 'all') {\n            filtered = filtered.filter(category => category.type === this.activeFilter);\n        }\n\n        this.filteredCategories = filtered;\n    }\n\n    updateCategoryList() {\n        const categoryList = this.container.querySelector('.category-list');\n        if (categoryList) {\n            const isSelectMode = this.options.mode === 'select';\n            if (this.filteredCategories.length === 0) {\n                categoryList.innerHTML = `\n                    <div class=\"category-empty\">\n                        <div class=\"empty-icon\">📂</div>\n                        <h4>אין קטגוריות להצגה</h4>\n                        <p>לא נמצאו קטגוריות התואמות את החיפוש</p>\n                    </div>\n                `;\n            } else {\n                categoryList.innerHTML = this.filteredCategories.map(category => \n                    this.renderCategoryItem(category, isSelectMode)\n                ).join('');\n            }\n        }\n    }\n\n    updateFilters() {\n        this.container.querySelectorAll('.filter-btn').forEach(btn => {\n            btn.classList.toggle('active', btn.dataset.filter === this.activeFilter);\n        });\n    }\n\n    handleSelect(category) {\n        if (this.options.multiSelect) {\n            const index = this.options.selectedCategories.indexOf(category.id);\n            if (index > -1) {\n                this.options.selectedCategories.splice(index, 1);\n            } else {\n                this.options.selectedCategories.push(category.id);\n            }\n        } else {\n            this.options.selectedCategories = [category.id];\n        }\n\n        this.updateCategoryList();\n\n        if (this.options.onSelect) {\n            this.options.onSelect(category, this.options.selectedCategories);\n        }\n    }\n\n    handleEdit(category) {\n        if (this.options.onEdit) {\n            this.options.onEdit(category);\n        } else {\n            // Default edit implementation\n            this.showEditForm(category);\n        }\n    }\n\n    async handleDelete(category) {\n        if (!confirm(`האם אתה בטוח שברצונך למחוק את הקטגוריה \"${category.name}\"?`)) {\n            return;\n        }\n\n        try {\n            const { DataManager } = await import('../data/index.js');\n            await DataManager.deleteCategory(category.id);\n            \n            await this.loadCategories();\n            this.updateCategoryList();\n            \n            if (this.options.onDelete) {\n                this.options.onDelete(category);\n            }\n            \n            this.showSuccessMessage('הקטגוריה נמחקה בהצלחה');\n        } catch (error) {\n            console.error('Failed to delete category:', error);\n            this.showErrorMessage('שגיאה במחיקת הקטגוריה');\n        }\n    }\n\n    showAddForm() {\n        this.options.mode = 'add';\n        this.render();\n        this.bindEvents();\n    }\n\n    showEditForm(category) {\n        this.options.mode = 'edit';\n        this.editingCategory = category;\n        this.render();\n        this.populateEditForm(category);\n        this.bindEvents();\n    }\n\n    populateEditForm(category) {\n        const form = this.container.querySelector('#categoryForm');\n        if (form) {\n            form.querySelector('[name=\"name\"]').value = category.name;\n            form.querySelector(`[name=\"type\"][value=\"${category.type}\"]`).checked = true;\n            form.querySelector('[name=\"icon\"]').value = category.icon || '';\n            form.querySelector('[name=\"description\"]').value = category.description || '';\n            \n            this.updateIconPicker(category.type);\n            \n            // Update header\n            const header = this.container.querySelector('.form-header h3');\n            if (header) {\n                header.textContent = 'ערוך קטגוריה';\n            }\n        }\n    }\n\n    async handleFormSubmit() {\n        const form = this.container.querySelector('#categoryForm');\n        const formData = new FormData(form);\n        \n        const categoryData = {\n            name: formData.get('name'),\n            type: formData.get('type'),\n            icon: formData.get('icon'),\n            description: formData.get('description'),\n            createdAt: this.editingCategory?.createdAt || new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n        };\n\n        try {\n            const { DataManager } = await import('../data/index.js');\n            \n            if (this.editingCategory) {\n                categoryData.id = this.editingCategory.id;\n                await DataManager.updateCategory(categoryData.id, categoryData);\n                this.showSuccessMessage('הקטגוריה עודכנה בהצלחה');\n            } else {\n                categoryData.id = this.generateId();\n                await DataManager.addCategory(categoryData);\n                this.showSuccessMessage('הקטגוריה נוספה בהצלחה');\n            }\n\n            if (this.options.onAdd) {\n                this.options.onAdd(categoryData);\n            }\n\n            await this.loadCategories();\n            this.handleCancel();\n        } catch (error) {\n            console.error('Failed to save category:', error);\n            this.showErrorMessage('שגיאה בשמירת הקטגוריה');\n        }\n    }\n\n    handleCancel() {\n        this.options.mode = 'manage';\n        this.editingCategory = null;\n        this.render();\n        this.bindEvents();\n    }\n\n    generateId() {\n        return 'cat_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n    }\n\n    showSuccessMessage(message) {\n        if (window.showToast) {\n            window.showToast(message, 'success');\n        }\n    }\n\n    showErrorMessage(message) {\n        if (window.showToast) {\n            window.showToast(message, 'error');\n        }\n    }\n\n    // Public methods\n    getSelectedCategories() {\n        return this.options.selectedCategories.map(id => \n            this.categories.find(cat => cat.id === id)\n        ).filter(Boolean);\n    }\n\n    setSelectedCategories(categoryIds) {\n        this.options.selectedCategories = categoryIds;\n        this.updateCategoryList();\n    }\n\n    refreshCategories() {\n        return this.loadCategories().then(() => {\n            this.updateCategoryList();\n        });\n    }\n}\n\n// Static methods for common use cases\nCategoryManager.createSelector = function(container, options = {}) {\n    return new CategoryManager(container, {\n        ...options,\n        mode: 'select',\n        allowEdit: false,\n        allowDelete: false\n    });\n};\n\nCategoryManager.createManager = function(container, options = {}) {\n    return new CategoryManager(container, {\n        ...options,\n        mode: 'manage'\n    });\n};","/**\n * Data Schema for Israeli Personal Finance Dashboard\n * Hebrew-native field names with English aliases for development\n */\n\nexport const DATA_SCHEMA = {\n  // Schema version for migration management\n  VERSION: '1.0.0',\n  \n  // LocalStorage keys\n  STORAGE_KEYS: {\n    TRANSACTIONS: 'pf_transactions',\n    CATEGORIES: 'pf_categories', \n    BUDGETS: 'pf_budgets',\n    ACCOUNTS: 'pf_accounts',\n    SETTINGS: 'pf_settings',\n    TEMPLATES: 'pf_templates',\n    SCHEMA_VERSION: 'pf_schema_version'\n  },\n\n  // Transaction data structure\n  TRANSACTION: {\n    id: 'string',           // מזהה עסקה\n    תאריך: 'date',          // date - Israeli format (DD/MM/YYYY)\n    סכום: 'number',         // amount in shekels (positive/negative)\n    תיאור: 'string',        // description\n    קטגוריה: 'string',      // category ID\n    חשבון: 'string',        // account ID\n    סוג: 'string',          // type: 'הכנסה' (income) | 'הוצאה' (expense) | 'העברה' (transfer)\n    תת_קטגוריה: 'string',   // subcategory (optional)\n    הערות: 'string',        // notes (optional)\n    תגיות: 'array',         // tags array\n    מיקום: 'string',        // location (optional)\n    קבלה: 'string',         // receipt photo/file (optional)\n    חוזר: 'object',         // recurring transaction config (optional)\n    נוצר: 'datetime',       // created timestamp\n    עודכן: 'datetime',      // updated timestamp\n    מקור: 'string'          // source: 'manual' | 'import' | 'recurring'\n  },\n\n  // Category data structure\n  CATEGORY: {\n    id: 'string',           // מזהה קטגוריה\n    שם: 'string',           // name in Hebrew\n    צבע: 'string',          // color hex code\n    אייקון: 'string',       // icon name/unicode\n    סוג: 'string',          // type: 'הכנסה' | 'הוצאה'\n    הורה: 'string',         // parent category ID (for subcategories)\n    תקציב_חודשי: 'number',  // monthly budget (optional)\n    אקטיבי: 'boolean',      // active status\n    נוצר: 'datetime'        // created timestamp\n  },\n\n  // Budget data structure  \n  BUDGET: {\n    id: 'string',           // מזהה תקציב\n    שם: 'string',           // name\n    תקופה: 'object',        // period: { start: date, end: date }\n    קטגוריות: 'array',      // array of category budgets\n    סכום_כולל: 'number',   // total budget amount\n    הוצאו: 'number',        // spent amount\n    יעד: 'string',          // goal description\n    התראות: 'object',       // alerts config\n    אקטיבי: 'boolean',      // active status\n    נוצר: 'datetime'        // created timestamp\n  },\n\n  // Account data structure\n  ACCOUNT: {\n    id: 'string',           // מזהה חשבון\n    שם: 'string',           // account name\n    סוג: 'string',          // type: 'בנק' | 'מזומן' | 'אשראי' | 'חיסכון'\n    בנק: 'string',          // bank name (Bank Hapoalim, Bank Leumi, etc.)\n    מספר_חשבון: 'string',   // account number (encrypted)\n    יתרה: 'number',         // current balance\n    מטבע: 'string',         // currency (default: 'ILS')\n    צבע: 'string',          // color for display\n    אקטיבי: 'boolean',      // active status\n    נוצר: 'datetime'        // created timestamp\n  },\n\n  // Application settings\n  SETTINGS: {\n    שפה: 'string',          // language: 'he' | 'en'\n    ערכת_נושא: 'string',    // theme: 'light' | 'dark' | 'auto'\n    מטבע_ראשי: 'string',    // primary currency: 'ILS'\n    פורמט_תאריך: 'string',  // date format: 'DD/MM/YYYY'\n    התראות: 'object',       // notification preferences\n    גיבוי_אוטומטי: 'boolean', // auto backup enabled\n    הצפנה: 'boolean',       // encryption enabled\n    נוצר: 'datetime',       // created timestamp\n    עודכן: 'datetime'       // updated timestamp\n  },\n\n  // Transaction template data structure\n  TEMPLATE: {\n    id: 'string',           // מזהה תבנית\n    name: 'string',         // שם התבנית\n    description: 'string',  // תיאור התבנית\n    type: 'string',         // type: 'הכנסה' | 'הוצאה'\n    amount: 'number',       // סכום ברירת מחדל\n    category: 'string',     // category ID\n    frequency: 'string',    // תדירות: 'weekly' | 'monthly' | etc.\n    tags: 'array',          // תגיות\n    icon: 'string',         // אייקון\n    color: 'string',        // צבע\n    isDefault: 'boolean',   // תבנית ברירת מחדל\n    createdAt: 'datetime',  // created timestamp\n    updatedAt: 'datetime'   // updated timestamp\n  }\n};\n\n// Default categories for Israeli users\nexport const DEFAULT_CATEGORIES = {\n  // Income categories (הכנסות)\n  INCOME: [\n    { id: 'salary', שם: 'משכורת', צבע: '#10B981', אייקון: '💼', סוג: 'הכנסה' },\n    { id: 'freelance', שם: 'עבודה עצמאית', צבע: '#8B5CF6', אייקון: '💻', סוג: 'הכנסה' },\n    { id: 'investment', שם: 'השקעות', צבע: '#F59E0B', אייקון: '📈', סוג: 'הכנסה' },\n    { id: 'gift', שם: 'מתנות', צבע: '#EF4444', אייקון: '🎁', סוג: 'הכנסה' },\n    { id: 'other_income', שם: 'הכנסות אחרות', צבע: '#6B7280', אייקון: '💰', סוג: 'הכנסה' }\n  ],\n  \n  // Expense categories (הוצאות)\n  EXPENSES: [\n    // Essential Israeli expenses\n    { id: 'arnona', שם: 'ארנונה', צבע: '#DC2626', אייקון: '🏠', סוג: 'הוצאה' },\n    { id: 'bituach_leumi', שם: 'ביטוח לאומי', צבע: '#7C2D12', אייקון: '🛡️', סוג: 'הוצאה' },\n    { id: 'health_insurance', שם: 'ביטוח בריאות', צבע: '#DC2626', אייקון: '⚕️', סוג: 'הוצאה' },\n    { id: 'rent', שם: 'שכר דירה', צבע: '#991B1B', אייקון: '🏠', סוג: 'הוצאה' },\n    \n    // Utilities\n    { id: 'electricity', שם: 'חשמל', צבע: '#F59E0B', אייקון: '⚡', סוג: 'הוצאה' },\n    { id: 'water', שם: 'מים', צבע: '#3B82F6', אייקון: '💧', סוג: 'הוצאה' },\n    { id: 'gas', שם: 'גז', צבע: '#EF4444', אייקון: '🔥', סוג: 'הוצאה' },\n    { id: 'internet', שם: 'אינטרנט', צבע: '#8B5CF6', אייקון: '📡', סוג: 'הוצאה' },\n    { id: 'phone', שם: 'טלפון', צבע: '#06B6D4', אייקון: '📱', סוג: 'הוצאה' },\n    \n    // Daily expenses\n    { id: 'groceries', שם: 'קניות מזון', צבע: '#10B981', אייקון: '🛒', סוג: 'הוצאה' },\n    { id: 'restaurants', שם: 'מסעדות', צבע: '#F97316', אייקון: '🍽️', סוג: 'הוצאה' },\n    { id: 'transportation', שם: 'תחבורה', צבע: '#3B82F6', אייקון: '🚗', סוג: 'הוצאה' },\n    { id: 'fuel', שם: 'דלק', צבע: '#DC2626', אייקון: '⛽', סוג: 'הוצאה' },\n    \n    // Personal & family\n    { id: 'clothing', שם: 'ביגוד', צבע: '#EC4899', אייקון: '👔', סוג: 'הוצאה' },\n    { id: 'education', שם: 'חינוך', צבע: '#8B5CF6', אייקון: '📚', סוג: 'הוצאה' },\n    { id: 'healthcare', שם: 'בריאות', צבע: '#EF4444', אייקון: '🏥', סוג: 'הוצאה' },\n    { id: 'childcare', שם: 'גן ילדים', צבע: '#F59E0B', אייקון: '🧸', סוג: 'הוצאה' },\n    \n    // Entertainment & lifestyle\n    { id: 'entertainment', שם: 'בילויים', צבע: '#8B5CF6', אייקון: '🎭', סוג: 'הוצאה' },\n    { id: 'sports', שם: 'ספורט', צבע: '#10B981', אייקון: '⚽', סוג: 'הוצאה' },\n    { id: 'hobbies', שם: 'תחביבים', צבע: '#F97316', אייקון: '🎨', סוג: 'הוצאה' },\n    \n    // Other\n    { id: 'other_expense', שם: 'הוצאות אחרות', צבע: '#6B7280', אייקון: '📋', סוג: 'הוצאה' }\n  ]\n};\n\n// Default Israeli banks\nexport const ISRAELI_BANKS = [\n  'בנק הפועלים',\n  'בנק לאומי',\n  'בנק מזרחי טפחות',\n  'בנק דיסקונט',\n  'בנק יהב',\n  'הבנק הבינלאומי',\n  'בנק אוצר החייל',\n  'בנק ירושלים',\n  'בנק פועלי אגודת ישראל',\n  'מזומן'\n];","/**\n * Data Models for Israeli Personal Finance Dashboard\n * Hebrew-native models with validation and Israeli-specific features\n */\n\nimport { DATA_SCHEMA, DEFAULT_CATEGORIES, ISRAELI_BANKS } from './schema.js';\n\n// Utility functions for Israeli-specific formatting\nexport const formatters = {\n  // Israeli shekel formatting\n  currency: (amount) => {\n    return new Intl.NumberFormat('he-IL', {\n      style: 'currency',\n      currency: 'ILS',\n      minimumFractionDigits: 2\n    }).format(amount);\n  },\n\n  // Israeli date formatting (DD/MM/YYYY)\n  date: (date) => {\n    return new Date(date).toLocaleDateString('he-IL', {\n      day: '2-digit',\n      month: '2-digit', \n      year: 'numeric'\n    });\n  },\n\n  // Hebrew number formatting\n  number: (num) => {\n    return new Intl.NumberFormat('he-IL').format(num);\n  }\n};\n\n// Transaction Model\nexport class Transaction {\n  constructor(data = {}) {\n    this.id = data.id || this.generateId();\n    this.תאריך = data.תאריך || new Date().toISOString().split('T')[0];\n    this.סכום = parseFloat(data.סכום) || 0;\n    this.תיאור = data.תיאור || '';\n    this.קטגוריה = data.קטגוריה || '';\n    this.חשבון = data.חשבון || '';\n    this.סוג = data.סוג || 'הוצאה'; // 'הכנסה' | 'הוצאה' | 'העברה'\n    this.תת_קטגוריה = data.תת_קטגוריה || '';\n    this.הערות = data.הערות || '';\n    this.תגיות = data.תגיות || [];\n    this.מיקום = data.מיקום || '';\n    this.קבלה = data.קבלה || '';\n    this.חוזר = data.חוזר || null;\n    this.סטטוס = data.סטטוס || 'ממתין'; // 'ממתין' | 'מאושר' | 'נדחה' | 'בביקורת'\n    this.מאשר = data.מאשר || ''; // מי אישר/דחה את העסקה\n    this.תאריך_אישור = data.תאריך_אישור || null;\n    this.הערות_אישור = data.הערות_אישור || '';\n    this.נוצר = data.נוצר || new Date().toISOString();\n    this.עודכן = data.עודכן || new Date().toISOString();\n    this.מקור = data.מקור || 'manual';\n  }\n\n  generateId() {\n    return 'txn_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n  }\n\n  // Validation\n  validate() {\n    const errors = [];\n    \n    if (!this.תיאור.trim()) {\n      errors.push('תיאור העסקה נדרש');\n    }\n    \n    if (this.סכום === 0) {\n      errors.push('סכום העסקה חייב להיות שונה מאפס');\n    }\n    \n    if (!this.קטגוריה) {\n      errors.push('יש לבחור קטגוריה');\n    }\n    \n    if (!this.חשבון) {\n      errors.push('יש לבחור חשבון');\n    }\n    \n    if (!['הכנסה', 'הוצאה', 'העברה'].includes(this.סוג)) {\n      errors.push('סוג עסקה לא תקין');\n    }\n\n    return errors;\n  }\n\n  // Convert to display format\n  toDisplay() {\n    return {\n      ...this,\n      סכום_מעוצב: formatters.currency(Math.abs(this.סכום)),\n      תאריך_מעוצב: formatters.date(this.תאריך),\n      סכום_צבע: this.סכום >= 0 ? 'text-green-600' : 'text-red-600',\n      סכום_עם_סימן: (this.סכום >= 0 ? '+' : '') + formatters.currency(this.סכום)\n    };\n  }\n\n  // Update timestamp\n  touch() {\n    this.עודכן = new Date().toISOString();\n  }\n}\n\n// Category Model\nexport class Category {\n  constructor(data = {}) {\n    this.id = data.id || this.generateId();\n    this.שם = data.שם || '';\n    this.צבע = data.צבע || '#6B7280';\n    this.אייקון = data.אייקון || '📋';\n    this.סוג = data.סוג || 'הוצאה'; // 'הכנסה' | 'הוצאה'\n    this.הורה = data.הורה || null; // for subcategories\n    this.תקציב_חודשי = parseFloat(data.תקציב_חודשי) || 0;\n    this.אקטיבי = data.אקטיבי !== undefined ? data.אקטיבי : true;\n    this.נוצר = data.נוצר || new Date().toISOString();\n  }\n\n  generateId() {\n    return 'cat_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n  }\n\n  validate() {\n    const errors = [];\n    \n    if (!this.שם.trim()) {\n      errors.push('שם הקטגוריה נדרש');\n    }\n    \n    if (!['הכנסה', 'הוצאה'].includes(this.סוג)) {\n      errors.push('סוג קטגוריה לא תקין');\n    }\n    \n    if (this.תקציב_חודשי < 0) {\n      errors.push('תקציב חודשי לא יכול להיות שלילי');\n    }\n\n    return errors;\n  }\n\n  toDisplay() {\n    return {\n      ...this,\n      תקציב_מעוצב: this.תקציב_חודשי > 0 ? formatters.currency(this.תקציב_חודשי) : 'ללא תקציב'\n    };\n  }\n}\n\n// Budget Model\nexport class Budget {\n  constructor(data = {}) {\n    this.id = data.id || this.generateId();\n    this.שם = data.שם || '';\n    this.תקופה = data.תקופה || {\n      start: new Date().toISOString().split('T')[0],\n      end: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]\n    };\n    this.קטגוריות = data.קטגוריות || [];\n    this.סכום_כולל = parseFloat(data.סכום_כולל) || 0;\n    this.הוצאו = parseFloat(data.הוצאו) || 0;\n    this.יעד = data.יעד || '';\n    this.התראות = data.התראות || {\n      threshold_50: true,  // 50% alert\n      threshold_80: true,  // 80% alert\n      threshold_100: true  // over budget alert\n    };\n    this.אקטיבי = data.אקטיבי !== undefined ? data.אקטיבי : true;\n    this.נוצר = data.נוצר || new Date().toISOString();\n  }\n\n  generateId() {\n    return 'bdg_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n  }\n\n  validate() {\n    const errors = [];\n    \n    if (!this.שם.trim()) {\n      errors.push('שם התקציב נדרש');\n    }\n    \n    if (this.סכום_כולל <= 0) {\n      errors.push('סכום התקציב חייב להיות חיובי');\n    }\n    \n    if (new Date(this.תקופה.start) >= new Date(this.תקופה.end)) {\n      errors.push('תאריך התחלה חייב להיות לפני תאריך הסיום');\n    }\n\n    return errors;\n  }\n\n  // Calculate budget progress\n  getProgress() {\n    const percentage = this.סכום_כולל > 0 ? (this.הוצאו / this.סכום_כולל) * 100 : 0;\n    const remaining = this.סכום_כולל - this.הוצאו;\n    \n    return {\n      percentage: Math.round(percentage),\n      remaining: remaining,\n      status: percentage > 100 ? 'over' : percentage > 80 ? 'warning' : 'ok',\n      color: percentage > 100 ? 'red' : percentage > 80 ? 'yellow' : 'green'\n    };\n  }\n\n  toDisplay() {\n    const progress = this.getProgress();\n    return {\n      ...this,\n      סכום_כולל_מעוצב: formatters.currency(this.סכום_כולל),\n      הוצאו_מעוצב: formatters.currency(this.הוצאו),\n      נותר_מעוצב: formatters.currency(progress.remaining),\n      אחוז_ניצול: progress.percentage,\n      סטטוס: progress.status,\n      תקופה_מעוצבת: `${formatters.date(this.תקופה.start)} - ${formatters.date(this.תקופה.end)}`\n    };\n  }\n}\n\n// Account Model  \nexport class Account {\n  constructor(data = {}) {\n    this.id = data.id || this.generateId();\n    this.שם = data.שם || '';\n    this.סוג = data.סוג || 'בנק'; // 'בנק' | 'מזומן' | 'אשראי' | 'חיסכון'\n    this.בנק = data.בנק || '';\n    this.מספר_חשבון = data.מספר_חשבון || '';\n    this.יתרה = parseFloat(data.יתרה) || 0;\n    this.מטבע = data.מטבע || 'ILS';\n    this.צבע = data.צבע || '#3B82F6';\n    this.אקטיבי = data.אקטיבי !== undefined ? data.אקטיבי : true;\n    this.נוצר = data.נוצר || new Date().toISOString();\n  }\n\n  generateId() {\n    return 'acc_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n  }\n\n  validate() {\n    const errors = [];\n    \n    if (!this.שם.trim()) {\n      errors.push('שם החשבון נדרש');\n    }\n    \n    if (!['בנק', 'מזומן', 'אשראי', 'חיסכון'].includes(this.סוג)) {\n      errors.push('סוג חשבון לא תקין');\n    }\n    \n    if (this.סוג === 'בנק' && !this.בנק) {\n      errors.push('יש לבחור בנק');\n    }\n    \n    if (this.מספר_חשבון && this.מספר_חשבון.length < 4) {\n      errors.push('מספר חשבון קצר מדי');\n    }\n\n    return errors;\n  }\n\n  // Mask account number for display\n  getMaskedAccountNumber() {\n    if (!this.מספר_חשבון) return '';\n    const num = this.מספר_חשבון.toString();\n    return num.length > 4 ? '*'.repeat(num.length - 4) + num.slice(-4) : num;\n  }\n\n  toDisplay() {\n    return {\n      ...this,\n      יתרה_מעוצבת: formatters.currency(this.יתרה),\n      מספר_חשבון_מוסתר: this.getMaskedAccountNumber(),\n      יתרה_צבע: this.יתרה >= 0 ? 'text-green-600' : 'text-red-600'\n    };\n  }\n}\n\n// Settings Model\nexport class Settings {\n  constructor(data = {}) {\n    this.שפה = data.שפה || 'he';\n    this.ערכת_נושא = data.ערכת_נושא || 'light';\n    this.מטבע_ראשי = data.מטבע_ראשי || 'ILS';\n    this.פורמט_תאריך = data.פורמט_תאריך || 'DD/MM/YYYY';\n    this.התראות = data.התראות || {\n      budget_alerts: true,\n      low_balance: true,\n      recurring_transactions: true\n    };\n    this.גיבוי_אוטומטי = data.גיבוי_אוטומטי !== undefined ? data.גיבוי_אוטומטי : false;\n    this.הצפנה = data.הצפנה !== undefined ? data.הצפנה : true;\n    this.נוצר = data.נוצר || new Date().toISOString();\n    this.עודכן = data.עודכן || new Date().toISOString();\n  }\n\n  validate() {\n    const errors = [];\n    \n    if (!['he', 'en'].includes(this.שפה)) {\n      errors.push('שפה לא נתמכת');\n    }\n    \n    if (!['light', 'dark', 'auto'].includes(this.ערכת_נושא)) {\n      errors.push('ערכת נושא לא תקינה');\n    }\n\n    return errors;\n  }\n\n  touch() {\n    this.עודכן = new Date().toISOString();\n  }\n}\n\n// Model factory for creating instances from localStorage data\nexport class ModelFactory {\n  static createTransaction(data) {\n    return new Transaction(data);\n  }\n\n  static createCategory(data) {\n    return new Category(data);\n  }\n\n  static createBudget(data) {\n    return new Budget(data);\n  }\n\n  static createAccount(data) {\n    return new Account(data);\n  }\n\n  static createSettings(data) {\n    return new Settings(data);\n  }\n\n  // Create default categories for new users\n  static createDefaultCategories() {\n    const categories = [];\n    \n    // Add income categories\n    DEFAULT_CATEGORIES.INCOME.forEach(cat => {\n      categories.push(new Category(cat));\n    });\n    \n    // Add expense categories\n    DEFAULT_CATEGORIES.EXPENSES.forEach(cat => {\n      categories.push(new Category(cat));\n    });\n    \n    return categories;\n  }\n\n  // Create default cash account\n  static createDefaultAccount() {\n    return new Account({\n      שם: 'מזומן',\n      סוג: 'מזומן',\n      בנק: 'מזומן',\n      יתרה: 0,\n      צבע: '#10B981'\n    });\n  }\n}\n\nexport default {\n  Transaction,\n  Category, \n  Budget,\n  Account,\n  Settings,\n  ModelFactory,\n  formatters\n};","/**\n * Data Storage Manager for Israeli Personal Finance Dashboard\n * CRUD operations with localStorage and Hebrew error messages\n */\n\nimport { DATA_SCHEMA } from './schema.js';\nimport { ModelFactory } from './models.js';\n\n// Hebrew error messages\nconst HEBREW_ERRORS = {\n  STORAGE_NOT_AVAILABLE: 'אחסון מקומי אינו זמין',\n  INVALID_DATA: 'נתונים לא תקינים',\n  ITEM_NOT_FOUND: 'פריט לא נמצא',\n  DUPLICATE_ID: 'מזהה כבר קיים',\n  VALIDATION_FAILED: 'אימות נתונים נכשל',\n  SAVE_FAILED: 'שמירה נכשלה',\n  DELETE_FAILED: 'מחיקה נכשלה',\n  LOAD_FAILED: 'טעינה נכשלה',\n  SCHEMA_MISMATCH: 'גרסת נתונים לא תואמת'\n};\n\nclass StorageManager {\n  constructor() {\n    this.isAvailable = this.checkStorageAvailability();\n    this.initializeSchema();\n  }\n\n  // Check if localStorage is available\n  checkStorageAvailability() {\n    try {\n      const test = '__storage_test__';\n      localStorage.setItem(test, test);\n      localStorage.removeItem(test);\n      return true;\n    } catch (e) {\n      console.error('localStorage not available:', e);\n      return false;\n    }\n  }\n\n  // Initialize schema version and default data\n  initializeSchema() {\n    if (!this.isAvailable) return;\n\n    const currentVersion = localStorage.getItem(DATA_SCHEMA.STORAGE_KEYS.SCHEMA_VERSION);\n    \n    if (!currentVersion) {\n      // First time setup\n      localStorage.setItem(DATA_SCHEMA.STORAGE_KEYS.SCHEMA_VERSION, DATA_SCHEMA.VERSION);\n      this.initializeDefaultData();\n    } else if (currentVersion !== DATA_SCHEMA.VERSION) {\n      // Schema migration needed\n      this.migrateSchema(currentVersion, DATA_SCHEMA.VERSION);\n    }\n  }\n\n  // Initialize default categories and settings\n  initializeDefaultData() {\n    try {\n      // Create default categories\n      const defaultCategories = ModelFactory.createDefaultCategories();\n      this.saveMultiple('categories', defaultCategories);\n\n      // Create default account\n      const defaultAccount = ModelFactory.createDefaultAccount();\n      this.save('accounts', defaultAccount);\n\n      // Create default settings\n      const defaultSettings = ModelFactory.createSettings();\n      this.save('settings', defaultSettings);\n\n      console.log('Default data initialized successfully');\n    } catch (error) {\n      console.error('Failed to initialize default data:', error);\n    }\n  }\n\n  // Generic save method\n  save(type, item) {\n    if (!this.isAvailable) {\n      throw new Error(HEBREW_ERRORS.STORAGE_NOT_AVAILABLE);\n    }\n\n    const storageKey = this.getStorageKey(type);\n    const existing = this.getAll(type);\n\n    // Validate item\n    if (item.validate && typeof item.validate === 'function') {\n      const errors = item.validate();\n      if (errors.length > 0) {\n        throw new Error(`${HEBREW_ERRORS.VALIDATION_FAILED}: ${errors.join(', ')}`);\n      }\n    }\n\n    try {\n      // Check for duplicates (except for settings)\n      if (type !== 'settings') {\n        const duplicate = existing.find(existingItem => existingItem.id === item.id);\n        if (duplicate) {\n          // Update existing item\n          const index = existing.findIndex(existingItem => existingItem.id === item.id);\n          existing[index] = item;\n        } else {\n          // Add new item\n          existing.push(item);\n        }\n      } else {\n        // Settings is singular\n        localStorage.setItem(storageKey, JSON.stringify(item));\n        return item;\n      }\n\n      localStorage.setItem(storageKey, JSON.stringify(existing));\n      return item;\n    } catch (error) {\n      throw new Error(`${HEBREW_ERRORS.SAVE_FAILED}: ${error.message}`);\n    }\n  }\n\n  // Save multiple items\n  saveMultiple(type, items) {\n    if (!Array.isArray(items)) {\n      throw new Error(HEBREW_ERRORS.INVALID_DATA);\n    }\n\n    const results = [];\n    for (const item of items) {\n      results.push(this.save(type, item));\n    }\n    return results;\n  }\n\n  // Get single item by ID\n  getById(type, id) {\n    if (type === 'settings') {\n      return this.getSettings();\n    }\n\n    const items = this.getAll(type);\n    const item = items.find(item => item.id === id);\n    \n    if (!item) {\n      throw new Error(HEBREW_ERRORS.ITEM_NOT_FOUND);\n    }\n\n    return this.createModelInstance(type, item);\n  }\n\n  // Get all items of a type\n  getAll(type) {\n    if (!this.isAvailable) {\n      return [];\n    }\n\n    const storageKey = this.getStorageKey(type);\n    \n    try {\n      const data = localStorage.getItem(storageKey);\n      if (!data) {\n        return [];\n      }\n\n      const parsed = JSON.parse(data);\n      \n      // Handle settings (singular)\n      if (type === 'settings') {\n        return this.createModelInstance(type, parsed);\n      }\n\n      // Handle arrays\n      if (!Array.isArray(parsed)) {\n        return [];\n      }\n\n      return parsed.map(item => this.createModelInstance(type, item));\n    } catch (error) {\n      console.error(`Failed to load ${type}:`, error);\n      return [];\n    }\n  }\n\n  // Get filtered items\n  getFiltered(type, filterFn) {\n    const items = this.getAll(type);\n    return items.filter(filterFn);\n  }\n\n  // Update item\n  update(type, id, updates) {\n    const item = this.getById(type, id);\n    Object.assign(item, updates);\n    \n    // Update timestamp if method exists\n    if (item.touch && typeof item.touch === 'function') {\n      item.touch();\n    }\n    \n    return this.save(type, item);\n  }\n\n  // Delete item\n  delete(type, id) {\n    if (!this.isAvailable) {\n      throw new Error(HEBREW_ERRORS.STORAGE_NOT_AVAILABLE);\n    }\n\n    if (type === 'settings') {\n      throw new Error('לא ניתן למחוק הגדרות');\n    }\n\n    const storageKey = this.getStorageKey(type);\n    const existing = this.getAll(type);\n    const index = existing.findIndex(item => item.id === id);\n\n    if (index === -1) {\n      throw new Error(HEBREW_ERRORS.ITEM_NOT_FOUND);\n    }\n\n    try {\n      existing.splice(index, 1);\n      localStorage.setItem(storageKey, JSON.stringify(existing));\n      return true;\n    } catch (error) {\n      throw new Error(`${HEBREW_ERRORS.DELETE_FAILED}: ${error.message}`);\n    }\n  }\n\n  // Delete multiple items\n  deleteMultiple(type, ids) {\n    const results = [];\n    for (const id of ids) {\n      try {\n        results.push({ id, success: this.delete(type, id) });\n      } catch (error) {\n        results.push({ id, success: false, error: error.message });\n      }\n    }\n    return results;\n  }\n\n  // Clear all data of a type\n  clear(type) {\n    if (!this.isAvailable) {\n      throw new Error(HEBREW_ERRORS.STORAGE_NOT_AVAILABLE);\n    }\n\n    const storageKey = this.getStorageKey(type);\n    \n    try {\n      if (type === 'settings') {\n        // Reset to default settings\n        const defaultSettings = ModelFactory.createSettings();\n        localStorage.setItem(storageKey, JSON.stringify(defaultSettings));\n      } else {\n        localStorage.setItem(storageKey, JSON.stringify([]));\n      }\n      return true;\n    } catch (error) {\n      throw new Error(`${HEBREW_ERRORS.DELETE_FAILED}: ${error.message}`);\n    }\n  }\n\n  // Clear all application data\n  clearAll() {\n    Object.values(DATA_SCHEMA.STORAGE_KEYS).forEach(key => {\n      try {\n        localStorage.removeItem(key);\n      } catch (error) {\n        console.error(`Failed to clear ${key}:`, error);\n      }\n    });\n    \n    // Reinitialize\n    this.initializeSchema();\n  }\n\n  // Get storage statistics\n  getStats() {\n    const stats = {\n      transactions: this.getAll('transactions').length,\n      categories: this.getAll('categories').length,\n      budgets: this.getAll('budgets').length,\n      accounts: this.getAll('accounts').length,\n      storageUsed: this.getStorageUsage(),\n      lastUpdate: new Date().toISOString()\n    };\n\n    return stats;\n  }\n\n  // Calculate storage usage\n  getStorageUsage() {\n    let totalSize = 0;\n    \n    Object.values(DATA_SCHEMA.STORAGE_KEYS).forEach(key => {\n      const item = localStorage.getItem(key);\n      if (item) {\n        totalSize += item.length;\n      }\n    });\n\n    return {\n      bytes: totalSize,\n      kb: Math.round(totalSize / 1024),\n      mb: Math.round(totalSize / (1024 * 1024) * 100) / 100\n    };\n  }\n\n  // Helper methods\n  getStorageKey(type) {\n    const keyMap = {\n      'transactions': DATA_SCHEMA.STORAGE_KEYS.TRANSACTIONS,\n      'categories': DATA_SCHEMA.STORAGE_KEYS.CATEGORIES,\n      'budgets': DATA_SCHEMA.STORAGE_KEYS.BUDGETS,\n      'accounts': DATA_SCHEMA.STORAGE_KEYS.ACCOUNTS,\n      'settings': DATA_SCHEMA.STORAGE_KEYS.SETTINGS,\n      'templates': DATA_SCHEMA.STORAGE_KEYS.TEMPLATES\n    };\n\n    return keyMap[type] || type;\n  }\n\n  createModelInstance(type, data) {\n    const factoryMap = {\n      'transactions': ModelFactory.createTransaction,\n      'categories': ModelFactory.createCategory,\n      'budgets': ModelFactory.createBudget,\n      'accounts': ModelFactory.createAccount,\n      'settings': ModelFactory.createSettings\n    };\n\n    const factory = factoryMap[type];\n    return factory ? factory(data) : data;\n  }\n\n  // Settings-specific methods\n  getSettings() {\n    const storageKey = DATA_SCHEMA.STORAGE_KEYS.SETTINGS;\n    const data = localStorage.getItem(storageKey);\n    \n    if (!data) {\n      const defaultSettings = ModelFactory.createSettings();\n      this.save('settings', defaultSettings);\n      return defaultSettings;\n    }\n\n    try {\n      return ModelFactory.createSettings(JSON.parse(data));\n    } catch (error) {\n      console.error('Failed to parse settings:', error);\n      return ModelFactory.createSettings();\n    }\n  }\n\n  updateSettings(updates) {\n    const settings = this.getSettings();\n    Object.assign(settings, updates);\n    settings.touch();\n    return this.save('settings', settings);\n  }\n\n  // Schema migration placeholder\n  migrateSchema(from, to) {\n    console.log(`Schema migration needed: ${from} -> ${to}`);\n    // TODO: Implement specific migration logic when schema changes\n    localStorage.setItem(DATA_SCHEMA.STORAGE_KEYS.SCHEMA_VERSION, to);\n  }\n}\n\n// Singleton instance\nconst storage = new StorageManager();\n\n// Public API\nexport const StorageAPI = {\n  // Transactions\n  transactions: {\n    getAll: () => storage.getAll('transactions'),\n    getById: (id) => storage.getById('transactions', id),\n    save: (transaction) => storage.save('transactions', transaction),\n    update: (id, updates) => storage.update('transactions', id, updates),\n    delete: (id) => storage.delete('transactions', id),\n    deleteMultiple: (ids) => storage.deleteMultiple('transactions', ids),\n    getByDateRange: (startDate, endDate) => {\n      return storage.getFiltered('transactions', (txn) => {\n        const txnDate = new Date(txn.תאריך);\n        return txnDate >= new Date(startDate) && txnDate <= new Date(endDate);\n      });\n    },\n    getByCategory: (categoryId) => {\n      return storage.getFiltered('transactions', (txn) => txn.קטגוריה === categoryId);\n    },\n    getByAccount: (accountId) => {\n      return storage.getFiltered('transactions', (txn) => txn.חשבון === accountId);\n    }\n  },\n\n  // Categories\n  categories: {\n    getAll: () => storage.getAll('categories'),\n    getById: (id) => storage.getById('categories', id),\n    save: (category) => storage.save('categories', category),\n    update: (id, updates) => storage.update('categories', id, updates),\n    delete: (id) => storage.delete('categories', id),\n    getByType: (type) => {\n      return storage.getFiltered('categories', (cat) => cat.סוג === type);\n    },\n    getActive: () => {\n      return storage.getFiltered('categories', (cat) => cat.אקטיבי);\n    }\n  },\n\n  // Budgets\n  budgets: {\n    getAll: () => storage.getAll('budgets'),\n    getById: (id) => storage.getById('budgets', id),\n    save: (budget) => storage.save('budgets', budget),\n    update: (id, updates) => storage.update('budgets', id, updates),\n    delete: (id) => storage.delete('budgets', id),\n    getActive: () => {\n      return storage.getFiltered('budgets', (budget) => budget.אקטיבי);\n    },\n    getCurrent: () => {\n      const now = new Date();\n      return storage.getFiltered('budgets', (budget) => {\n        const start = new Date(budget.תקופה.start);\n        const end = new Date(budget.תקופה.end);\n        return budget.אקטיבי && now >= start && now <= end;\n      });\n    }\n  },\n\n  // Accounts\n  accounts: {\n    getAll: () => storage.getAll('accounts'),\n    getById: (id) => storage.getById('accounts', id),\n    save: (account) => storage.save('accounts', account),\n    update: (id, updates) => storage.update('accounts', id, updates),\n    delete: (id) => storage.delete('accounts', id),\n    getActive: () => {\n      return storage.getFiltered('accounts', (account) => account.אקטיבי);\n    },\n    updateBalance: (id, amount) => {\n      const account = storage.getById('accounts', id);\n      account.יתרה += amount;\n      return storage.save('accounts', account);\n    }\n  },\n\n  // Settings\n  settings: {\n    get: () => storage.getSettings(),\n    update: (updates) => storage.updateSettings(updates)\n  },\n\n  // Templates\n  templates: {\n    getAll: () => storage.getAll('templates'),\n    getById: (id) => storage.getById('templates', id),\n    save: (template) => storage.save('templates', template),\n    update: (id, updates) => storage.update('templates', id, updates),\n    delete: (id) => storage.delete('templates', id),\n    getByType: (type) => {\n      return storage.getFiltered('templates', (template) => template.type === type);\n    },\n    getDefaults: () => {\n      return storage.getFiltered('templates', (template) => template.isDefault === true);\n    },\n    getCustom: () => {\n      return storage.getFiltered('templates', (template) => template.isDefault !== true);\n    }\n  },\n\n  // Utility\n  utils: {\n    getStats: () => storage.getStats(),\n    clearAll: () => storage.clearAll(),\n    clear: (type) => storage.clear(type),\n    isAvailable: () => storage.isAvailable\n  }\n};\n\nexport default StorageAPI;","/**\n * Data Validation System for Israeli Personal Finance Dashboard\n * Hebrew error messages and Israeli-specific validation rules\n */\n\n// Hebrew validation error messages\nexport const VALIDATION_MESSAGES = {\n  // Required fields\n  REQUIRED: 'שדה זה הוא חובה',\n  REQUIRED_FIELD: (field) => `${field} הוא שדה חובה`,\n  \n  // Text validation\n  MIN_LENGTH: (min) => `נדרש לפחות ${min} תווים`,\n  MAX_LENGTH: (max) => `מקסימום ${max} תווים`,\n  INVALID_TEXT: 'טקסט לא תקין',\n  \n  // Number validation\n  INVALID_NUMBER: 'מספר לא תקין',\n  MIN_VALUE: (min) => `הערך המינימלי הוא ${min}`,\n  MAX_VALUE: (max) => `הערך המקסימלי הוא ${max}`,\n  POSITIVE_NUMBER: 'המספר חייב להיות חיובי',\n  NEGATIVE_NUMBER: 'המספר חייב להיות שלילי',\n  NON_ZERO: 'הערך לא יכול להיות אפס',\n  \n  // Date validation\n  INVALID_DATE: 'תאריך לא תקין',\n  FUTURE_DATE: 'התאריך לא יכול להיות בעתיד',\n  PAST_DATE: 'התאריך לא יכול להיות בעבר',\n  DATE_RANGE: 'תאריך ההתחלה חייב להיות לפני תאריך הסיום',\n  \n  // Email validation\n  INVALID_EMAIL: 'כתובת דוא\"ל לא תקינה',\n  \n  // Phone validation\n  INVALID_PHONE: 'מספר טלפון לא תקין',\n  ISRAELI_PHONE_FORMAT: 'פורמט: 05X-XXXXXXX או 0X-XXXXXXX',\n  \n  // Israeli ID validation\n  INVALID_ID: 'תעודת זהות לא תקינה',\n  ISRAELI_ID_FORMAT: 'תעודת זהות חייבת להכיל 9 ספרות',\n  \n  // Bank account validation\n  INVALID_BANK_ACCOUNT: 'מספר חשבון בנק לא תקין',\n  BANK_ACCOUNT_LENGTH: 'מספר חשבון בנק חייב להכיל 6-12 ספרות',\n  \n  // Currency validation\n  INVALID_AMOUNT: 'סכום לא תקין',\n  CURRENCY_FORMAT: 'פורמט: 1234.56 (ללא סימן מטבע)',\n  \n  // Category validation\n  INVALID_CATEGORY: 'קטגוריה לא תקינה',\n  CATEGORY_TYPE: 'סוג קטגוריה חייב להיות הכנסה או הוצאה',\n  \n  // Budget validation\n  BUDGET_PERIOD: 'תקופת התקציב לא תקינה',\n  BUDGET_AMOUNT: 'סכום התקציב חייב להיות חיובי',\n  \n  // Account validation\n  ACCOUNT_TYPE: 'סוג חשבון לא תקין',\n  DUPLICATE_ACCOUNT: 'חשבון עם פרטים דומים כבר קיים'\n};\n\n// Validation rules\nexport class Validators {\n  \n  // Basic text validation\n  static text(value, options = {}) {\n    const errors = [];\n    \n    if (options.required && (!value || value.trim() === '')) {\n      errors.push(options.fieldName ? \n        VALIDATION_MESSAGES.REQUIRED_FIELD(options.fieldName) : \n        VALIDATION_MESSAGES.REQUIRED\n      );\n      return errors;\n    }\n    \n    if (value && typeof value === 'string') {\n      if (options.minLength && value.length < options.minLength) {\n        errors.push(VALIDATION_MESSAGES.MIN_LENGTH(options.minLength));\n      }\n      \n      if (options.maxLength && value.length > options.maxLength) {\n        errors.push(VALIDATION_MESSAGES.MAX_LENGTH(options.maxLength));\n      }\n    }\n    \n    return errors;\n  }\n  \n  // Number validation\n  static number(value, options = {}) {\n    const errors = [];\n    \n    if (options.required && (value === null || value === undefined || value === '')) {\n      errors.push(options.fieldName ? \n        VALIDATION_MESSAGES.REQUIRED_FIELD(options.fieldName) : \n        VALIDATION_MESSAGES.REQUIRED\n      );\n      return errors;\n    }\n    \n    if (value !== null && value !== undefined && value !== '') {\n      const num = parseFloat(value);\n      \n      if (isNaN(num)) {\n        errors.push(VALIDATION_MESSAGES.INVALID_NUMBER);\n        return errors;\n      }\n      \n      if (options.min !== undefined && num < options.min) {\n        errors.push(VALIDATION_MESSAGES.MIN_VALUE(options.min));\n      }\n      \n      if (options.max !== undefined && num > options.max) {\n        errors.push(VALIDATION_MESSAGES.MAX_VALUE(options.max));\n      }\n      \n      if (options.positive && num <= 0) {\n        errors.push(VALIDATION_MESSAGES.POSITIVE_NUMBER);\n      }\n      \n      if (options.negative && num >= 0) {\n        errors.push(VALIDATION_MESSAGES.NEGATIVE_NUMBER);\n      }\n      \n      if (options.nonZero && num === 0) {\n        errors.push(VALIDATION_MESSAGES.NON_ZERO);\n      }\n    }\n    \n    return errors;\n  }\n  \n  // Date validation\n  static date(value, options = {}) {\n    const errors = [];\n    \n    if (options.required && !value) {\n      errors.push(options.fieldName ? \n        VALIDATION_MESSAGES.REQUIRED_FIELD(options.fieldName) : \n        VALIDATION_MESSAGES.REQUIRED\n      );\n      return errors;\n    }\n    \n    if (value) {\n      const date = new Date(value);\n      \n      if (isNaN(date.getTime())) {\n        errors.push(VALIDATION_MESSAGES.INVALID_DATE);\n        return errors;\n      }\n      \n      const now = new Date();\n      now.setHours(0, 0, 0, 0);\n      date.setHours(0, 0, 0, 0);\n      \n      if (options.notFuture && date > now) {\n        errors.push(VALIDATION_MESSAGES.FUTURE_DATE);\n      }\n      \n      if (options.notPast && date < now) {\n        errors.push(VALIDATION_MESSAGES.PAST_DATE);\n      }\n    }\n    \n    return errors;\n  }\n  \n  // Date range validation\n  static dateRange(startDate, endDate, options = {}) {\n    const errors = [];\n    \n    const startErrors = this.date(startDate, { required: true, fieldName: 'תאריך התחלה' });\n    const endErrors = this.date(endDate, { required: true, fieldName: 'תאריך סיום' });\n    \n    errors.push(...startErrors, ...endErrors);\n    \n    if (startDate && endDate && startErrors.length === 0 && endErrors.length === 0) {\n      const start = new Date(startDate);\n      const end = new Date(endDate);\n      \n      if (start >= end) {\n        errors.push(VALIDATION_MESSAGES.DATE_RANGE);\n      }\n    }\n    \n    return errors;\n  }\n  \n  // Email validation\n  static email(value, options = {}) {\n    const errors = [];\n    \n    if (options.required && !value) {\n      errors.push(VALIDATION_MESSAGES.REQUIRED);\n      return errors;\n    }\n    \n    if (value) {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(value)) {\n        errors.push(VALIDATION_MESSAGES.INVALID_EMAIL);\n      }\n    }\n    \n    return errors;\n  }\n  \n  // Israeli phone number validation\n  static israeliPhone(value, options = {}) {\n    const errors = [];\n    \n    if (options.required && !value) {\n      errors.push(VALIDATION_MESSAGES.REQUIRED);\n      return errors;\n    }\n    \n    if (value) {\n      // Remove all non-digits\n      const cleanPhone = value.replace(/\\D/g, '');\n      \n      // Israeli phone patterns\n      const mobileRegex = /^05[0-9]{8}$/; // Mobile: 05X-XXXXXXXX\n      const landlineRegex = /^0[2-4,6-9][0-9]{7}$/; // Landline: 0X-XXXXXXX\n      \n      if (!mobileRegex.test(cleanPhone) && !landlineRegex.test(cleanPhone)) {\n        errors.push(VALIDATION_MESSAGES.INVALID_PHONE);\n        errors.push(VALIDATION_MESSAGES.ISRAELI_PHONE_FORMAT);\n      }\n    }\n    \n    return errors;\n  }\n  \n  // Israeli ID number validation (with checksum)\n  static israeliId(value, options = {}) {\n    const errors = [];\n    \n    if (options.required && !value) {\n      errors.push(VALIDATION_MESSAGES.REQUIRED);\n      return errors;\n    }\n    \n    if (value) {\n      const cleanId = value.replace(/\\D/g, '');\n      \n      if (cleanId.length !== 9) {\n        errors.push(VALIDATION_MESSAGES.ISRAELI_ID_FORMAT);\n        return errors;\n      }\n      \n      // Israeli ID checksum validation\n      let sum = 0;\n      for (let i = 0; i < 9; i++) {\n        let digit = parseInt(cleanId[i]);\n        if (i % 2 === 1) {\n          digit *= 2;\n          if (digit > 9) {\n            digit = Math.floor(digit / 10) + (digit % 10);\n          }\n        }\n        sum += digit;\n      }\n      \n      if (sum % 10 !== 0) {\n        errors.push(VALIDATION_MESSAGES.INVALID_ID);\n      }\n    }\n    \n    return errors;\n  }\n  \n  // Bank account number validation\n  static bankAccount(value, options = {}) {\n    const errors = [];\n    \n    if (options.required && !value) {\n      errors.push(VALIDATION_MESSAGES.REQUIRED);\n      return errors;\n    }\n    \n    if (value) {\n      const cleanAccount = value.replace(/\\D/g, '');\n      \n      if (cleanAccount.length < 6 || cleanAccount.length > 12) {\n        errors.push(VALIDATION_MESSAGES.BANK_ACCOUNT_LENGTH);\n      }\n    }\n    \n    return errors;\n  }\n  \n  // Currency amount validation (Israeli shekel)\n  static currency(value, options = {}) {\n    const errors = [];\n    \n    const numberErrors = this.number(value, options);\n    errors.push(...numberErrors);\n    \n    if (value && numberErrors.length === 0) {\n      const amount = parseFloat(value);\n      // Check for reasonable currency precision (max 2 decimal places)\n      if ((amount * 100) % 1 !== 0) {\n        errors.push('מקסימום 2 מקומות עשרוניים');\n      }\n    }\n    \n    return errors;\n  }\n}\n\n// Transaction validation\nexport class TransactionValidator {\n  static validate(transaction) {\n    const errors = {};\n    \n    // Description validation\n    const descErrors = Validators.text(transaction.תיאור, {\n      required: true,\n      fieldName: 'תיאור',\n      minLength: 2,\n      maxLength: 200\n    });\n    if (descErrors.length > 0) errors.תיאור = descErrors;\n    \n    // Amount validation\n    const amountErrors = Validators.currency(transaction.סכום, {\n      required: true,\n      nonZero: true,\n      fieldName: 'סכום'\n    });\n    if (amountErrors.length > 0) errors.סכום = amountErrors;\n    \n    // Date validation\n    const dateErrors = Validators.date(transaction.תאריך, {\n      required: true,\n      fieldName: 'תאריך'\n    });\n    if (dateErrors.length > 0) errors.תאריך = dateErrors;\n    \n    // Category validation\n    if (!transaction.קטגוריה) {\n      errors.קטגוריה = ['יש לבחור קטגוריה'];\n    }\n    \n    // Account validation\n    if (!transaction.חשבון) {\n      errors.חשבון = ['יש לבחור חשבון'];\n    }\n    \n    // Type validation\n    if (!['הכנסה', 'הוצאה', 'העברה'].includes(transaction.סוג)) {\n      errors.סוג = ['סוג עסקה לא תקין'];\n    }\n    \n    return errors;\n  }\n}\n\n// Category validation\nexport class CategoryValidator {\n  static validate(category) {\n    const errors = {};\n    \n    // Name validation\n    const nameErrors = Validators.text(category.שם, {\n      required: true,\n      fieldName: 'שם קטגוריה',\n      minLength: 2,\n      maxLength: 50\n    });\n    if (nameErrors.length > 0) errors.שם = nameErrors;\n    \n    // Type validation\n    if (!['הכנסה', 'הוצאה'].includes(category.סוג)) {\n      errors.סוג = [VALIDATION_MESSAGES.CATEGORY_TYPE];\n    }\n    \n    // Budget validation (optional)\n    if (category.תקציב_חודשי !== undefined && category.תקציב_חודשי !== null) {\n      const budgetErrors = Validators.currency(category.תקציב_חודשי, {\n        positive: true,\n        fieldName: 'תקציב חודשי'\n      });\n      if (budgetErrors.length > 0) errors.תקציב_חודשי = budgetErrors;\n    }\n    \n    return errors;\n  }\n}\n\n// Budget validation\nexport class BudgetValidator {\n  static validate(budget) {\n    const errors = {};\n    \n    // Name validation\n    const nameErrors = Validators.text(budget.שם, {\n      required: true,\n      fieldName: 'שם תקציב',\n      minLength: 2,\n      maxLength: 100\n    });\n    if (nameErrors.length > 0) errors.שם = nameErrors;\n    \n    // Amount validation\n    const amountErrors = Validators.currency(budget.סכום_כולל, {\n      required: true,\n      positive: true,\n      fieldName: 'סכום תקציב'\n    });\n    if (amountErrors.length > 0) errors.סכום_כולל = amountErrors;\n    \n    // Date range validation\n    const periodErrors = Validators.dateRange(\n      budget.תקופה?.start,\n      budget.תקופה?.end\n    );\n    if (periodErrors.length > 0) errors.תקופה = periodErrors;\n    \n    return errors;\n  }\n}\n\n// Account validation\nexport class AccountValidator {\n  static validate(account) {\n    const errors = {};\n    \n    // Name validation\n    const nameErrors = Validators.text(account.שם, {\n      required: true,\n      fieldName: 'שם חשבון',\n      minLength: 2,\n      maxLength: 100\n    });\n    if (nameErrors.length > 0) errors.שם = nameErrors;\n    \n    // Type validation\n    if (!['בנק', 'מזומן', 'אשראי', 'חיסכון'].includes(account.סוג)) {\n      errors.סוג = [VALIDATION_MESSAGES.ACCOUNT_TYPE];\n    }\n    \n    // Bank validation (required for bank accounts)\n    if (account.סוג === 'בנק' && !account.בנק) {\n      errors.בנק = ['יש לבחור בנק'];\n    }\n    \n    // Account number validation (for bank accounts)\n    if (account.מספר_חשבון) {\n      const accountErrors = Validators.bankAccount(account.מספר_חשבון, {\n        required: account.סוג === 'בנק'\n      });\n      if (accountErrors.length > 0) errors.מספר_חשבון = accountErrors;\n    }\n    \n    // Balance validation\n    const balanceErrors = Validators.currency(account.יתרה, {\n      fieldName: 'יתרה'\n    });\n    if (balanceErrors.length > 0) errors.יתרה = balanceErrors;\n    \n    return errors;\n  }\n}\n\n// Master validator\nexport class DataValidator {\n  static validateTransaction(transaction) {\n    return TransactionValidator.validate(transaction);\n  }\n  \n  static validateCategory(category) {\n    return CategoryValidator.validate(category);\n  }\n  \n  static validateBudget(budget) {\n    return BudgetValidator.validate(budget);\n  }\n  \n  static validateAccount(account) {\n    return AccountValidator.validate(account);\n  }\n  \n  // Check if validation result has errors\n  static hasErrors(validationResult) {\n    return Object.keys(validationResult).length > 0;\n  }\n  \n  // Get all error messages as flat array\n  static getErrorMessages(validationResult) {\n    const messages = [];\n    Object.values(validationResult).forEach(fieldErrors => {\n      if (Array.isArray(fieldErrors)) {\n        messages.push(...fieldErrors);\n      }\n    });\n    return messages;\n  }\n  \n  // Format errors for display\n  static formatErrors(validationResult) {\n    const formatted = {};\n    Object.entries(validationResult).forEach(([field, fieldErrors]) => {\n      formatted[field] = Array.isArray(fieldErrors) ? fieldErrors.join(', ') : fieldErrors;\n    });\n    return formatted;\n  }\n}\n\nexport default {\n  Validators,\n  DataValidator,\n  TransactionValidator,\n  CategoryValidator,\n  BudgetValidator,\n  AccountValidator,\n  VALIDATION_MESSAGES\n};","/**\n * Data Export/Import System for Israeli Personal Finance Dashboard\n * Backup/restore functionality with Hebrew headers and Israeli bank formats\n */\n\nimport StorageAPI from './storage.js';\nimport { formatters } from './models.js';\n\n// Hebrew export headers\nexport const EXPORT_HEADERS = {\n  TRANSACTIONS: {\n    id: 'מזהה',\n    תאריך: 'תאריך',\n    תיאור: 'תיאור',\n    סכום: 'סכום',\n    קטגוריה: 'קטגוריה', \n    חשבון: 'חשבון',\n    סוג: 'סוג עסקה',\n    תת_קטגוריה: 'תת קטגוריה',\n    הערות: 'הערות',\n    תגיות: 'תגיות',\n    מיקום: 'מיקום',\n    נוצר: 'נוצר',\n    עודכן: 'עודכן'\n  },\n  \n  CATEGORIES: {\n    id: 'מזהה',\n    שם: 'שם קטגוריה',\n    צבע: 'צבע',\n    אייקון: 'אייקון',\n    סוג: 'סוג',\n    תקציב_חודשי: 'תקציב חודשי',\n    אקטיבי: 'פעיל',\n    נוצר: 'נוצר'\n  },\n  \n  BUDGETS: {\n    id: 'מזהה',\n    שם: 'שם תקציב',\n    'תקופה.start': 'תאריך התחלה',\n    'תקופה.end': 'תאריך סיום',\n    סכום_כולל: 'סכום כולל',\n    הוצאו: 'הוצאו',\n    יעד: 'יעד',\n    אקטיבי: 'פעיל',\n    נוצר: 'נוצר'\n  },\n  \n  ACCOUNTS: {\n    id: 'מזהה',\n    שם: 'שם חשבון',\n    סוג: 'סוג חשבון',\n    בנק: 'בנק',\n    יתרה: 'יתרה',\n    מטבע: 'מטבע',\n    אקטיבי: 'פעיל',\n    נוצר: 'נוצר'\n  }\n};\n\n// Export/Import class\nexport class DataExporter {\n  \n  // Export all data as JSON backup\n  static exportFullBackup() {\n    try {\n      const backup = {\n        timestamp: new Date().toISOString(),\n        version: '1.0.0',\n        data: {\n          transactions: StorageAPI.transactions.getAll(),\n          categories: StorageAPI.categories.getAll(),\n          budgets: StorageAPI.budgets.getAll(),\n          accounts: StorageAPI.accounts.getAll(),\n          settings: StorageAPI.settings.get()\n        },\n        stats: StorageAPI.utils.getStats()\n      };\n      \n      return {\n        success: true,\n        data: JSON.stringify(backup, null, 2),\n        filename: `finance-backup-${this.formatDateForFilename(new Date())}.json`,\n        mimeType: 'application/json'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `שגיאה ביצוא גיבוי: ${error.message}`\n      };\n    }\n  }\n  \n  // Export transactions as CSV\n  static exportTransactionsCSV(dateRange = null) {\n    try {\n      let transactions = StorageAPI.transactions.getAll();\n      \n      // Filter by date range if provided\n      if (dateRange && dateRange.start && dateRange.end) {\n        transactions = StorageAPI.transactions.getByDateRange(dateRange.start, dateRange.end);\n      }\n      \n      // Get categories and accounts for mapping\n      const categories = StorageAPI.categories.getAll();\n      const accounts = StorageAPI.accounts.getAll();\n      \n      const categoryMap = {};\n      categories.forEach(cat => categoryMap[cat.id] = cat.שם);\n      \n      const accountMap = {};\n      accounts.forEach(acc => accountMap[acc.id] = acc.שם);\n      \n      // Convert to CSV format\n      const csvData = transactions.map(txn => ({\n        'תאריך': formatters.date(txn.תאריך),\n        'תיאור': txn.תיאור,\n        'סכום': txn.סכום,\n        'קטגוריה': categoryMap[txn.קטגוריה] || txn.קטגוריה,\n        'חשבון': accountMap[txn.חשבון] || txn.חשבון,\n        'סוג עסקה': txn.סוג,\n        'הערות': txn.הערות || '',\n        'תגיות': Array.isArray(txn.תגיות) ? txn.תגיות.join(';') : '',\n        'מיקום': txn.מיקום || ''\n      }));\n      \n      const csv = this.convertToCSV(csvData);\n      \n      return {\n        success: true,\n        data: csv,\n        filename: `transactions-${this.formatDateForFilename(new Date())}.csv`,\n        mimeType: 'text/csv;charset=utf-8'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `שגיאה ביצוא עסקאות: ${error.message}`\n      };\n    }\n  }\n  \n  // Export categories as CSV\n  static exportCategoriesCSV() {\n    try {\n      const categories = StorageAPI.categories.getAll();\n      \n      const csvData = categories.map(cat => ({\n        'שם קטגוריה': cat.שם,\n        'סוג': cat.סוג,\n        'תקציב חודשי': cat.תקציב_חודשי || 0,\n        'צבע': cat.צבע,\n        'אייקון': cat.אייקון,\n        'פעיל': cat.אקטיבי ? 'כן' : 'לא'\n      }));\n      \n      const csv = this.convertToCSV(csvData);\n      \n      return {\n        success: true,\n        data: csv,\n        filename: `categories-${this.formatDateForFilename(new Date())}.csv`,\n        mimeType: 'text/csv;charset=utf-8'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `שגיאה ביצוא קטגוריות: ${error.message}`\n      };\n    }\n  }\n  \n  // Export for Israeli banks format (Bank Hapoalim, Leumi, etc.)\n  static exportForBanks(bankFormat = 'generic') {\n    try {\n      const transactions = StorageAPI.transactions.getAll();\n      const categories = StorageAPI.categories.getAll();\n      const accounts = StorageAPI.accounts.getAll();\n      \n      const categoryMap = {};\n      categories.forEach(cat => categoryMap[cat.id] = cat.שם);\n      \n      const accountMap = {};\n      accounts.forEach(acc => accountMap[acc.id] = acc.מספר_חשבון || acc.שם);\n      \n      let csvData;\n      \n      switch (bankFormat) {\n        case 'hapoalim':\n          // Bank Hapoalim format\n          csvData = transactions.map(txn => ({\n            'תאריך פעולה': this.formatDateISR(txn.תאריך),\n            'תאריך ערך': this.formatDateISR(txn.תאריך),\n            'פרטי הפעולה': txn.תיאור,\n            'אסמכתא': '',\n            'זכות': txn.סכום > 0 ? Math.abs(txn.סכום) : '',\n            'חובה': txn.סכום < 0 ? Math.abs(txn.סכום) : '',\n            'יתרה': ''\n          }));\n          break;\n          \n        case 'leumi':\n          // Bank Leumi format\n          csvData = transactions.map(txn => ({\n            'תאריך': this.formatDateISR(txn.תאריך),\n            'תיאור': txn.תיאור,\n            'קטגוריה': categoryMap[txn.קטגוריה] || '',\n            'סכום': txn.סכום,\n            'חשבון': accountMap[txn.חשבון] || ''\n          }));\n          break;\n          \n        case 'mizrahi':\n          // Mizrahi Tefahot format\n          csvData = transactions.map(txn => ({\n            'תאריך פעולה': this.formatDateISR(txn.תאריך),\n            'תיאור פעולה': txn.תיאור,\n            'סכום זכות': txn.סכום > 0 ? txn.סכום : '',\n            'סכום חובה': txn.סכום < 0 ? Math.abs(txn.סכום) : '',\n            'יתרה': '',\n            'הערות': txn.הערות || ''\n          }));\n          break;\n          \n        case 'discount':\n          // Bank Discount format\n          csvData = transactions.map(txn => ({\n            'תאריך': this.formatDateISR(txn.תאריך),\n            'פרטי פעולה': txn.תיאור,\n            'זכות/חובה': txn.סכום > 0 ? 'זכות' : 'חובה',\n            'סכום': Math.abs(txn.סכום),\n            'קטגוריה': categoryMap[txn.קטגוריה] || ''\n          }));\n          break;\n          \n        case 'fibi':\n          // First International Bank (FIBI) format\n          csvData = transactions.map(txn => ({\n            'תאריך ביצוע': this.formatDateISR(txn.תאריך),\n            'תיאור': txn.תיאור,\n            'סכום': txn.סכום,\n            'סוג תנועה': txn.סכום > 0 ? 'זכות' : 'חובה',\n            'קטגוריה': categoryMap[txn.קטגוריה] || ''\n          }));\n          break;\n          \n        default:\n          // Generic Israeli bank format\n          csvData = transactions.map(txn => ({\n            'תאריך': this.formatDateISR(txn.תאריך),\n            'תיאור הפעולה': txn.תיאור,\n            'סכום': txn.סכום,\n            'סוג פעולה': txn.סכום > 0 ? 'זכות' : 'חובה',\n            'קטגוריה': categoryMap[txn.קטגוריה] || '',\n            'הערות': txn.הערות || ''\n          }));\n      }\n      \n      const csv = this.convertToCSV(csvData);\n      \n      return {\n        success: true,\n        data: csv,\n        filename: `bank-export-${bankFormat}-${this.formatDateForFilename(new Date())}.csv`,\n        mimeType: 'text/csv;charset=utf-8'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `שגיאה ביצוא לבנק: ${error.message}`\n      };\n    }\n  }\n  \n  // Download file helper\n  static downloadFile(exportResult) {\n    if (!exportResult.success) {\n      throw new Error(exportResult.error);\n    }\n    \n    try {\n      const blob = new Blob([exportResult.data], { type: exportResult.mimeType });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      \n      link.href = url;\n      link.download = exportResult.filename;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n      \n      return true;\n    } catch (error) {\n      throw new Error(`שגיאה בהורדת קובץ: ${error.message}`);\n    }\n  }\n  \n  // Helper methods\n  static convertToCSV(data) {\n    if (!data || data.length === 0) {\n      return '';\n    }\n    \n    const headers = Object.keys(data[0]);\n    const csvRows = [];\n    \n    // Add headers\n    csvRows.push(headers.map(header => `\"${header}\"`).join(','));\n    \n    // Add data rows\n    data.forEach(row => {\n      const values = headers.map(header => {\n        const value = row[header];\n        return `\"${value !== null && value !== undefined ? value : ''}\"`;\n      });\n      csvRows.push(values.join(','));\n    });\n    \n    return csvRows.join('\\n');\n  }\n  \n  static formatDateForFilename(date) {\n    return date.toISOString().split('T')[0];\n  }\n  \n  static formatDateISR(dateString) {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('he-IL');\n  }\n}\n\n// Import class\nexport class DataImporter {\n  \n  // Import full backup\n  static async importFullBackup(jsonContent) {\n    try {\n      const backup = JSON.parse(jsonContent);\n      \n      // Validate backup structure\n      if (!backup.data || !backup.version) {\n        throw new Error('פורמט גיבוי לא תקין');\n      }\n      \n      // Create backup of current data before import\n      const currentBackup = DataExporter.exportFullBackup();\n      if (!currentBackup.success) {\n        throw new Error('נכשל ביצירת גיבוי נוכחי');\n      }\n      \n      const results = {\n        imported: 0,\n        errors: [],\n        backed_up: true\n      };\n      \n      // Import data\n      if (backup.data.transactions) {\n        try {\n          StorageAPI.utils.clear('transactions');\n          backup.data.transactions.forEach(txn => {\n            StorageAPI.transactions.save(txn);\n            results.imported++;\n          });\n        } catch (error) {\n          results.errors.push(`עסקאות: ${error.message}`);\n        }\n      }\n      \n      if (backup.data.categories) {\n        try {\n          StorageAPI.utils.clear('categories');\n          backup.data.categories.forEach(cat => {\n            StorageAPI.categories.save(cat);\n            results.imported++;\n          });\n        } catch (error) {\n          results.errors.push(`קטגוריות: ${error.message}`);\n        }\n      }\n      \n      if (backup.data.budgets) {\n        try {\n          StorageAPI.utils.clear('budgets');\n          backup.data.budgets.forEach(budget => {\n            StorageAPI.budgets.save(budget);\n            results.imported++;\n          });\n        } catch (error) {\n          results.errors.push(`תקציבים: ${error.message}`);\n        }\n      }\n      \n      if (backup.data.accounts) {\n        try {\n          StorageAPI.utils.clear('accounts');\n          backup.data.accounts.forEach(account => {\n            StorageAPI.accounts.save(account);\n            results.imported++;\n          });\n        } catch (error) {\n          results.errors.push(`חשבונות: ${error.message}`);\n        }\n      }\n      \n      if (backup.data.settings) {\n        try {\n          StorageAPI.settings.update(backup.data.settings);\n          results.imported++;\n        } catch (error) {\n          results.errors.push(`הגדרות: ${error.message}`);\n        }\n      }\n      \n      return {\n        success: true,\n        results,\n        message: `יובאו בהצלחה ${results.imported} פריטים`\n      };\n      \n    } catch (error) {\n      return {\n        success: false,\n        error: `שגיאה בייבוא גיבוי: ${error.message}`\n      };\n    }\n  }\n  \n  // Import transactions from CSV\n  static async importTransactionsCSV(csvContent, options = {}) {\n    try {\n      const lines = csvContent.split('\\n').filter(line => line.trim());\n      if (lines.length < 2) {\n        throw new Error('קובץ CSV ריק או לא תקין');\n      }\n      \n      const headers = this.parseCSVLine(lines[0]);\n      const results = {\n        imported: 0,\n        skipped: 0,\n        errors: []\n      };\n      \n      // Get existing data for mapping\n      const categories = StorageAPI.categories.getAll();\n      const accounts = StorageAPI.accounts.getAll();\n      \n      const categoryMap = {};\n      categories.forEach(cat => {\n        categoryMap[cat.שם] = cat.id;\n        categoryMap[cat.id] = cat.id;\n      });\n      \n      const accountMap = {};\n      accounts.forEach(acc => {\n        accountMap[acc.שם] = acc.id;\n        accountMap[acc.id] = acc.id;\n      });\n      \n      // Process data rows\n      for (let i = 1; i < lines.length; i++) {\n        try {\n          const values = this.parseCSVLine(lines[i]);\n          if (values.length !== headers.length) {\n            results.errors.push(`שורה ${i + 1}: מספר עמודות לא תואם`);\n            results.skipped++;\n            continue;\n          }\n          \n          const rowData = {};\n          headers.forEach((header, index) => {\n            rowData[header] = values[index];\n          });\n          \n          // Map CSV data to transaction model\n          const transaction = this.mapCSVToTransaction(rowData, categoryMap, accountMap);\n          \n          if (transaction) {\n            StorageAPI.transactions.save(transaction);\n            results.imported++;\n          } else {\n            results.skipped++;\n          }\n          \n        } catch (error) {\n          results.errors.push(`שורה ${i + 1}: ${error.message}`);\n          results.skipped++;\n        }\n      }\n      \n      return {\n        success: true,\n        results,\n        message: `יובאו ${results.imported} עסקאות, דולגו ${results.skipped}`\n      };\n      \n    } catch (error) {\n      return {\n        success: false,\n        error: `שגיאה בייבוא CSV: ${error.message}`\n      };\n    }\n  }\n  \n  // Map CSV row to transaction object\n  static mapCSVToTransaction(rowData, categoryMap, accountMap) {\n    try {\n      // Try different possible field mappings for Israeli banks\n      const dateFields = [\n        'תאריך', 'date', 'תאריך פעולה', 'תאריך ערך', 'תאריך ביצוע',\n        'Date', 'Transaction Date', 'Value Date', 'Execution Date'\n      ];\n      \n      const descFields = [\n        'תיאור', 'description', 'פרטי הפעולה', 'תיאור הפעולה', 'תיאור פעולה', 'פרטי פעולה',\n        'Description', 'Transaction Description', 'Details', 'Particulars'\n      ];\n      \n      const amountFields = [\n        'סכום', 'amount', 'זכות', 'חובה', 'סכום זכות', 'סכום חובה',\n        'Amount', 'Credit', 'Debit', 'Credit Amount', 'Debit Amount'\n      ];\n      \n      const categoryFields = [\n        'קטגוריה', 'category', 'Category', 'Type', 'סוג'\n      ];\n      \n      const accountFields = [\n        'חשבון', 'account', 'Account', 'מספר חשבון', 'Account Number'\n      ];\n      \n      const transaction = {\n        תאריך: this.findFieldValue(rowData, dateFields),\n        תיאור: this.findFieldValue(rowData, descFields),\n        סכום: this.parseAmount(rowData, amountFields),\n        קטגוריה: this.mapCategory(rowData, categoryFields, categoryMap),\n        חשבון: this.mapAccount(rowData, accountFields, accountMap),\n        סוג: 'הוצאה', // Default, will be determined by amount\n        הערות: rowData['הערות'] || rowData['notes'] || '',\n        מקור: 'import'\n      };\n      \n      // Determine transaction type based on amount\n      if (transaction.סכום > 0) {\n        transaction.סוג = 'הכנסה';\n      } else if (transaction.סכום < 0) {\n        transaction.סוג = 'הוצאה';\n      }\n      \n      // Validate required fields\n      if (!transaction.תאריך || !transaction.תיאור || transaction.סכום === 0) {\n        throw new Error('שדות חובה חסרים');\n      }\n      \n      return transaction;\n      \n    } catch (error) {\n      console.error('Error mapping CSV row:', error);\n      return null;\n    }\n  }\n  \n  // Helper methods for CSV import\n  static parseCSVLine(line) {\n    const values = [];\n    let current = '';\n    let inQuotes = false;\n    \n    for (let i = 0; i < line.length; i++) {\n      const char = line[i];\n      \n      if (char === '\"') {\n        inQuotes = !inQuotes;\n      } else if (char === ',' && !inQuotes) {\n        values.push(current.trim());\n        current = '';\n      } else {\n        current += char;\n      }\n    }\n    \n    values.push(current.trim());\n    return values;\n  }\n  \n  static findFieldValue(rowData, possibleFields) {\n    for (const field of possibleFields) {\n      if (rowData[field] !== undefined && rowData[field] !== '') {\n        return rowData[field];\n      }\n    }\n    return '';\n  }\n  \n  static parseAmount(rowData, amountFields) {\n    // Check for separate credit/debit columns first\n    const creditFields = ['זכות', 'סכום זכות', 'Credit', 'Credit Amount'];\n    const debitFields = ['חובה', 'סכום חובה', 'Debit', 'Debit Amount'];\n    \n    let creditAmount = 0;\n    let debitAmount = 0;\n    \n    // Parse credit amount\n    for (const field of creditFields) {\n      if (rowData[field] !== undefined && rowData[field] !== '') {\n        const amount = parseFloat(rowData[field].toString().replace(/[^\\d.-]/g, ''));\n        if (!isNaN(amount) && amount > 0) {\n          creditAmount = amount;\n          break;\n        }\n      }\n    }\n    \n    // Parse debit amount\n    for (const field of debitFields) {\n      if (rowData[field] !== undefined && rowData[field] !== '') {\n        const amount = parseFloat(rowData[field].toString().replace(/[^\\d.-]/g, ''));\n        if (!isNaN(amount) && amount > 0) {\n          debitAmount = -Math.abs(amount);\n          break;\n        }\n      }\n    }\n    \n    // If we found credit or debit, return it\n    if (creditAmount > 0) return creditAmount;\n    if (debitAmount < 0) return debitAmount;\n    \n    // Fallback: try to find amount in single amount field\n    for (const field of amountFields) {\n      if (rowData[field] !== undefined && rowData[field] !== '') {\n        let amount = parseFloat(rowData[field].toString().replace(/[^\\d.-]/g, ''));\n        \n        // Handle some Israeli bank specific conventions\n        if (!isNaN(amount)) {\n          // Check if transaction type is indicated elsewhere\n          const transactionType = rowData['זכות/חובה'] || rowData['סוג תנועה'] || rowData['סוג פעולה'];\n          if (transactionType) {\n            if (transactionType.includes('חובה') || transactionType.includes('Debit')) {\n              amount = -Math.abs(amount);\n            } else if (transactionType.includes('זכות') || transactionType.includes('Credit')) {\n              amount = Math.abs(amount);\n            }\n          }\n          \n          return amount;\n        }\n      }\n    }\n    \n    return 0;\n  }\n  \n  static mapCategory(rowData, categoryFields, categoryMap) {\n    const categoryName = this.findFieldValue(rowData, categoryFields);\n    return categoryMap[categoryName] || null;\n  }\n  \n  static mapAccount(rowData, accountFields, accountMap) {\n    const accountName = this.findFieldValue(rowData, accountFields);\n    return accountMap[accountName] || null;\n  }\n}\n\n// Public API\nexport const DataBackup = {\n  // Export functions\n  exportAll: () => DataExporter.exportFullBackup(),\n  exportTransactions: (dateRange) => DataExporter.exportTransactionsCSV(dateRange),\n  exportCategories: () => DataExporter.exportCategoriesCSV(),\n  exportForBank: (format) => DataExporter.exportForBanks(format),\n  \n  // Import functions\n  importBackup: (jsonContent) => DataImporter.importFullBackup(jsonContent),\n  importTransactions: (csvContent, options) => DataImporter.importTransactionsCSV(csvContent, options),\n  \n  // Utility functions\n  download: (exportResult) => DataExporter.downloadFile(exportResult),\n  \n  // Supported formats\n  supportedFormats: {\n    export: ['json', 'csv'],\n    bankFormats: ['generic', 'hapoalim', 'leumi', 'mizrahi', 'discount', 'fibi'],\n    import: ['json', 'csv']\n  }\n};\n\nexport default DataBackup;","/**\n * Data Encryption System for Israeli Personal Finance Dashboard\n * Client-side encryption for sensitive financial information\n */\n\n// Simple encryption for client-side data protection\n// Note: This is basic encryption suitable for localStorage protection\n// For production use, consider more robust encryption libraries\n\nclass SimpleEncryption {\n  constructor(key = null) {\n    this.key = key || this.generateKey();\n    this.encoder = new TextEncoder();\n    this.decoder = new TextDecoder();\n  }\n\n  // Generate a simple key based on user session\n  generateKey() {\n    const userAgent = navigator.userAgent;\n    const timestamp = Date.now().toString();\n    const random = Math.random().toString(36);\n    return btoa(userAgent + timestamp + random).slice(0, 32);\n  }\n\n  // Simple XOR encryption (suitable for localStorage)\n  encrypt(text) {\n    if (!text) return text;\n    \n    try {\n      const textBytes = this.encoder.encode(text);\n      const keyBytes = this.encoder.encode(this.key);\n      const encrypted = new Uint8Array(textBytes.length);\n      \n      for (let i = 0; i < textBytes.length; i++) {\n        encrypted[i] = textBytes[i] ^ keyBytes[i % keyBytes.length];\n      }\n      \n      // Convert to base64 for storage\n      return btoa(String.fromCharCode(...encrypted));\n    } catch (error) {\n      console.error('Encryption error:', error);\n      return text; // Return original text if encryption fails\n    }\n  }\n\n  // Simple XOR decryption\n  decrypt(encryptedText) {\n    if (!encryptedText) return encryptedText;\n    \n    try {\n      // Convert from base64\n      const encrypted = new Uint8Array(\n        atob(encryptedText).split('').map(char => char.charCodeAt(0))\n      );\n      \n      const keyBytes = this.encoder.encode(this.key);\n      const decrypted = new Uint8Array(encrypted.length);\n      \n      for (let i = 0; i < encrypted.length; i++) {\n        decrypted[i] = encrypted[i] ^ keyBytes[i % keyBytes.length];\n      }\n      \n      return this.decoder.decode(decrypted);\n    } catch (error) {\n      console.error('Decryption error:', error);\n      return encryptedText; // Return encrypted text if decryption fails\n    }\n  }\n}\n\n// Encryption manager for financial data\nexport class DataEncryption {\n  constructor() {\n    this.encryption = new SimpleEncryption();\n    this.isEnabled = this.getEncryptionSetting();\n    \n    // Fields that should be encrypted\n    this.sensitiveFields = {\n      accounts: ['מספר_חשבון', 'יתרה'],\n      transactions: ['הערות'], // Only notes for privacy\n      settings: [] // Settings don't contain sensitive data\n    };\n  }\n\n  // Get encryption setting from localStorage\n  getEncryptionSetting() {\n    try {\n      const settings = JSON.parse(localStorage.getItem('pf_settings') || '{}');\n      return settings.הצפנה !== false; // Default to true\n    } catch {\n      return true; // Default to encrypted\n    }\n  }\n\n  // Enable/disable encryption\n  setEncryptionEnabled(enabled) {\n    this.isEnabled = enabled;\n    \n    // Update settings\n    try {\n      const settings = JSON.parse(localStorage.getItem('pf_settings') || '{}');\n      settings.הצפנה = enabled;\n      settings.עודכן = new Date().toISOString();\n      localStorage.setItem('pf_settings', JSON.stringify(settings));\n    } catch (error) {\n      console.error('Failed to update encryption setting:', error);\n    }\n  }\n\n  // Encrypt sensitive data before storage\n  encryptData(data, dataType) {\n    if (!this.isEnabled || !data) {\n      return data;\n    }\n\n    try {\n      const sensitiveFieldsForType = this.sensitiveFields[dataType] || [];\n      \n      if (Array.isArray(data)) {\n        // Handle arrays (multiple items)\n        return data.map(item => this.encryptObject(item, sensitiveFieldsForType));\n      } else {\n        // Handle single object\n        return this.encryptObject(data, sensitiveFieldsForType);\n      }\n    } catch (error) {\n      console.error('Data encryption error:', error);\n      return data; // Return original data if encryption fails\n    }\n  }\n\n  // Decrypt sensitive data after retrieval\n  decryptData(data, dataType) {\n    if (!this.isEnabled || !data) {\n      return data;\n    }\n\n    try {\n      const sensitiveFieldsForType = this.sensitiveFields[dataType] || [];\n      \n      if (Array.isArray(data)) {\n        // Handle arrays (multiple items)\n        return data.map(item => this.decryptObject(item, sensitiveFieldsForType));\n      } else {\n        // Handle single object\n        return this.decryptObject(data, sensitiveFieldsForType);\n      }\n    } catch (error) {\n      console.error('Data decryption error:', error);\n      return data; // Return encrypted data if decryption fails\n    }\n  }\n\n  // Encrypt specific fields in an object\n  encryptObject(obj, sensitiveFields) {\n    if (!obj || typeof obj !== 'object') {\n      return obj;\n    }\n\n    const encrypted = { ...obj };\n    \n    sensitiveFields.forEach(field => {\n      if (encrypted[field] !== undefined && encrypted[field] !== null) {\n        encrypted[field] = this.encryption.encrypt(encrypted[field].toString());\n      }\n    });\n\n    return encrypted;\n  }\n\n  // Decrypt specific fields in an object\n  decryptObject(obj, sensitiveFields) {\n    if (!obj || typeof obj !== 'object') {\n      return obj;\n    }\n\n    const decrypted = { ...obj };\n    \n    sensitiveFields.forEach(field => {\n      if (decrypted[field] !== undefined && decrypted[field] !== null) {\n        const decryptedValue = this.encryption.decrypt(decrypted[field]);\n        \n        // Try to convert back to number if it was originally a number\n        if (field === 'יתרה' || field === 'מספר_חשבון') {\n          const numValue = parseFloat(decryptedValue);\n          if (!isNaN(numValue) && field === 'יתרה') {\n            decrypted[field] = numValue;\n          } else {\n            decrypted[field] = decryptedValue;\n          }\n        } else {\n          decrypted[field] = decryptedValue;\n        }\n      }\n    });\n\n    return decrypted;\n  }\n\n  // Secure deletion of sensitive data\n  secureDelete(key) {\n    try {\n      // Overwrite with random data before deletion\n      const randomData = Array(1024).fill(0).map(() => Math.random().toString(36)).join('');\n      localStorage.setItem(key, randomData);\n      localStorage.removeItem(key);\n      return true;\n    } catch (error) {\n      console.error('Secure deletion error:', error);\n      return false;\n    }\n  }\n\n  // Encrypt export data\n  encryptExportData(data) {\n    if (!this.isEnabled) {\n      return data;\n    }\n\n    try {\n      return this.encryption.encrypt(JSON.stringify(data));\n    } catch (error) {\n      console.error('Export encryption error:', error);\n      return data;\n    }\n  }\n\n  // Decrypt import data\n  decryptImportData(encryptedData) {\n    if (!this.isEnabled) {\n      return encryptedData;\n    }\n\n    try {\n      const decrypted = this.encryption.decrypt(encryptedData);\n      return JSON.parse(decrypted);\n    } catch (error) {\n      console.error('Import decryption error:', error);\n      // Try to parse as regular JSON if decryption fails\n      try {\n        return JSON.parse(encryptedData);\n      } catch {\n        throw new Error('לא ניתן לפענח את הנתונים - ייתכן שהם לא מוצפנים או פגומים');\n      }\n    }\n  }\n\n  // Generate encryption report\n  getEncryptionStatus() {\n    return {\n      enabled: this.isEnabled,\n      keyGenerated: !!this.encryption.key,\n      sensitiveFields: this.sensitiveFields,\n      lastUpdate: new Date().toISOString(),\n      message: this.isEnabled ? \n        'הצפנה פעילה - נתונים רגישים מוצפנים בזיכרון המקומי' : \n        'הצפנה לא פעילה - נתונים נשמרים בטקסט גלוי'\n    };\n  }\n\n  // Migration helper for enabling/disabling encryption\n  async migrateEncryption(enable) {\n    try {\n      const storageKeys = ['pf_transactions', 'pf_categories', 'pf_budgets', 'pf_accounts'];\n      const results = {\n        migrated: 0,\n        errors: []\n      };\n\n      for (const key of storageKeys) {\n        try {\n          const data = localStorage.getItem(key);\n          if (!data) continue;\n\n          const parsed = JSON.parse(data);\n          const dataType = key.replace('pf_', '');\n          \n          let processedData;\n          if (enable) {\n            // Encrypt data\n            processedData = this.encryptData(parsed, dataType);\n          } else {\n            // Decrypt data\n            processedData = this.decryptData(parsed, dataType);\n          }\n\n          localStorage.setItem(key, JSON.stringify(processedData));\n          results.migrated++;\n        } catch (error) {\n          results.errors.push(`${key}: ${error.message}`);\n        }\n      }\n\n      // Update encryption setting\n      this.setEncryptionEnabled(enable);\n\n      return {\n        success: true,\n        results,\n        message: enable ? \n          `הוצפנו בהצלחה ${results.migrated} קבצי נתונים` : \n          `בוטלה הצפנה עבור ${results.migrated} קבצי נתונים`\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `שגיאה במעבר הצפנה: ${error.message}`\n      };\n    }\n  }\n}\n\n// Singleton instance\nconst dataEncryption = new DataEncryption();\n\n// Public API\nexport const EncryptionAPI = {\n  // Encryption management\n  isEnabled: () => dataEncryption.isEnabled,\n  enable: () => dataEncryption.migrateEncryption(true),\n  disable: () => dataEncryption.migrateEncryption(false),\n  \n  // Data processing\n  encrypt: (data, type) => dataEncryption.encryptData(data, type),\n  decrypt: (data, type) => dataEncryption.decryptData(data, type),\n  \n  // Export/Import security\n  encryptForExport: (data) => dataEncryption.encryptExportData(data),\n  decryptFromImport: (data) => dataEncryption.decryptImportData(data),\n  \n  // Utility\n  secureDelete: (key) => dataEncryption.secureDelete(key),\n  getStatus: () => dataEncryption.getEncryptionStatus(),\n  \n  // Settings\n  updateSetting: (enabled) => dataEncryption.setEncryptionEnabled(enabled)\n};\n\nexport default EncryptionAPI;","/**\n * Data Analytics and Search System for Israeli Personal Finance Dashboard\n * Hebrew text search, filtering, and financial calculations\n */\n\nimport StorageAPI from './storage.js';\nimport { formatters } from './models.js';\n\n// Hebrew text search utilities\nexport class HebrewSearch {\n  \n  // Normalize Hebrew text for search (remove nikud, handle variations)\n  static normalizeHebrew(text) {\n    if (!text || typeof text !== 'string') return '';\n    \n    return text\n      // Remove nikud (Hebrew diacritics)\n      .replace(/[\\u0591-\\u05C7]/g, '')\n      // Normalize whitespace\n      .replace(/\\s+/g, ' ')\n      .trim()\n      .toLowerCase();\n  }\n  \n  // Search Hebrew text with fuzzy matching\n  static searchHebrewText(text, query) {\n    if (!text || !query) return false;\n    \n    const normalizedText = this.normalizeHebrew(text);\n    const normalizedQuery = this.normalizeHebrew(query);\n    \n    // Exact match\n    if (normalizedText.includes(normalizedQuery)) {\n      return true;\n    }\n    \n    // Word-by-word match\n    const textWords = normalizedText.split(' ');\n    const queryWords = normalizedQuery.split(' ');\n    \n    return queryWords.every(queryWord => \n      textWords.some(textWord => textWord.includes(queryWord))\n    );\n  }\n  \n  // Search with multiple criteria\n  static multiFieldSearch(item, query, fields) {\n    if (!query) return true;\n    \n    return fields.some(field => {\n      const value = item[field];\n      if (value === undefined || value === null) return false;\n      \n      return this.searchHebrewText(value.toString(), query);\n    });\n  }\n}\n\n// Data filtering utilities\nexport class DataFilter {\n  \n  // Filter transactions by multiple criteria\n  static filterTransactions(criteria = {}) {\n    let transactions = StorageAPI.transactions.getAll();\n    \n    // Text search\n    if (criteria.search) {\n      transactions = transactions.filter(txn => \n        HebrewSearch.multiFieldSearch(txn, criteria.search, ['תיאור', 'הערות'])\n      );\n    }\n    \n    // Date range\n    if (criteria.dateFrom || criteria.dateTo) {\n      transactions = transactions.filter(txn => {\n        const txnDate = new Date(txn.תאריך);\n        \n        if (criteria.dateFrom && txnDate < new Date(criteria.dateFrom)) {\n          return false;\n        }\n        \n        if (criteria.dateTo && txnDate > new Date(criteria.dateTo)) {\n          return false;\n        }\n        \n        return true;\n      });\n    }\n    \n    // Amount range\n    if (criteria.amountMin !== undefined || criteria.amountMax !== undefined) {\n      transactions = transactions.filter(txn => {\n        const amount = Math.abs(txn.סכום);\n        \n        if (criteria.amountMin !== undefined && amount < criteria.amountMin) {\n          return false;\n        }\n        \n        if (criteria.amountMax !== undefined && amount > criteria.amountMax) {\n          return false;\n        }\n        \n        return true;\n      });\n    }\n    \n    // Category filter\n    if (criteria.categories && criteria.categories.length > 0) {\n      transactions = transactions.filter(txn => \n        criteria.categories.includes(txn.קטגוריה)\n      );\n    }\n    \n    // Account filter\n    if (criteria.accounts && criteria.accounts.length > 0) {\n      transactions = transactions.filter(txn => \n        criteria.accounts.includes(txn.חשבון)\n      );\n    }\n    \n    // Transaction type filter\n    if (criteria.types && criteria.types.length > 0) {\n      transactions = transactions.filter(txn => \n        criteria.types.includes(txn.סוג)\n      );\n    }\n    \n    // Tags filter\n    if (criteria.tags && criteria.tags.length > 0) {\n      transactions = transactions.filter(txn => \n        txn.תגיות && txn.תגיות.some(tag => criteria.tags.includes(tag))\n      );\n    }\n    \n    return transactions;\n  }\n  \n  // Filter categories\n  static filterCategories(criteria = {}) {\n    let categories = StorageAPI.categories.getAll();\n    \n    // Text search\n    if (criteria.search) {\n      categories = categories.filter(cat => \n        HebrewSearch.searchHebrewText(cat.שם, criteria.search)\n      );\n    }\n    \n    // Type filter\n    if (criteria.type) {\n      categories = categories.filter(cat => cat.סוג === criteria.type);\n    }\n    \n    // Active filter\n    if (criteria.active !== undefined) {\n      categories = categories.filter(cat => cat.אקטיבי === criteria.active);\n    }\n    \n    return categories;\n  }\n  \n  // Filter accounts\n  static filterAccounts(criteria = {}) {\n    let accounts = StorageAPI.accounts.getAll();\n    \n    // Text search\n    if (criteria.search) {\n      accounts = accounts.filter(acc => \n        HebrewSearch.multiFieldSearch(acc, criteria.search, ['שם', 'בנק'])\n      );\n    }\n    \n    // Type filter\n    if (criteria.type) {\n      accounts = accounts.filter(acc => acc.סוג === criteria.type);\n    }\n    \n    // Active filter\n    if (criteria.active !== undefined) {\n      accounts = accounts.filter(acc => acc.אקטיבי === criteria.active);\n    }\n    \n    return accounts;\n  }\n}\n\n// Financial calculations and aggregations\nexport class FinancialAnalytics {\n  \n  // Calculate total income, expenses, and balance\n  static calculateTotals(transactions = null) {\n    if (!transactions) {\n      transactions = StorageAPI.transactions.getAll();\n    }\n    \n    const totals = {\n      הכנסות: 0,\n      הוצאות: 0,\n      יתרה: 0,\n      מספר_עסקאות: transactions.length\n    };\n    \n    transactions.forEach(txn => {\n      if (txn.סוג === 'הכנסה' || txn.סכום > 0) {\n        totals.הכנסות += Math.abs(txn.סכום);\n      } else if (txn.סוג === 'הוצאה' || txn.סכום < 0) {\n        totals.הוצאות += Math.abs(txn.סכום);\n      }\n    });\n    \n    totals.יתרה = totals.הכנסות - totals.הוצאות;\n    \n    return totals;\n  }\n  \n  // Calculate spending by category\n  static calculateByCategory(transactions = null) {\n    if (!transactions) {\n      transactions = StorageAPI.transactions.getAll();\n    }\n    \n    const categories = StorageAPI.categories.getAll();\n    const categoryMap = {};\n    categories.forEach(cat => {\n      categoryMap[cat.id] = {\n        id: cat.id,\n        שם: cat.שם,\n        צבע: cat.צבע,\n        אייקון: cat.אייקון,\n        סכום: 0,\n        מספר_עסקאות: 0\n      };\n    });\n    \n    transactions.forEach(txn => {\n      if (categoryMap[txn.קטגוריה]) {\n        categoryMap[txn.קטגוריה].סכום += Math.abs(txn.סכום);\n        categoryMap[txn.קטגוריה].מספר_עסקאות++;\n      }\n    });\n    \n    return Object.values(categoryMap)\n      .filter(cat => cat.סכום > 0)\n      .sort((a, b) => b.סכום - a.סכום);\n  }\n  \n  // Calculate spending by account\n  static calculateByAccount(transactions = null) {\n    if (!transactions) {\n      transactions = StorageAPI.transactions.getAll();\n    }\n    \n    const accounts = StorageAPI.accounts.getAll();\n    const accountMap = {};\n    accounts.forEach(acc => {\n      accountMap[acc.id] = {\n        id: acc.id,\n        שם: acc.שם,\n        סוג: acc.סוג,\n        צבע: acc.צבע,\n        סכום: 0,\n        מספר_עסקאות: 0\n      };\n    });\n    \n    transactions.forEach(txn => {\n      if (accountMap[txn.חשבון]) {\n        accountMap[txn.חשבון].סכום += Math.abs(txn.סכום);\n        accountMap[txn.חשבון].מספר_עסקאות++;\n      }\n    });\n    \n    return Object.values(accountMap)\n      .filter(acc => acc.סכום > 0)\n      .sort((a, b) => b.סכום - a.סכום);\n  }\n  \n  // Calculate monthly trends\n  static calculateMonthlyTrends(monthsBack = 12) {\n    const transactions = StorageAPI.transactions.getAll();\n    const now = new Date();\n    const trends = [];\n    \n    for (let i = monthsBack - 1; i >= 0; i--) {\n      const monthDate = new Date(now.getFullYear(), now.getMonth() - i, 1);\n      const monthStart = new Date(monthDate.getFullYear(), monthDate.getMonth(), 1);\n      const monthEnd = new Date(monthDate.getFullYear(), monthDate.getMonth() + 1, 0);\n      \n      const monthTransactions = transactions.filter(txn => {\n        const txnDate = new Date(txn.תאריך);\n        return txnDate >= monthStart && txnDate <= monthEnd;\n      });\n      \n      const monthTotals = this.calculateTotals(monthTransactions);\n      \n      trends.push({\n        חודש: monthDate.toLocaleDateString('he-IL', { year: 'numeric', month: 'long' }),\n        שנה: monthDate.getFullYear(),\n        מספר_חודש: monthDate.getMonth() + 1,\n        ...monthTotals\n      });\n    }\n    \n    return trends;\n  }\n  \n  // Calculate budget performance\n  static calculateBudgetPerformance() {\n    const budgets = StorageAPI.budgets.getActive();\n    const results = [];\n    \n    budgets.forEach(budget => {\n      const budgetTransactions = StorageAPI.transactions.getByDateRange(\n        budget.תקופה.start,\n        budget.תקופה.end\n      );\n      \n      const spent = budgetTransactions\n        .filter(txn => txn.סוג === 'הוצאה')\n        .reduce((sum, txn) => sum + Math.abs(txn.סכום), 0);\n      \n      const progress = budget.getProgress();\n      progress.spent = spent;\n      \n      results.push({\n        budget,\n        progress,\n        transactions: budgetTransactions.length\n      });\n    });\n    \n    return results;\n  }\n  \n  // Calculate savings rate\n  static calculateSavingsRate(periodDays = 30) {\n    const endDate = new Date();\n    const startDate = new Date(endDate.getTime() - (periodDays * 24 * 60 * 60 * 1000));\n    \n    const transactions = StorageAPI.transactions.getByDateRange(\n      startDate.toISOString().split('T')[0],\n      endDate.toISOString().split('T')[0]\n    );\n    \n    const totals = this.calculateTotals(transactions);\n    const savingsRate = totals.הכנסות > 0 ? (totals.יתרה / totals.הכנסות) * 100 : 0;\n    \n    return {\n      תקופה: periodDays,\n      הכנסות: totals.הכנסות,\n      הוצאות: totals.הוצאות,\n      חיסכון: totals.יתרה,\n      שיעור_חיסכון: Math.round(savingsRate * 100) / 100,\n      הערכה: savingsRate > 20 ? 'מעולה' : savingsRate > 10 ? 'טוב' : savingsRate > 0 ? 'בסיסי' : 'דורש שיפור'\n    };\n  }\n  \n  // Calculate expense patterns\n  static calculateExpensePatterns() {\n    const transactions = StorageAPI.transactions.getAll()\n      .filter(txn => txn.סוג === 'הוצאה');\n    \n    // Daily pattern\n    const dailyPattern = Array(7).fill(0);\n    const dailyNames = ['ראשון', 'שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת'];\n    \n    // Monthly pattern\n    const monthlyPattern = Array(12).fill(0);\n    const monthlyNames = [\n      'ינואר', 'פברואר', 'מרץ', 'אפריל', 'מאי', 'יוני',\n      'יולי', 'אוגוסט', 'ספטמבר', 'אוקטובר', 'נובמבר', 'דצמבר'\n    ];\n    \n    transactions.forEach(txn => {\n      const date = new Date(txn.תאריך);\n      dailyPattern[date.getDay()] += Math.abs(txn.סכום);\n      monthlyPattern[date.getMonth()] += Math.abs(txn.סכום);\n    });\n    \n    return {\n      יומי: dailyPattern.map((amount, index) => ({\n        יום: dailyNames[index],\n        סכום: amount\n      })),\n      חודשי: monthlyPattern.map((amount, index) => ({\n        חודש: monthlyNames[index],\n        סכום: amount\n      }))\n    };\n  }\n  \n  // Top spending categories\n  static getTopSpendingCategories(limit = 5) {\n    const categorySpending = this.calculateByCategory();\n    return categorySpending.slice(0, limit);\n  }\n  \n  // Recent transactions summary\n  static getRecentTransactionsSummary(days = 7) {\n    const endDate = new Date();\n    const startDate = new Date(endDate.getTime() - (days * 24 * 60 * 60 * 1000));\n    \n    const recentTransactions = StorageAPI.transactions.getByDateRange(\n      startDate.toISOString().split('T')[0],\n      endDate.toISOString().split('T')[0]\n    );\n    \n    const totals = this.calculateTotals(recentTransactions);\n    const categories = this.calculateByCategory(recentTransactions);\n    \n    return {\n      תקופה: days,\n      סיכום: totals,\n      קטגוריות: categories.slice(0, 5),\n      עסקאות_אחרונות: recentTransactions\n        .sort((a, b) => new Date(b.תאריך) - new Date(a.תאריך))\n        .slice(0, 10)\n    };\n  }\n}\n\n// Search and Analytics API\nexport const SearchAPI = {\n  // Search functions\n  search: {\n    transactions: (query, additionalFilters = {}) => {\n      return DataFilter.filterTransactions({ search: query, ...additionalFilters });\n    },\n    \n    categories: (query) => {\n      return DataFilter.filterCategories({ search: query });\n    },\n    \n    accounts: (query) => {\n      return DataFilter.filterAccounts({ search: query });\n    },\n    \n    all: (query) => {\n      return {\n        transactions: DataFilter.filterTransactions({ search: query }),\n        categories: DataFilter.filterCategories({ search: query }),\n        accounts: DataFilter.filterAccounts({ search: query })\n      };\n    }\n  },\n  \n  // Filter functions\n  filter: {\n    transactions: (criteria) => DataFilter.filterTransactions(criteria),\n    categories: (criteria) => DataFilter.filterCategories(criteria),\n    accounts: (criteria) => DataFilter.filterAccounts(criteria)\n  },\n  \n  // Analytics functions\n  analytics: {\n    totals: (transactions) => FinancialAnalytics.calculateTotals(transactions),\n    byCategory: (transactions) => FinancialAnalytics.calculateByCategory(transactions),\n    byAccount: (transactions) => FinancialAnalytics.calculateByAccount(transactions),\n    monthlyTrends: (months) => FinancialAnalytics.calculateMonthlyTrends(months),\n    budgetPerformance: () => FinancialAnalytics.calculateBudgetPerformance(),\n    savingsRate: (days) => FinancialAnalytics.calculateSavingsRate(days),\n    expensePatterns: () => FinancialAnalytics.calculateExpensePatterns(),\n    topCategories: (limit) => FinancialAnalytics.getTopSpendingCategories(limit),\n    recentSummary: (days) => FinancialAnalytics.getRecentTransactionsSummary(days)\n  },\n  \n  // Utility functions\n  utils: {\n    normalizeHebrew: (text) => HebrewSearch.normalizeHebrew(text),\n    formatCurrency: (amount) => formatters.currency(amount),\n    formatDate: (date) => formatters.date(date)\n  }\n};\n\nexport default SearchAPI;","/**\n * Data Migration and Integrity System for Israeli Personal Finance Dashboard\n * Schema updates and data validation with Hebrew error messages\n */\n\nimport { DATA_SCHEMA } from './schema.js';\nimport StorageAPI from './storage.js';\nimport { DataValidator } from './validation.js';\n\n// Migration definitions\nconst MIGRATIONS = {\n  '1.0.0': {\n    description: 'Initial schema setup',\n    up: () => {\n      // Initial setup already handled in storage.js\n      return { success: true, message: 'סכמה ראשונית הוגדרה בהצלחה' };\n    }\n  },\n  \n  '1.1.0': {\n    description: 'Add tags support to transactions',\n    up: () => {\n      try {\n        const transactions = StorageAPI.transactions.getAll();\n        let updated = 0;\n        \n        transactions.forEach(txn => {\n          if (!txn.תגיות) {\n            txn.תגיות = [];\n            StorageAPI.transactions.save(txn);\n            updated++;\n          }\n        });\n        \n        return { \n          success: true, \n          message: `הוספו תגיות ל-${updated} עסקאות` \n        };\n      } catch (error) {\n        return { \n          success: false, \n          error: `שגיאה בהוספת תגיות: ${error.message}` \n        };\n      }\n    }\n  },\n  \n  '1.2.0': {\n    description: 'Add location field to transactions',\n    up: () => {\n      try {\n        const transactions = StorageAPI.transactions.getAll();\n        let updated = 0;\n        \n        transactions.forEach(txn => {\n          if (!txn.מיקום) {\n            txn.מיקום = '';\n            StorageAPI.transactions.save(txn);\n            updated++;\n          }\n        });\n        \n        return { \n          success: true, \n          message: `הוסף שדה מיקום ל-${updated} עסקאות` \n        };\n      } catch (error) {\n        return { \n          success: false, \n          error: `שגיאה בהוספת מיקום: ${error.message}` \n        };\n      }\n    }\n  }\n};\n\n// Data migration manager\nexport class DataMigration {\n  \n  static getCurrentVersion() {\n    return localStorage.getItem(DATA_SCHEMA.STORAGE_KEYS.SCHEMA_VERSION) || '1.0.0';\n  }\n  \n  static getTargetVersion() {\n    return DATA_SCHEMA.VERSION;\n  }\n  \n  static needsMigration() {\n    const current = this.getCurrentVersion();\n    const target = this.getTargetVersion();\n    return this.compareVersions(current, target) < 0;\n  }\n  \n  static compareVersions(a, b) {\n    const aParts = a.split('.').map(Number);\n    const bParts = b.split('.').map(Number);\n    \n    for (let i = 0; i < Math.max(aParts.length, bParts.length); i++) {\n      const aPart = aParts[i] || 0;\n      const bPart = bParts[i] || 0;\n      \n      if (aPart < bPart) return -1;\n      if (aPart > bPart) return 1;\n    }\n    \n    return 0;\n  }\n  \n  static async runMigrations() {\n    if (!this.needsMigration()) {\n      return {\n        success: true,\n        message: 'אין צורך בעדכון סכמה',\n        currentVersion: this.getCurrentVersion()\n      };\n    }\n    \n    const currentVersion = this.getCurrentVersion();\n    const targetVersion = this.getTargetVersion();\n    const results = {\n      success: true,\n      migrations: [],\n      errors: [],\n      fromVersion: currentVersion,\n      toVersion: targetVersion\n    };\n    \n    try {\n      // Create backup before migration\n      const backupKey = `migration_backup_${Date.now()}`;\n      const allData = {\n        transactions: StorageAPI.transactions.getAll(),\n        categories: StorageAPI.categories.getAll(),\n        budgets: StorageAPI.budgets.getAll(),\n        accounts: StorageAPI.accounts.getAll(),\n        settings: StorageAPI.settings.get()\n      };\n      \n      localStorage.setItem(backupKey, JSON.stringify(allData));\n      \n      // Run migrations in order\n      const versions = Object.keys(MIGRATIONS).sort(this.compareVersions);\n      \n      for (const version of versions) {\n        if (this.compareVersions(currentVersion, version) < 0 && \n            this.compareVersions(version, targetVersion) <= 0) {\n          \n          const migration = MIGRATIONS[version];\n          console.log(`Running migration to ${version}: ${migration.description}`);\n          \n          try {\n            const result = await migration.up();\n            results.migrations.push({\n              version,\n              description: migration.description,\n              result\n            });\n            \n            if (!result.success) {\n              results.errors.push(`Migration ${version}: ${result.error}`);\n            }\n          } catch (error) {\n            const errorMessage = `Migration ${version} failed: ${error.message}`;\n            results.errors.push(errorMessage);\n            console.error(errorMessage, error);\n          }\n        }\n      }\n      \n      // Update schema version\n      localStorage.setItem(DATA_SCHEMA.STORAGE_KEYS.SCHEMA_VERSION, targetVersion);\n      \n      // Clean up old backup if successful\n      if (results.errors.length === 0) {\n        localStorage.removeItem(backupKey);\n      }\n      \n      results.success = results.errors.length === 0;\n      results.message = results.success ? \n        `עודכן בהצלחה מגרסה ${currentVersion} לגרסה ${targetVersion}` :\n        `שגיאות בעדכון: ${results.errors.length}`;\n      \n    } catch (error) {\n      results.success = false;\n      results.error = `שגיאה במעבר נתונים: ${error.message}`;\n    }\n    \n    return results;\n  }\n}\n\n// Data integrity checker\nexport class DataIntegrityChecker {\n  \n  static async checkAllData() {\n    const results = {\n      overall: true,\n      errors: [],\n      warnings: [],\n      stats: {\n        transactions: 0,\n        categories: 0,\n        budgets: 0,\n        accounts: 0,\n        settings: 0\n      },\n      details: {}\n    };\n    \n    try {\n      // Check transactions\n      const transactionCheck = await this.checkTransactions();\n      results.details.transactions = transactionCheck;\n      results.stats.transactions = transactionCheck.count;\n      if (!transactionCheck.valid) {\n        results.overall = false;\n        results.errors.push(...transactionCheck.errors);\n      }\n      results.warnings.push(...transactionCheck.warnings);\n      \n      // Check categories\n      const categoryCheck = await this.checkCategories();\n      results.details.categories = categoryCheck;\n      results.stats.categories = categoryCheck.count;\n      if (!categoryCheck.valid) {\n        results.overall = false;\n        results.errors.push(...categoryCheck.errors);\n      }\n      results.warnings.push(...categoryCheck.warnings);\n      \n      // Check budgets\n      const budgetCheck = await this.checkBudgets();\n      results.details.budgets = budgetCheck;\n      results.stats.budgets = budgetCheck.count;\n      if (!budgetCheck.valid) {\n        results.overall = false;\n        results.errors.push(...budgetCheck.errors);\n      }\n      results.warnings.push(...budgetCheck.warnings);\n      \n      // Check accounts\n      const accountCheck = await this.checkAccounts();\n      results.details.accounts = accountCheck;\n      results.stats.accounts = accountCheck.count;\n      if (!accountCheck.valid) {\n        results.overall = false;\n        results.errors.push(...accountCheck.errors);\n      }\n      results.warnings.push(...accountCheck.warnings);\n      \n      // Check references integrity\n      const refCheck = await this.checkReferences();\n      results.details.references = refCheck;\n      if (!refCheck.valid) {\n        results.overall = false;\n        results.errors.push(...refCheck.errors);\n      }\n      results.warnings.push(...refCheck.warnings);\n      \n    } catch (error) {\n      results.overall = false;\n      results.errors.push(`שגיאה בבדיקת שלמות נתונים: ${error.message}`);\n    }\n    \n    return results;\n  }\n  \n  static async checkTransactions() {\n    const transactions = StorageAPI.transactions.getAll();\n    const errors = [];\n    const warnings = [];\n    let validCount = 0;\n    \n    transactions.forEach((txn, index) => {\n      try {\n        // Validate structure\n        const validationErrors = DataValidator.validateTransaction(txn);\n        if (DataValidator.hasErrors(validationErrors)) {\n          errors.push(`עסקה ${index + 1}: ${DataValidator.getErrorMessages(validationErrors).join(', ')}`);\n        } else {\n          validCount++;\n        }\n        \n        // Check for data anomalies\n        if (Math.abs(txn.סכום) > 1000000) {\n          warnings.push(`עסקה ${index + 1}: סכום חריג - ${txn.סכום}`);\n        }\n        \n        if (new Date(txn.תאריך) > new Date()) {\n          warnings.push(`עסקה ${index + 1}: תאריך בעתיד - ${txn.תאריך}`);\n        }\n        \n      } catch (error) {\n        errors.push(`עסקה ${index + 1}: שגיאה בבדיקה - ${error.message}`);\n      }\n    });\n    \n    return {\n      valid: errors.length === 0,\n      count: transactions.length,\n      validCount,\n      errors,\n      warnings\n    };\n  }\n  \n  static async checkCategories() {\n    const categories = StorageAPI.categories.getAll();\n    const errors = [];\n    const warnings = [];\n    let validCount = 0;\n    \n    // Check for duplicate names\n    const names = {};\n    \n    categories.forEach((cat, index) => {\n      try {\n        // Validate structure\n        const validationErrors = DataValidator.validateCategory(cat);\n        if (DataValidator.hasErrors(validationErrors)) {\n          errors.push(`קטגוריה ${index + 1}: ${DataValidator.getErrorMessages(validationErrors).join(', ')}`);\n        } else {\n          validCount++;\n        }\n        \n        // Check for duplicates\n        if (names[cat.שם]) {\n          warnings.push(`קטגוריה כפולה: ${cat.שם}`);\n        } else {\n          names[cat.שם] = true;\n        }\n        \n      } catch (error) {\n        errors.push(`קטגוריה ${index + 1}: שגיאה בבדיקה - ${error.message}`);\n      }\n    });\n    \n    return {\n      valid: errors.length === 0,\n      count: categories.length,\n      validCount,\n      errors,\n      warnings\n    };\n  }\n  \n  static async checkBudgets() {\n    const budgets = StorageAPI.budgets.getAll();\n    const errors = [];\n    const warnings = [];\n    let validCount = 0;\n    \n    budgets.forEach((budget, index) => {\n      try {\n        // Validate structure\n        const validationErrors = DataValidator.validateBudget(budget);\n        if (DataValidator.hasErrors(validationErrors)) {\n          errors.push(`תקציב ${index + 1}: ${DataValidator.getErrorMessages(validationErrors).join(', ')}`);\n        } else {\n          validCount++;\n        }\n        \n        // Check for expired budgets\n        const endDate = new Date(budget.תקופה.end);\n        const now = new Date();\n        if (endDate < now && budget.אקטיבי) {\n          warnings.push(`תקציב ${budget.שם}: פג תוקף אך עדיין פעיל`);\n        }\n        \n      } catch (error) {\n        errors.push(`תקציב ${index + 1}: שגיאה בבדיקה - ${error.message}`);\n      }\n    });\n    \n    return {\n      valid: errors.length === 0,\n      count: budgets.length,\n      validCount,\n      errors,\n      warnings\n    };\n  }\n  \n  static async checkAccounts() {\n    const accounts = StorageAPI.accounts.getAll();\n    const errors = [];\n    const warnings = [];\n    let validCount = 0;\n    \n    // Check for duplicate account numbers\n    const accountNumbers = {};\n    \n    accounts.forEach((account, index) => {\n      try {\n        // Validate structure\n        const validationErrors = DataValidator.validateAccount(account);\n        if (DataValidator.hasErrors(validationErrors)) {\n          errors.push(`חשבון ${index + 1}: ${DataValidator.getErrorMessages(validationErrors).join(', ')}`);\n        } else {\n          validCount++;\n        }\n        \n        // Check for duplicate account numbers\n        if (account.מספר_חשבון && accountNumbers[account.מספר_חשבון]) {\n          warnings.push(`מספר חשבון כפול: ${account.מספר_חשבון}`);\n        } else if (account.מספר_חשבון) {\n          accountNumbers[account.מספר_חשבון] = true;\n        }\n        \n        // Check for very low balances on non-credit accounts\n        if (account.יתרה < -1000 && account.סוג !== 'אשראי') {\n          warnings.push(`חשבון ${account.שם}: יתרה שלילית גבוהה`);\n        }\n        \n      } catch (error) {\n        errors.push(`חשבון ${index + 1}: שגיאה בבדיקה - ${error.message}`);\n      }\n    });\n    \n    return {\n      valid: errors.length === 0,\n      count: accounts.length,\n      validCount,\n      errors,\n      warnings\n    };\n  }\n  \n  static async checkReferences() {\n    const transactions = StorageAPI.transactions.getAll();\n    const categories = StorageAPI.categories.getAll();\n    const accounts = StorageAPI.accounts.getAll();\n    \n    const categoryIds = new Set(categories.map(cat => cat.id));\n    const accountIds = new Set(accounts.map(acc => acc.id));\n    \n    const errors = [];\n    const warnings = [];\n    \n    // Check transaction references\n    transactions.forEach((txn, index) => {\n      if (txn.קטגוריה && !categoryIds.has(txn.קטגוריה)) {\n        errors.push(`עסקה ${index + 1}: קטגוריה לא קיימת - ${txn.קטגוריה}`);\n      }\n      \n      if (txn.חשבון && !accountIds.has(txn.חשבון)) {\n        errors.push(`עסקה ${index + 1}: חשבון לא קיים - ${txn.חשבון}`);\n      }\n    });\n    \n    // Check for unused categories\n    const usedCategories = new Set(transactions.map(txn => txn.קטגוריה));\n    categories.forEach(cat => {\n      if (!usedCategories.has(cat.id)) {\n        warnings.push(`קטגוריה לא בשימוש: ${cat.שם}`);\n      }\n    });\n    \n    // Check for unused accounts\n    const usedAccounts = new Set(transactions.map(txn => txn.חשבון));\n    accounts.forEach(acc => {\n      if (!usedAccounts.has(acc.id)) {\n        warnings.push(`חשבון לא בשימוש: ${acc.שם}`);\n      }\n    });\n    \n    return {\n      valid: errors.length === 0,\n      errors,\n      warnings\n    };\n  }\n  \n  // Auto-repair common issues\n  static async autoRepair() {\n    const results = {\n      repaired: [],\n      couldNotRepair: []\n    };\n    \n    try {\n      // Remove orphaned transactions\n      const transactions = StorageAPI.transactions.getAll();\n      const categories = StorageAPI.categories.getAll();\n      const accounts = StorageAPI.accounts.getAll();\n      \n      const categoryIds = new Set(categories.map(cat => cat.id));\n      const accountIds = new Set(accounts.map(acc => acc.id));\n      \n      let orphanedTransactions = 0;\n      transactions.forEach(txn => {\n        if ((txn.קטגוריה && !categoryIds.has(txn.קטגוריה)) ||\n            (txn.חשבון && !accountIds.has(txn.חשבון))) {\n          try {\n            StorageAPI.transactions.delete(txn.id);\n            orphanedTransactions++;\n          } catch (error) {\n            results.couldNotRepair.push(`לא ניתן למחוק עסקה יתומה: ${txn.id}`);\n          }\n        }\n      });\n      \n      if (orphanedTransactions > 0) {\n        results.repaired.push(`נמחקו ${orphanedTransactions} עסקאות יתומות`);\n      }\n      \n      // Deactivate expired budgets\n      const budgets = StorageAPI.budgets.getAll();\n      let expiredBudgets = 0;\n      \n      budgets.forEach(budget => {\n        const endDate = new Date(budget.תקופה.end);\n        const now = new Date();\n        \n        if (endDate < now && budget.אקטיבי) {\n          try {\n            StorageAPI.budgets.update(budget.id, { אקטיבי: false });\n            expiredBudgets++;\n          } catch (error) {\n            results.couldNotRepair.push(`לא ניתן לכבות תקציב פג תוקף: ${budget.שם}`);\n          }\n        }\n      });\n      \n      if (expiredBudgets > 0) {\n        results.repaired.push(`כובו ${expiredBudgets} תקציבים שפג תוקפם`);\n      }\n      \n    } catch (error) {\n      results.couldNotRepair.push(`שגיאה כללית בתיקון: ${error.message}`);\n    }\n    \n    return results;\n  }\n}\n\n// Public API\nexport const MigrationAPI = {\n  // Migration functions\n  needsMigration: () => DataMigration.needsMigration(),\n  getCurrentVersion: () => DataMigration.getCurrentVersion(),\n  getTargetVersion: () => DataMigration.getTargetVersion(),\n  runMigrations: () => DataMigration.runMigrations(),\n  \n  // Integrity functions\n  checkIntegrity: () => DataIntegrityChecker.checkAllData(),\n  checkTransactions: () => DataIntegrityChecker.checkTransactions(),\n  checkCategories: () => DataIntegrityChecker.checkCategories(),\n  checkBudgets: () => DataIntegrityChecker.checkBudgets(),\n  checkAccounts: () => DataIntegrityChecker.checkAccounts(),\n  checkReferences: () => DataIntegrityChecker.checkReferences(),\n  autoRepair: () => DataIntegrityChecker.autoRepair()\n};\n\nexport default MigrationAPI;","/**\n * Data Management Module for Israeli Personal Finance Dashboard\n * Unified API for all data operations with Hebrew support\n */\n\n// Import all data management modules\nimport StorageAPI from './storage.js';\nimport { DataValidator, VALIDATION_MESSAGES } from './validation.js';\nimport DataBackup from './export.js';\nimport EncryptionAPI from './encryption.js';\nimport SearchAPI from './analytics.js';\nimport MigrationAPI from './migration.js';\nimport { ModelFactory, formatters } from './models.js';\nimport { DATA_SCHEMA, DEFAULT_CATEGORIES, ISRAELI_BANKS } from './schema.js';\n\n// Initialize data system\nclass DataSystem {\n  constructor() {\n    this.initialized = false;\n    this.initPromise = null;\n  }\n\n  async initialize() {\n    if (this.initialized) {\n      return { success: true, message: 'מערכת נתונים כבר מאותחלת' };\n    }\n\n    if (this.initPromise) {\n      return this.initPromise;\n    }\n\n    this.initPromise = this._doInitialization();\n    return this.initPromise;\n  }\n\n  async _doInitialization() {\n    try {\n      console.log('Initializing Israeli Finance Data System...');\n\n      // Check if migrations are needed\n      if (MigrationAPI.needsMigration()) {\n        console.log('Running data migrations...');\n        const migrationResult = await MigrationAPI.runMigrations();\n        if (!migrationResult.success) {\n          throw new Error(`Migration failed: ${migrationResult.error}`);\n        }\n      }\n\n      // Check data integrity\n      const integrityCheck = await MigrationAPI.checkIntegrity();\n      if (!integrityCheck.overall) {\n        console.warn('Data integrity issues found:', integrityCheck.errors);\n        \n        // Attempt auto-repair\n        const repairResult = await MigrationAPI.autoRepair();\n        console.log('Auto-repair results:', repairResult);\n      }\n\n      // Verify storage is available\n      if (!StorageAPI.utils.isAvailable()) {\n        throw new Error('localStorage not available');\n      }\n\n      // Get system stats\n      const stats = StorageAPI.utils.getStats();\n      console.log('Data system stats:', stats);\n\n      this.initialized = true;\n      \n      return {\n        success: true,\n        message: 'מערכת נתונים אותחלה בהצלחה',\n        stats,\n        version: MigrationAPI.getCurrentVersion(),\n        encryptionEnabled: EncryptionAPI.isEnabled()\n      };\n\n    } catch (error) {\n      console.error('Data system initialization failed:', error);\n      return {\n        success: false,\n        error: `שגיאה באתחול מערכת נתונים: ${error.message}`\n      };\n    }\n  }\n\n  // Get system status\n  getStatus() {\n    return {\n      initialized: this.initialized,\n      version: MigrationAPI.getCurrentVersion(),\n      targetVersion: MigrationAPI.getTargetVersion(),\n      needsMigration: MigrationAPI.needsMigration(),\n      encryptionEnabled: EncryptionAPI.isEnabled(),\n      storageAvailable: StorageAPI.utils.isAvailable(),\n      stats: StorageAPI.utils.getStats()\n    };\n  }\n}\n\n// Create singleton instance\nconst dataSystem = new DataSystem();\n\n// Main Data API - unified interface for all data operations\nexport const DataAPI = {\n  // System management\n  system: {\n    initialize: () => dataSystem.initialize(),\n    getStatus: () => dataSystem.getStatus(),\n    clearAll: () => StorageAPI.utils.clearAll(),\n    getStats: () => StorageAPI.utils.getStats()\n  },\n\n  // Core CRUD operations\n  transactions: StorageAPI.transactions,\n  categories: StorageAPI.categories,\n  budgets: StorageAPI.budgets,\n  accounts: StorageAPI.accounts,\n  settings: StorageAPI.settings,\n  templates: StorageAPI.templates,\n\n  // Data validation\n  validation: {\n    validate: DataValidator,\n    messages: VALIDATION_MESSAGES,\n    validateTransaction: (txn) => DataValidator.validateTransaction(txn),\n    validateCategory: (cat) => DataValidator.validateCategory(cat),\n    validateBudget: (budget) => DataValidator.validateBudget(budget),\n    validateAccount: (account) => DataValidator.validateAccount(account),\n    hasErrors: (result) => DataValidator.hasErrors(result),\n    getErrorMessages: (result) => DataValidator.getErrorMessages(result)\n  },\n\n  // Search and analytics\n  search: SearchAPI.search,\n  filter: SearchAPI.filter,\n  analytics: SearchAPI.analytics,\n\n  // Data export/import\n  backup: {\n    export: DataBackup.exportAll,\n    exportTransactions: DataBackup.exportTransactions,\n    exportCategories: DataBackup.exportCategories,\n    exportForBank: DataBackup.exportForBank,\n    import: DataBackup.importBackup,\n    importTransactions: DataBackup.importTransactions,\n    download: DataBackup.download,\n    supportedFormats: DataBackup.supportedFormats\n  },\n\n  // Encryption management\n  encryption: {\n    isEnabled: EncryptionAPI.isEnabled,\n    enable: EncryptionAPI.enable,\n    disable: EncryptionAPI.disable,\n    getStatus: EncryptionAPI.getStatus,\n    updateSetting: EncryptionAPI.updateSetting\n  },\n\n  // Migration and integrity\n  migration: {\n    needsMigration: MigrationAPI.needsMigration,\n    getCurrentVersion: MigrationAPI.getCurrentVersion,\n    getTargetVersion: MigrationAPI.getTargetVersion,\n    runMigrations: MigrationAPI.runMigrations,\n    checkIntegrity: MigrationAPI.checkIntegrity,\n    autoRepair: MigrationAPI.autoRepair\n  },\n\n  // Utility functions\n  utils: {\n    formatters,\n    createTransaction: (data) => ModelFactory.createTransaction(data),\n    createCategory: (data) => ModelFactory.createCategory(data),\n    createBudget: (data) => ModelFactory.createBudget(data),\n    createAccount: (data) => ModelFactory.createAccount(data),\n    createSettings: (data) => ModelFactory.createSettings(data),\n    createDefaultCategories: () => ModelFactory.createDefaultCategories(),\n    createDefaultAccount: () => ModelFactory.createDefaultAccount(),\n    normalizeHebrew: SearchAPI.utils.normalizeHebrew\n  },\n\n  // Constants and schemas\n  schema: DATA_SCHEMA,\n  defaultCategories: DEFAULT_CATEGORIES,\n  israeliBanks: ISRAELI_BANKS\n};\n\n// Auto-initialize on module load\nDataAPI.system.initialize().then(result => {\n  if (result.success) {\n    console.log('✅ Israeli Finance Data System initialized successfully');\n    console.log(`📊 Version: ${result.version}`);\n    console.log(`🔒 Encryption: ${result.encryptionEnabled ? 'Enabled' : 'Disabled'}`);\n    console.log(`📈 Stats:`, result.stats);\n  } else {\n    console.error('❌ Data system initialization failed:', result.error);\n  }\n});\n\n// Export individual modules for advanced usage\nexport {\n  StorageAPI,\n  DataValidator,\n  DataBackup,\n  EncryptionAPI,\n  SearchAPI,\n  MigrationAPI,\n  ModelFactory,\n  formatters,\n  DATA_SCHEMA,\n  DEFAULT_CATEGORIES,\n  ISRAELI_BANKS\n};\n\n// Convenience wrapper for easier component usage\nexport const DataManager = {\n  // Transactions\n  getTransactions: () => DataAPI.transactions.getAll(),\n  addTransaction: (data) => DataAPI.transactions.save(data),\n  updateTransaction: (id, data) => DataAPI.transactions.update(id, data),\n  deleteTransaction: (id) => DataAPI.transactions.delete(id),\n  searchTransactions: (query) => DataAPI.search.transactions(query),\n\n  // Categories\n  getCategories: () => DataAPI.categories.getAll(),\n  addCategory: (data) => DataAPI.categories.save(data),\n  updateCategory: (id, data) => DataAPI.categories.update(id, data),\n  deleteCategory: (id) => DataAPI.categories.delete(id),\n\n  // Accounts\n  getAccounts: () => DataAPI.accounts.getAll(),\n  addAccount: (data) => DataAPI.accounts.save(data),\n  updateAccount: (id, data) => DataAPI.accounts.update(id, data),\n  deleteAccount: (id) => DataAPI.accounts.delete(id),\n\n  // Templates\n  getTransactionTemplates: () => DataAPI.templates.getAll(),\n  saveTransactionTemplate: (data) => DataAPI.templates.save(data),\n  updateTransactionTemplate: (id, data) => DataAPI.templates.update(id, data),\n  deleteTransactionTemplate: (id) => DataAPI.templates.delete(id),\n  getTemplatesByType: (type) => DataAPI.templates.getByType(type),\n\n  // Export\n  exportTransactions: (transactions, options) => DataAPI.backup.exportTransactions(transactions, options),\n\n  // Validation\n  validateTransaction: (data) => DataAPI.validation.validateTransaction(data),\n  validateCategory: (data) => DataAPI.validation.validateCategory(data)\n};\n\n// Export as default\nexport default DataAPI;","// Personal Finance Dashboard - Israeli Edition\n// Main application entry point - Fixed for Vite production builds\n\nconsole.log('🏦 Israeli Finance Dashboard - Starting up...');\n\n// Static ES6 imports that work with Vite bundling\nimport { IsraeliSalaryCalculator } from './utils/israeli-salary-calculator.js';\nimport { FINANCIAL_TERMS } from './utils/hebrew-financial-terms.js';\nimport { ISRAELI_FINANCIAL_TIPS } from './utils/israeli-financial-tips.js';\nimport { ThemeToggle } from './components/ThemeToggle.js';\nimport { TransactionForm } from './components/TransactionForm.js';\nimport { CategoryManager } from './components/CategoryManager.js';\nimport { DataAPI, DataManager } from './data/index.js';\n\n// Make components available globally for backward compatibility\nwindow.IsraeliSalaryCalculator = IsraeliSalaryCalculator;\nwindow.HEBREW_FINANCIAL_TERMS = FINANCIAL_TERMS;\nwindow.ISRAELI_FINANCIAL_TIPS = ISRAELI_FINANCIAL_TIPS;\nwindow.ThemeToggle = ThemeToggle;\nwindow.TransactionForm = TransactionForm;\nwindow.CategoryManager = CategoryManager;\nwindow.DataAPI = DataAPI;\nwindow.DataManager = DataManager;\n\n// Initialize app when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n    initializeApp();\n});\n\nasync function initializeApp() {\n    console.log('📦 ES6 modules loaded via static imports');\n    \n    // Load remaining components via script tags (those with conditional exports)\n    await loadScriptBasedComponents();\n    \n    // Hide loading screen and show app\n    setTimeout(() => {\n        const loading = document.getElementById('loading');\n        const app = document.getElementById('app');\n        \n        if (loading) loading.style.display = 'none';\n        if (app) app.style.display = 'block';\n        \n        console.log('✅ App initialized successfully');\n    }, 1000);\n    \n    // Set up event listeners\n    setupEventListeners();\n    \n    // Initialize Hebrew number formatting\n    initializeHebrewFormatting();\n    \n    // Check for saved data\n    checkStoredData();\n    \n    // Initialize UI components\n    initializeUIComponents();\n    \n    // Initialize theme system\n    initializeThemeSystem();\n}\n\nasync function loadScriptBasedComponents() {\n    // Only load components that have conditional exports and can't be imported as ES6 modules\n    const componentFiles = [\n        './src/utils/israeli-formatting.js',\n        './src/components/Button.js',\n        './src/components/Input.js', \n        './src/components/Navigation.js',\n        './src/components/Modal.js',\n        './src/components/Toast.js',\n        './src/components/Dashboard.js',\n        './src/components/TransactionList.js',\n        './src/components/Charts.js'\n    ];\n\n    try {\n        // Load remaining component files using script tags\n        for (const file of componentFiles) {\n            await loadScript(file);\n        }\n        \n        console.log('📦 Hebrew UI Components loaded successfully');\n        console.log('💾 Data Management System loaded successfully');\n        \n        // Check if critical components are available\n        const criticalComponents = ['Button', 'Toast', 'Modal'];\n        const missingComponents = criticalComponents.filter(comp => !window[comp]);\n        \n        if (missingComponents.length > 0) {\n            console.warn('⚠️ Some critical components are missing:', missingComponents);\n        }\n        \n    } catch (error) {\n        console.error('❌ Error loading components:', error);\n        \n        // Try to show error via basic alert if HebrewToasts is not available\n        if (typeof HebrewToasts !== 'undefined') {\n            HebrewToasts.error('שגיאה בטעינת רכיבי ממשק המשתמש');\n        } else {\n            console.error('Toast system not available - using basic alert');\n            alert('שגיאה בטעינת רכיבי ממשק המשתמש - חלק מהפונקציות עלולות להיות לא זמינות');\n        }\n    }\n}\n\nfunction loadScript(src) {\n    return new Promise((resolve, reject) => {\n        const script = document.createElement('script');\n        script.src = src;\n        script.onload = () => {\n            console.log(`📦 Script loaded: ${src}`);\n            resolve();\n        };\n        script.onerror = (error) => {\n            console.error(`❌ Failed to load script: ${src}`, error);\n            \n            // Show user-friendly error for critical components\n            if (src.includes('Button') || src.includes('Toast') || src.includes('Modal')) {\n                console.warn(`⚠️ Critical UI component ${src} failed to load - some UI features may be unavailable`);\n            }\n            \n            // Don't reject to allow other scripts to continue loading\n            resolve(); // Resolve instead of reject to prevent stopping the entire loading process\n        };\n        document.head.appendChild(script);\n    });\n}\n\nfunction setupEventListeners() {\n    // Start app button\n    window.startApp = function() {\n        console.log('🚀 Starting main application...');\n        \n        // Show demo of our component library\n        if (window.ComponentUtils) {\n            showComponentDemo();\n        } else {\n            // Fallback for when components aren't loaded yet\n            HebrewToasts?.info('מערכת הרכיבים עדיין נטענת...') || \n            alert('ברוכים הבאים! המערכת תהיה זמינה בקרוב.');\n        }\n    };\n    \n    // Navigation clicks\n    document.querySelectorAll('.nav a').forEach(link => {\n        link.addEventListener('click', (e) => {\n            e.preventDefault();\n            const section = e.target.getAttribute('href').substring(1);\n            console.log(`Navigating to: ${section}`);\n            \n            // Show appropriate section\n            if (window.HebrewToasts) {\n                HebrewToasts.info(`ניווט אל: ${getSectionName(section)}`);\n            }\n        });\n    });\n}\n\nfunction getSectionName(section) {\n    const sectionNames = {\n        'dashboard': 'לוח בקרה',\n        'transactions': 'עסקאות', \n        'budget': 'תקציב',\n        'reports': 'דוחות',\n        'settings': 'הגדרות'\n    };\n    return sectionNames[section] || section;\n}\n\nfunction showComponentDemo() {\n    // Create and show component demo\n    const demo = ComponentUtils.createDemo();\n    \n    // Replace main content with demo\n    const mainContent = document.querySelector('.main');\n    if (mainContent) {\n        // Store original content\n        const originalContent = mainContent.innerHTML;\n        \n        // Add back button\n        const backButton = new Button({ type: 'secondary', icon: '←' })\n            .render('חזור לדף הבית', () => {\n                mainContent.innerHTML = originalContent;\n                // Re-attach event listeners\n                setupEventListeners();\n                HebrewToasts.info('חזרת לדף הבית');\n            });\n        \n        demo.insertBefore(backButton, demo.firstChild);\n        \n        // Replace content\n        mainContent.innerHTML = '';\n        mainContent.appendChild(demo);\n        \n        // Show success message\n        HebrewToasts.success('ברוכים הבאים למערכת הרכיבים החדשה!', 'מערכת רכיבים');\n    }\n}\n\nfunction initializeUIComponents() {\n    // Initialize global UI components after everything is loaded\n    if (typeof HebrewNavigation !== 'undefined') {\n        console.log('🎨 UI Components ready');\n        \n        // Add component demo button to header if in development\n        if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\n            addDemoButton();\n        }\n        \n        // Initialize tooltips, keyboard shortcuts, etc.\n        initializeKeyboardShortcuts();\n        \n        // Show welcome toast\n        setTimeout(() => {\n            if (window.HebrewToasts) {\n                HebrewToasts.info('מערכת הרכיבים הישראלית מוכנה לשימוש!', 'מוכן');\n            }\n        }, 2000);\n    }\n}\n\nfunction addDemoButton() {\n    // Add demo button to header for development\n    const headerContent = document.querySelector('.header-content');\n    if (headerContent && window.Button) {\n        const demoButton = new Button({ \n            type: 'secondary', \n            size: 'sm',\n            style: { \n                marginRight: '1rem',\n                backgroundColor: 'rgba(255, 255, 255, 0.2)',\n                color: 'white',\n                border: '1px solid rgba(255, 255, 255, 0.3)'\n            }\n        }).render('🧪 Demo', () => {\n            if (window.ComponentUtils) {\n                showComponentDemo();\n            }\n        });\n        \n        headerContent.appendChild(demoButton);\n    }\n}\n\nfunction initializeKeyboardShortcuts() {\n    // Add keyboard shortcuts for better UX\n    document.addEventListener('keydown', (e) => {\n        // Ctrl/Cmd + D for demo\n        if ((e.ctrlKey || e.metaKey) && e.key === 'd') {\n            e.preventDefault();\n            if (window.ComponentUtils) {\n                showComponentDemo();\n            }\n        }\n        \n        // Escape to close modals\n        if (e.key === 'Escape') {\n            // Close any open modals\n            document.querySelectorAll('.modal.show').forEach(modal => {\n                if (modal.close) modal.close();\n            });\n        }\n    });\n}\n\nfunction initializeHebrewFormatting() {\n    // Initialize Hebrew number formatting and Israeli-specific utilities\n    if (typeof IsraeliFormatter !== 'undefined') {\n        console.log('🔤 Enhanced Hebrew formatting initialized');\n        \n        // Create global formatter instance\n        window.israeliFormatter = new IsraeliFormatter();\n        console.log('✅ Israeli Formatter loaded successfully');\n        \n        // Test formatting functions\n        console.log('Currency test (basic):', window.israeliFormatter.formatCurrency(1234.56));\n        console.log('Currency test (compact):', window.israeliFormatter.formatCurrency(1500000, { compact: true }));\n        console.log('Currency test (no symbol):', window.israeliFormatter.formatCurrency(999.99, { showSymbol: false }));\n        \n        // Test number formatting\n        console.log('Number test (basic):', window.israeliFormatter.formatNumber(1234567));\n        console.log('Number test (compact):', window.israeliFormatter.formatNumber(2500000, { compact: true }));\n        \n        // Test date formatting\n        console.log('Date test (medium):', window.israeliFormatter.formatDate(new Date(), 'medium'));\n        console.log('Date test (long):', window.israeliFormatter.formatDate(new Date(), 'long'));\n        \n        // Test Israeli-specific formatting\n        console.log('Tax year test:', window.israeliFormatter.getTaxYear());\n        console.log('Phone test:', window.israeliFormatter.formatPhone('0523456789'));\n        console.log('ID test:', window.israeliFormatter.formatIsraeliID('123456789'));\n        console.log('Percentage test:', window.israeliFormatter.formatPercentage(0.155));\n        \n        // Display current tax year info\n        const currentTaxYear = window.israeliFormatter.getCurrentTaxYearInfo();\n        console.log('📅 Current tax year:', currentTaxYear.displayName);\n        console.log('📅 Tax year period:', currentTaxYear.period);\n    }\n}\n\nfunction checkStoredData() {\n    // Check if we have any stored financial data\n    setTimeout(() => {\n        if (window.DataAPI) {\n            console.log('💾 DataAPI loaded successfully - checking stored data...');\n            // Add data checking logic here when DataAPI is ready\n        } else {\n            console.log('⏳ DataAPI not loaded yet - will check data later');\n        }\n    }, 1000);\n}\n\nfunction initializeThemeSystem() {\n    // Initialize theme system with Hebrew support\n    if (typeof ThemeToggle !== 'undefined') {\n        console.log('🎨 Initializing theme system...');\n        \n        // Create theme toggle instance\n        const themeToggle = new ThemeToggle({\n            showLabel: true,\n            position: 'top-right'\n        });\n        \n        // Add to navigation or header\n        const headerActions = document.querySelector('.header-content');\n        if (headerActions) {\n            const toggleContainer = document.createElement('div');\n            toggleContainer.className = 'theme-toggle-container';\n            toggleContainer.style.marginLeft = 'var(--spacing-md)';\n            \n            // Create toggle button HTML\n            toggleContainer.innerHTML = themeToggle.getHTML();\n            headerActions.appendChild(toggleContainer);\n            \n            // Set up click handler\n            const toggleButton = toggleContainer.querySelector('.theme-toggle');\n            if (toggleButton) {\n                toggleButton.addEventListener('click', () => {\n                    themeToggle.toggleTheme();\n                });\n            }\n        } else {\n            // Fallback: add as fixed position toggle\n            document.body.appendChild(themeToggle.render());\n            themeToggle.toggleButton.classList.add('theme-toggle-fixed', 'theme-toggle-top-right');\n        }\n        \n        // Listen for theme changes\n        document.addEventListener('themeChanged', (e) => {\n            console.log('🌓 Theme changed to:', e.detail.theme);\n            \n            // Show theme change notification\n            if (window.HebrewToasts) {\n                const message = e.detail.theme === 'dark' ? 'עברת למצב לילה' : 'עברת למצב יום';\n                HebrewToasts.info(message, 'שינוי נושא');\n            }\n        });\n        \n        // Apply saved theme on startup\n        const savedTheme = localStorage.getItem('theme') || 'light';\n        document.documentElement.setAttribute('data-theme', savedTheme);\n        \n        console.log('✅ Theme system initialized');\n    } else {\n        console.warn('⚠️ ThemeToggle component not loaded');\n    }\n}\n\n// Error handling\nwindow.addEventListener('error', (e) => {\n    console.error('Application error:', e.error);\n    // Error reporting will be implemented in future phases\n});\n\n// Service worker registration (for PWA functionality)\nif ('serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n        // Use correct path for service worker - works for both local and GitHub Pages\n        navigator.serviceWorker.register('./sw.js')\n            .then(registration => {\n                console.log('SW registered: ', registration);\n            })\n            .catch(registrationError => {\n                console.log('SW registration failed: ', registrationError);\n            });\n    });\n}\n\nconsole.log('🏁 Main.js loaded successfully');"],"file":"assets/index-oTqquyTL.js"}